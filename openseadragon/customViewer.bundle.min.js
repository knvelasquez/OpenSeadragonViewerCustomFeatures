!function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("EDMViewer", [], t) : "object" == typeof exports ? exports.EDMViewer = t() : e.EDMViewer = t()
}(window, function() {
    return d = [function(e, t, i) {
        "use strict";
        i.r(t),
        i.d(t, "EDMViewer", function() {
            return h
        }),
        i.d(t, "EDMViewerClass", function() {
            return s
        });
        var n = i(1)
          , a = i.n(n)
          , l = i(2)
          , r = i(9)
          , o = i.n(r);
        function u(e, t) {
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                n.enumerable = n.enumerable || !1,
                n.configurable = !0,
                "value"in n && (n.writable = !0),
                Object.defineProperty(e, n.key, n)
            }
        }
        window.BSON = l.default;
        var s = function() {
            function s(e) {
                !function(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, s);
                var o = this;
                this.caseName = e.caseName,
                this.socketURL = e.socketURL,
                this.containerID = e.containerID,
                this.useEXIF = e.useEXIF,
                this.dziUrl = e.dziUrl,
                (this.socketCreated = !1) === Object.prototype.hasOwnProperty.call(window, "osdSocket") && (this.socketCreated = !0,
                window.osdSocket = new WebSocket(o.socketURL),
                window.osdSocket.binaryType = "arraybuffer",
                window.osdSocketUseBuffer = !0,
                window.osdSocketJobs = {},
                window.osdSocket.onmessage = function(e) {
                    if (o.useEXIF) {
                        var t = a.a.readFromBinaryFile(e.data)
                          , i = s.arrayBufferToBase64(e.data)
                          , n = t.ImageUniqueID;
                        window.osdSocketJobs[n].image.src = "data:image/jpeg;base64,".concat(i)
                    } else {
                        var r = e.data instanceof ArrayBuffer ? l.default.deserialize(new Uint8Array(e.data)) : JSON.parse(e.data);
                        window.osdSocketJobs[r.id].image.src = r.src
                    }
                }
                ,
                window.osdSocket.onclose = function() {}
                ),
                this.viewer = null,
                this.socketCreated ? window.osdSocket.onopen = function() {
                    o.loadViewer(e)
                }
                : o.loadViewer(e)
            }
            return function(e, t, i) {
                t && u(e.prototype, t),
                i && u(e, i)
            }(s, [{
                key: "loadViewer",
                value: function(e) {                                                           
                    this.viewer = o()(
                        //Fix to merge two objects for custom viewer
                        Object.assign(e,{
                            id: this.containerID,
                            showNavigator: !0,
                            prefixUrl: "https://cdn.jsdelivr.net/npm/openseadragon@2.3/build/openseadragon/images/",
                            tileSources: this.dziUrl,
                            zoomPerScroll: 1.44
                        })
                    ),
                    this.viewer.addHandler("open", function() {})
                }
            }], [{
                key: "arrayBufferToBase64",
                value: function(e) {
                    for (var t = "", i = new Uint8Array(e), n = i.byteLength, r = 0; r < n; r += 1)
                        t += String.fromCharCode(i[r]);
                    return window.btoa(t)
                }
            }]),
            s
        }();
        function h(e) {
            return new s(e)
        }
    }
    , function(e, t, i) {
        var l;
        (function() {
            var h = !1
              , s = function(e) {
                return e instanceof s ? e : this instanceof s ? void (this.EXIFwrapped = e) : new s(e)
            };
            e.exports && (t = e.exports = s);
            var u = (t.EXIF = s).Tags = {
                36864: "ExifVersion",
                40960: "FlashpixVersion",
                40961: "ColorSpace",
                40962: "PixelXDimension",
                40963: "PixelYDimension",
                37121: "ComponentsConfiguration",
                37122: "CompressedBitsPerPixel",
                37500: "MakerNote",
                37510: "UserComment",
                40964: "RelatedSoundFile",
                36867: "DateTimeOriginal",
                36868: "DateTimeDigitized",
                37520: "SubsecTime",
                37521: "SubsecTimeOriginal",
                37522: "SubsecTimeDigitized",
                33434: "ExposureTime",
                33437: "FNumber",
                34850: "ExposureProgram",
                34852: "SpectralSensitivity",
                34855: "ISOSpeedRatings",
                34856: "OECF",
                37377: "ShutterSpeedValue",
                37378: "ApertureValue",
                37379: "BrightnessValue",
                37380: "ExposureBias",
                37381: "MaxApertureValue",
                37382: "SubjectDistance",
                37383: "MeteringMode",
                37384: "LightSource",
                37385: "Flash",
                37396: "SubjectArea",
                37386: "FocalLength",
                41483: "FlashEnergy",
                41484: "SpatialFrequencyResponse",
                41486: "FocalPlaneXResolution",
                41487: "FocalPlaneYResolution",
                41488: "FocalPlaneResolutionUnit",
                41492: "SubjectLocation",
                41493: "ExposureIndex",
                41495: "SensingMethod",
                41728: "FileSource",
                41729: "SceneType",
                41730: "CFAPattern",
                41985: "CustomRendered",
                41986: "ExposureMode",
                41987: "WhiteBalance",
                41988: "DigitalZoomRation",
                41989: "FocalLengthIn35mmFilm",
                41990: "SceneCaptureType",
                41991: "GainControl",
                41992: "Contrast",
                41993: "Saturation",
                41994: "Sharpness",
                41995: "DeviceSettingDescription",
                41996: "SubjectDistanceRange",
                40965: "InteroperabilityIFDPointer",
                42016: "ImageUniqueID"
            }
              , c = s.TiffTags = {
                256: "ImageWidth",
                257: "ImageHeight",
                34665: "ExifIFDPointer",
                34853: "GPSInfoIFDPointer",
                40965: "InteroperabilityIFDPointer",
                258: "BitsPerSample",
                259: "Compression",
                262: "PhotometricInterpretation",
                274: "Orientation",
                277: "SamplesPerPixel",
                284: "PlanarConfiguration",
                530: "YCbCrSubSampling",
                531: "YCbCrPositioning",
                282: "XResolution",
                283: "YResolution",
                296: "ResolutionUnit",
                273: "StripOffsets",
                278: "RowsPerStrip",
                279: "StripByteCounts",
                513: "JPEGInterchangeFormat",
                514: "JPEGInterchangeFormatLength",
                301: "TransferFunction",
                318: "WhitePoint",
                319: "PrimaryChromaticities",
                529: "YCbCrCoefficients",
                532: "ReferenceBlackWhite",
                306: "DateTime",
                270: "ImageDescription",
                271: "Make",
                272: "Model",
                305: "Software",
                315: "Artist",
                33432: "Copyright"
            }
              , d = s.GPSTags = {
                0: "GPSVersionID",
                1: "GPSLatitudeRef",
                2: "GPSLatitude",
                3: "GPSLongitudeRef",
                4: "GPSLongitude",
                5: "GPSAltitudeRef",
                6: "GPSAltitude",
                7: "GPSTimeStamp",
                8: "GPSSatellites",
                9: "GPSStatus",
                10: "GPSMeasureMode",
                11: "GPSDOP",
                12: "GPSSpeedRef",
                13: "GPSSpeed",
                14: "GPSTrackRef",
                15: "GPSTrack",
                16: "GPSImgDirectionRef",
                17: "GPSImgDirection",
                18: "GPSMapDatum",
                19: "GPSDestLatitudeRef",
                20: "GPSDestLatitude",
                21: "GPSDestLongitudeRef",
                22: "GPSDestLongitude",
                23: "GPSDestBearingRef",
                24: "GPSDestBearing",
                25: "GPSDestDistanceRef",
                26: "GPSDestDistance",
                27: "GPSProcessingMethod",
                28: "GPSAreaInformation",
                29: "GPSDateStamp",
                30: "GPSDifferential"
            }
              , f = s.IFD1Tags = {
                256: "ImageWidth",
                257: "ImageHeight",
                258: "BitsPerSample",
                259: "Compression",
                262: "PhotometricInterpretation",
                273: "StripOffsets",
                274: "Orientation",
                277: "SamplesPerPixel",
                278: "RowsPerStrip",
                279: "StripByteCounts",
                282: "XResolution",
                283: "YResolution",
                284: "PlanarConfiguration",
                296: "ResolutionUnit",
                513: "JpegIFOffset",
                514: "JpegIFByteCount",
                529: "YCbCrCoefficients",
                530: "YCbCrSubSampling",
                531: "YCbCrPositioning",
                532: "ReferenceBlackWhite"
            }
              , p = s.StringValues = {
                ExposureProgram: {
                    0: "Not defined",
                    1: "Manual",
                    2: "Normal program",
                    3: "Aperture priority",
                    4: "Shutter priority",
                    5: "Creative program",
                    6: "Action program",
                    7: "Portrait mode",
                    8: "Landscape mode"
                },
                MeteringMode: {
                    0: "Unknown",
                    1: "Average",
                    2: "CenterWeightedAverage",
                    3: "Spot",
                    4: "MultiSpot",
                    5: "Pattern",
                    6: "Partial",
                    255: "Other"
                },
                LightSource: {
                    0: "Unknown",
                    1: "Daylight",
                    2: "Fluorescent",
                    3: "Tungsten (incandescent light)",
                    4: "Flash",
                    9: "Fine weather",
                    10: "Cloudy weather",
                    11: "Shade",
                    12: "Daylight fluorescent (D 5700 - 7100K)",
                    13: "Day white fluorescent (N 4600 - 5400K)",
                    14: "Cool white fluorescent (W 3900 - 4500K)",
                    15: "White fluorescent (WW 3200 - 3700K)",
                    17: "Standard light A",
                    18: "Standard light B",
                    19: "Standard light C",
                    20: "D55",
                    21: "D65",
                    22: "D75",
                    23: "D50",
                    24: "ISO studio tungsten",
                    255: "Other"
                },
                Flash: {
                    0: "Flash did not fire",
                    1: "Flash fired",
                    5: "Strobe return light not detected",
                    7: "Strobe return light detected",
                    9: "Flash fired, compulsory flash mode",
                    13: "Flash fired, compulsory flash mode, return light not detected",
                    15: "Flash fired, compulsory flash mode, return light detected",
                    16: "Flash did not fire, compulsory flash mode",
                    24: "Flash did not fire, auto mode",
                    25: "Flash fired, auto mode",
                    29: "Flash fired, auto mode, return light not detected",
                    31: "Flash fired, auto mode, return light detected",
                    32: "No flash function",
                    65: "Flash fired, red-eye reduction mode",
                    69: "Flash fired, red-eye reduction mode, return light not detected",
                    71: "Flash fired, red-eye reduction mode, return light detected",
                    73: "Flash fired, compulsory flash mode, red-eye reduction mode",
                    77: "Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",
                    79: "Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",
                    89: "Flash fired, auto mode, red-eye reduction mode",
                    93: "Flash fired, auto mode, return light not detected, red-eye reduction mode",
                    95: "Flash fired, auto mode, return light detected, red-eye reduction mode"
                },
                SensingMethod: {
                    1: "Not defined",
                    2: "One-chip color area sensor",
                    3: "Two-chip color area sensor",
                    4: "Three-chip color area sensor",
                    5: "Color sequential area sensor",
                    7: "Trilinear sensor",
                    8: "Color sequential linear sensor"
                },
                SceneCaptureType: {
                    0: "Standard",
                    1: "Landscape",
                    2: "Portrait",
                    3: "Night scene"
                },
                SceneType: {
                    1: "Directly photographed"
                },
                CustomRendered: {
                    0: "Normal process",
                    1: "Custom process"
                },
                WhiteBalance: {
                    0: "Auto white balance",
                    1: "Manual white balance"
                },
                GainControl: {
                    0: "None",
                    1: "Low gain up",
                    2: "High gain up",
                    3: "Low gain down",
                    4: "High gain down"
                },
                Contrast: {
                    0: "Normal",
                    1: "Soft",
                    2: "Hard"
                },
                Saturation: {
                    0: "Normal",
                    1: "Low saturation",
                    2: "High saturation"
                },
                Sharpness: {
                    0: "Normal",
                    1: "Soft",
                    2: "Hard"
                },
                SubjectDistanceRange: {
                    0: "Unknown",
                    1: "Macro",
                    2: "Close view",
                    3: "Distant view"
                },
                FileSource: {
                    3: "DSC"
                },
                Components: {
                    0: "",
                    1: "Y",
                    2: "Cb",
                    3: "Cr",
                    4: "R",
                    5: "G",
                    6: "B"
                }
            };
            function r(e) {
                return !!e.exifdata
            }
            function i(r, o) {
                function t(e) {
                    var t = a(e);
                    r.exifdata = t || {};
                    var i = function(e) {
                        var t = new DataView(e);
                        h && console.log("Got file of length " + e.byteLength);
                        if (255 != t.getUint8(0) || 216 != t.getUint8(1))
                            return h && console.log("Not a valid JPEG"),
                            !1;
                        var i = 2
                          , n = e.byteLength;
                        for (; i < n; ) {
                            if (l = i,
                            56 === (a = t).getUint8(l) && 66 === a.getUint8(l + 1) && 73 === a.getUint8(l + 2) && 77 === a.getUint8(l + 3) && 4 === a.getUint8(l + 4) && 4 === a.getUint8(l + 5)) {
                                var r = t.getUint8(i + 7);
                                r % 2 != 0 && (r += 1),
                                0 === r && (r = 4);
                                var o = i + 8 + r
                                  , s = t.getUint16(i + 6 + r);
                                return m(e, o, s)
                            }
                            i++
                        }
                        var a, l
                    }(e);
                    if (r.iptcdata = i || {},
                    s.isXmpEnabled) {
                        var n = function(e) {
                            if (!("DOMParser"in self))
                                return;
                            var t = new DataView(e);
                            h && console.log("Got file of length " + e.byteLength);
                            if (255 != t.getUint8(0) || 216 != t.getUint8(1))
                                return h && console.log("Not a valid JPEG"),
                                !1;
                            var i = 2
                              , n = e.byteLength
                              , r = new DOMParser;
                            for (; i < n - 4; ) {
                                if ("http" == y(t, i, 4)) {
                                    var o = i - 1
                                      , s = t.getUint16(i - 2) - 1
                                      , a = y(t, o, s)
                                      , l = a.indexOf("xmpmeta>") + 8
                                      , u = (a = a.substring(a.indexOf("<x:xmpmeta"), l)).indexOf("x:xmpmeta") + 10;
                                    return a = a.slice(0, u) + 'xmlns:Iptc4xmpCore="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tiff="http://ns.adobe.com/tiff/1.0/" xmlns:plus="http://schemas.android.com/apk/lib/com.google.android.gms.plus" xmlns:ext="http://www.gettyimages.com/xsltExtension/1.0" xmlns:exif="http://ns.adobe.com/exif/1.0/" xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#" xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#" xmlns:crs="http://ns.adobe.com/camera-raw-settings/1.0/" xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/" xmlns:Iptc4xmpExt="http://iptc.org/std/Iptc4xmpExt/2008-02-29/" ' + a.slice(u),
                                    b(r.parseFromString(a, "text/xml"))
                                }
                                i++
                            }
                        }(e);
                        r.xmpdata = n || {}
                    }
                    o && o.call(r)
                }
                if (r.src)
                    if (/^data\:/i.test(r.src))
                        t(function(e, t) {
                            t = t || e.match(/^data\:([^\;]+)\;base64,/im)[1] || "",
                            e = e.replace(/^data\:([^\;]+)\;base64,/gim, "");
                            for (var i = atob(e), n = i.length, r = new ArrayBuffer(n), o = new Uint8Array(r), s = 0; s < n; s++)
                                o[s] = i.charCodeAt(s);
                            return r
                        }(r.src));
                    else if (/^blob\:/i.test(r.src)) {
                        (i = new FileReader).onload = function(e) {
                            t(e.target.result)
                        }
                        ,
                        function(e, t) {
                            var i = new XMLHttpRequest;
                            i.open("GET", e, !0),
                            i.responseType = "blob",
                            i.onload = function(e) {
                                200 != this.status && 0 !== this.status || t(this.response)
                            }
                            ,
                            i.send()
                        }(r.src, function(e) {
                            i.readAsArrayBuffer(e)
                        })
                    } else {
                        var e = new XMLHttpRequest;
                        e.onload = function() {
                            if (200 != this.status && 0 !== this.status)
                                throw "Could not load image";
                            t(e.response),
                            e = null
                        }
                        ,
                        e.open("GET", r.src, !0),
                        e.responseType = "arraybuffer",
                        e.send(null)
                    }
                else if (self.FileReader && (r instanceof self.Blob || r instanceof self.File)) {
                    var i;
                    (i = new FileReader).onload = function(e) {
                        h && console.log("Got file of length " + e.target.result.byteLength),
                        t(e.target.result)
                    }
                    ,
                    i.readAsArrayBuffer(r)
                }
            }
            function a(e) {
                var t = new DataView(e);
                if (h && console.log("Got file of length " + e.byteLength),
                255 != t.getUint8(0) || 216 != t.getUint8(1))
                    return h && console.log("Not a valid JPEG"),
                    !1;
                for (var i, n = 2, r = e.byteLength; n < r; ) {
                    if (255 != t.getUint8(n))
                        return h && console.log("Not a valid marker at offset " + n + ", found: " + t.getUint8(n)),
                        !1;
                    if (i = t.getUint8(n + 1),
                    h && console.log(i),
                    225 == i)
                        return h && console.log("Found 0xFFE1 marker"),
                        o(t, n + 4, t.getUint16(n + 2));
                    n += 2 + t.getUint16(n + 2)
                }
            }
            var g = {
                120: "caption",
                110: "credit",
                25: "keywords",
                55: "dateCreated",
                80: "byline",
                85: "bylineTitle",
                122: "captionWriter",
                105: "headline",
                116: "copyright",
                15: "category"
            };
            function m(e, t, i) {
                for (var n, r, o, s, a = new DataView(e), l = {}, u = t; u < t + i; )
                    28 === a.getUint8(u) && 2 === a.getUint8(u + 1) && (s = a.getUint8(u + 2))in g && ((o = a.getInt16(u + 3)) + 5,
                    r = g[s],
                    n = y(a, u + 5, o),
                    l.hasOwnProperty(r) ? l[r]instanceof Array ? l[r].push(n) : l[r] = [l[r], n] : l[r] = n),
                    u++;
                return l
            }
            function v(e, t, i, n, r) {
                var o, s, a, l = e.getUint16(i, !r), u = {};
                for (a = 0; a < l; a++)
                    o = i + 12 * a + 2,
                    !(s = n[e.getUint16(o, !r)]) && h && console.log("Unknown tag: " + e.getUint16(o, !r)),
                    u[s] = _(e, o, t, i, r);
                return u
            }
            function _(e, t, i, n, r) {
                var o, s, a, l, u, h, c = e.getUint16(t + 2, !r), d = e.getUint32(t + 4, !r), f = e.getUint32(t + 8, !r) + i;
                switch (c) {
                case 1:
                case 7:
                    if (1 == d)
                        return e.getUint8(t + 8, !r);
                    for (o = 4 < d ? f : t + 8,
                    s = [],
                    l = 0; l < d; l++)
                        s[l] = e.getUint8(o + l);
                    return s;
                case 2:
                    return y(e, o = 4 < d ? f : t + 8, d - 1);
                case 3:
                    if (1 == d)
                        return e.getUint16(t + 8, !r);
                    for (o = 2 < d ? f : t + 8,
                    s = [],
                    l = 0; l < d; l++)
                        s[l] = e.getUint16(o + 2 * l, !r);
                    return s;
                case 4:
                    if (1 == d)
                        return e.getUint32(t + 8, !r);
                    for (s = [],
                    l = 0; l < d; l++)
                        s[l] = e.getUint32(f + 4 * l, !r);
                    return s;
                case 5:
                    if (1 == d)
                        return u = e.getUint32(f, !r),
                        h = e.getUint32(f + 4, !r),
                        (a = new Number(u / h)).numerator = u,
                        a.denominator = h,
                        a;
                    for (s = [],
                    l = 0; l < d; l++)
                        u = e.getUint32(f + 8 * l, !r),
                        h = e.getUint32(f + 4 + 8 * l, !r),
                        s[l] = new Number(u / h),
                        s[l].numerator = u,
                        s[l].denominator = h;
                    return s;
                case 9:
                    if (1 == d)
                        return e.getInt32(t + 8, !r);
                    for (s = [],
                    l = 0; l < d; l++)
                        s[l] = e.getInt32(f + 4 * l, !r);
                    return s;
                case 10:
                    if (1 == d)
                        return e.getInt32(f, !r) / e.getInt32(f + 4, !r);
                    for (s = [],
                    l = 0; l < d; l++)
                        s[l] = e.getInt32(f + 8 * l, !r) / e.getInt32(f + 4 + 8 * l, !r);
                    return s
                }
            }
            function y(e, t, i) {
                var r = "";
                for (n = t; n < t + i; n++)
                    r += String.fromCharCode(e.getUint8(n));
                return r
            }
            function o(e, t) {
                if ("Exif" != y(e, t, 4))
                    return h && console.log("Not valid EXIF data! " + y(e, t, 4)),
                    !1;
                var i, n, r, o, s, a = t + 6;
                if (18761 == e.getUint16(a))
                    i = !1;
                else {
                    if (19789 != e.getUint16(a))
                        return h && console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)"),
                        !1;
                    i = !0
                }
                if (42 != e.getUint16(a + 2, !i))
                    return h && console.log("Not valid TIFF data! (no 0x002A)"),
                    !1;
                var l = e.getUint32(a + 4, !i);
                if (l < 8)
                    return h && console.log("Not valid TIFF data! (First offset less than 8)", e.getUint32(a + 4, !i)),
                    !1;
                if ((n = v(e, a, a + l, c, i)).ExifIFDPointer)
                    for (r in o = v(e, a, a + n.ExifIFDPointer, u, i)) {
                        switch (r) {
                        case "LightSource":
                        case "Flash":
                        case "MeteringMode":
                        case "ExposureProgram":
                        case "SensingMethod":
                        case "SceneCaptureType":
                        case "SceneType":
                        case "CustomRendered":
                        case "WhiteBalance":
                        case "GainControl":
                        case "Contrast":
                        case "Saturation":
                        case "Sharpness":
                        case "SubjectDistanceRange":
                        case "FileSource":
                            o[r] = p[r][o[r]];
                            break;
                        case "ExifVersion":
                        case "FlashpixVersion":
                            o[r] = String.fromCharCode(o[r][0], o[r][1], o[r][2], o[r][3]);
                            break;
                        case "ComponentsConfiguration":
                            o[r] = p.Components[o[r][0]] + p.Components[o[r][1]] + p.Components[o[r][2]] + p.Components[o[r][3]]
                        }
                        n[r] = o[r]
                    }
                if (n.GPSInfoIFDPointer)
                    for (r in s = v(e, a, a + n.GPSInfoIFDPointer, d, i)) {
                        switch (r) {
                        case "GPSVersionID":
                            s[r] = s[r][0] + "." + s[r][1] + "." + s[r][2] + "." + s[r][3]
                        }
                        n[r] = s[r]
                    }
                return n.thumbnail = function(e, t, i, n) {
                    var r = function(e, t, i) {
                        var n = e.getUint16(t, !i);
                        return e.getUint32(t + 2 + 12 * n, !i)
                    }(e, t + i, n);
                    if (!r)
                        return {};
                    if (r > e.byteLength)
                        return {};
                    var o = v(e, t, t + r, f, n);
                    if (o.Compression)
                        switch (o.Compression) {
                        case 6:
                            if (o.JpegIFOffset && o.JpegIFByteCount) {
                                var s = t + o.JpegIFOffset
                                  , a = o.JpegIFByteCount;
                                o.blob = new Blob([new Uint8Array(e.buffer,s,a)],{
                                    type: "image/jpeg"
                                })
                            }
                            break;
                        case 1:
                            console.log("Thumbnail image format is TIFF, which is not implemented.");
                            break;
                        default:
                            console.log("Unknown thumbnail image format '%s'", o.Compression)
                        }
                    else
                        2 == o.PhotometricInterpretation && console.log("Thumbnail image format is RGB, which is not implemented.");
                    return o
                }(e, a, l, i),
                n
            }
            function w(e) {
                var t = {};
                if (1 == e.nodeType) {
                    if (0 < e.attributes.length) {
                        t["@attributes"] = {};
                        for (var i = 0; i < e.attributes.length; i++) {
                            var n = e.attributes.item(i);
                            t["@attributes"][n.nodeName] = n.nodeValue
                        }
                    }
                } else if (3 == e.nodeType)
                    return e.nodeValue;
                if (e.hasChildNodes())
                    for (var r = 0; r < e.childNodes.length; r++) {
                        var o = e.childNodes.item(r)
                          , s = o.nodeName;
                        if (null == t[s])
                            t[s] = w(o);
                        else {
                            if (null == t[s].push) {
                                var a = t[s];
                                t[s] = [],
                                t[s].push(a)
                            }
                            t[s].push(w(o))
                        }
                    }
                return t
            }
            function b(e) {
                try {
                    var t = {};
                    if (0 < e.children.length)
                        for (var i = 0; i < e.children.length; i++) {
                            var n = e.children.item(i)
                              , r = n.attributes;
                            for (var o in r) {
                                var s = r[o]
                                  , a = s.nodeName
                                  , l = s.nodeValue;
                                void 0 !== a && (t[a] = l)
                            }
                            var u = n.nodeName;
                            if (void 0 === t[u])
                                t[u] = w(n);
                            else {
                                if (void 0 === t[u].push) {
                                    var h = t[u];
                                    t[u] = [],
                                    t[u].push(h)
                                }
                                t[u].push(w(n))
                            }
                        }
                    else
                        t = e.textContent;
                    return t
                } catch (e) {
                    console.log(e.message)
                }
            }
            s.enableXmp = function() {
                s.isXmpEnabled = !0
            }
            ,
            s.disableXmp = function() {
                s.isXmpEnabled = !1
            }
            ,
            s.getData = function(e, t) {
                return !((self.Image && e instanceof self.Image || self.HTMLImageElement && e instanceof self.HTMLImageElement) && !e.complete) && (r(e) ? t && t.call(e) : i(e, t),
                !0)
            }
            ,
            s.getTag = function(e, t) {
                if (r(e))
                    return e.exifdata[t]
            }
            ,
            s.getIptcTag = function(e, t) {
                if (r(e))
                    return e.iptcdata[t]
            }
            ,
            s.getAllTags = function(e) {
                if (!r(e))
                    return {};
                var t, i = e.exifdata, n = {};
                for (t in i)
                    i.hasOwnProperty(t) && (n[t] = i[t]);
                return n
            }
            ,
            s.getAllIptcTags = function(e) {
                if (!r(e))
                    return {};
                var t, i = e.iptcdata, n = {};
                for (t in i)
                    i.hasOwnProperty(t) && (n[t] = i[t]);
                return n
            }
            ,
            s.pretty = function(e) {
                if (!r(e))
                    return "";
                var t, i = e.exifdata, n = "";
                for (t in i)
                    i.hasOwnProperty(t) && ("object" == typeof i[t] ? i[t]instanceof Number ? n += t + " : " + i[t] + " [" + i[t].numerator + "/" + i[t].denominator + "]\r\n" : n += t + " : [" + i[t].length + " values]\r\n" : n += t + " : " + i[t] + "\r\n");
                return n
            }
            ,
            s.readFromBinaryFile = function(e) {
                return a(e)
            }
            ,
            void 0 === (l = function() {
                return s
            }
            .apply(t, [])) || (e.exports = l)
        }
        ).call(this)
    }
    , function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__),
        function(global, Buffer) {
            __webpack_require__.d(__webpack_exports__, "BSON_INT32_MAX", function() {
                return bson_1
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_INT32_MIN", function() {
                return bson_2
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_INT64_MAX", function() {
                return bson_3
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_INT64_MIN", function() {
                return bson_4
            }),
            __webpack_require__.d(__webpack_exports__, "JS_INT_MAX", function() {
                return bson_5
            }),
            __webpack_require__.d(__webpack_exports__, "JS_INT_MIN", function() {
                return bson_6
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_NUMBER", function() {
                return bson_7
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_STRING", function() {
                return bson_8
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_OBJECT", function() {
                return bson_9
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_ARRAY", function() {
                return bson_10
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_BINARY", function() {
                return bson_11
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_UNDEFINED", function() {
                return bson_12
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_OID", function() {
                return bson_13
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_BOOLEAN", function() {
                return bson_14
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_DATE", function() {
                return bson_15
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_NULL", function() {
                return bson_16
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_REGEXP", function() {
                return bson_17
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_DBPOINTER", function() {
                return bson_18
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_CODE", function() {
                return bson_19
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_SYMBOL", function() {
                return bson_20
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_CODE_W_SCOPE", function() {
                return bson_21
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_INT", function() {
                return bson_22
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_TIMESTAMP", function() {
                return bson_23
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_LONG", function() {
                return bson_24
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_DECIMAL128", function() {
                return bson_25
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_MIN_KEY", function() {
                return bson_26
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_DATA_MAX_KEY", function() {
                return bson_27
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_DEFAULT", function() {
                return bson_28
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_FUNCTION", function() {
                return bson_29
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_BYTE_ARRAY", function() {
                return bson_30
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_UUID", function() {
                return bson_31
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_MD5", function() {
                return bson_32
            }),
            __webpack_require__.d(__webpack_exports__, "BSON_BINARY_SUBTYPE_USER_DEFINED", function() {
                return bson_33
            }),
            __webpack_require__.d(__webpack_exports__, "Code", function() {
                return bson_34
            }),
            __webpack_require__.d(__webpack_exports__, "BSONSymbol", function() {
                return bson_35
            }),
            __webpack_require__.d(__webpack_exports__, "DBRef", function() {
                return bson_36
            }),
            __webpack_require__.d(__webpack_exports__, "Binary", function() {
                return bson_37
            }),
            __webpack_require__.d(__webpack_exports__, "ObjectId", function() {
                return bson_38
            }),
            __webpack_require__.d(__webpack_exports__, "Long", function() {
                return bson_39
            }),
            __webpack_require__.d(__webpack_exports__, "Timestamp", function() {
                return bson_40
            }),
            __webpack_require__.d(__webpack_exports__, "Double", function() {
                return bson_41
            }),
            __webpack_require__.d(__webpack_exports__, "Int32", function() {
                return bson_42
            }),
            __webpack_require__.d(__webpack_exports__, "MinKey", function() {
                return bson_43
            }),
            __webpack_require__.d(__webpack_exports__, "MaxKey", function() {
                return bson_44
            }),
            __webpack_require__.d(__webpack_exports__, "BSONRegExp", function() {
                return bson_45
            }),
            __webpack_require__.d(__webpack_exports__, "Decimal128", function() {
                return bson_46
            }),
            __webpack_require__.d(__webpack_exports__, "serialize", function() {
                return bson_47
            }),
            __webpack_require__.d(__webpack_exports__, "serializeWithBufferAndIndex", function() {
                return bson_48
            }),
            __webpack_require__.d(__webpack_exports__, "deserialize", function() {
                return bson_49
            }),
            __webpack_require__.d(__webpack_exports__, "calculateObjectSize", function() {
                return bson_50
            }),
            __webpack_require__.d(__webpack_exports__, "deserializeStream", function() {
                return bson_51
            }),
            __webpack_require__.d(__webpack_exports__, "setInternalBufferSize", function() {
                return bson_52
            }),
            __webpack_require__.d(__webpack_exports__, "ObjectID", function() {
                return bson_53
            }),
            __webpack_require__.d(__webpack_exports__, "EJSON", function() {
                return bson_54
            });
            var long__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8)
              , long__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(long__WEBPACK_IMPORTED_MODULE_0__)
              , buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4)
              , buffer__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__)
              , commonjsGlobal = "undefined" != typeof window ? window : void 0 !== global ? global : "undefined" != typeof self ? self : {};
            function createCommonjsModule(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports),
                t.exports
            }
            var map = createCommonjsModule(function(e) {
                if (void 0 !== commonjsGlobal.Map)
                    e.exports = commonjsGlobal.Map,
                    e.exports.Map = commonjsGlobal.Map;
                else {
                    var t = function(e) {
                        this._keys = [],
                        this._values = {};
                        for (var t = 0; t < e.length; t++)
                            if (null != e[t]) {
                                var i = e[t]
                                  , n = i[0]
                                  , r = i[1];
                                this._keys.push(n),
                                this._values[n] = {
                                    v: r,
                                    i: this._keys.length - 1
                                }
                            }
                    };
                    t.prototype.clear = function() {
                        this._keys = [],
                        this._values = {}
                    }
                    ,
                    t.prototype.delete = function(e) {
                        var t = this._values[e];
                        return null != t && (delete this._values[e],
                        this._keys.splice(t.i, 1),
                        !0)
                    }
                    ,
                    t.prototype.entries = function() {
                        var t = this
                          , i = 0;
                        return {
                            next: function() {
                                var e = t._keys[i++];
                                return {
                                    value: void 0 !== e ? [e, t._values[e].v] : void 0,
                                    done: void 0 === e
                                }
                            }
                        }
                    }
                    ,
                    t.prototype.forEach = function(e, t) {
                        t = t || this;
                        for (var i = 0; i < this._keys.length; i++) {
                            var n = this._keys[i];
                            e.call(t, this._values[n].v, n, t)
                        }
                    }
                    ,
                    t.prototype.get = function(e) {
                        return this._values[e] ? this._values[e].v : void 0
                    }
                    ,
                    t.prototype.has = function(e) {
                        return null != this._values[e]
                    }
                    ,
                    t.prototype.keys = function() {
                        var t = this
                          , i = 0;
                        return {
                            next: function() {
                                var e = t._keys[i++];
                                return {
                                    value: void 0 !== e ? e : void 0,
                                    done: void 0 === e
                                }
                            }
                        }
                    }
                    ,
                    t.prototype.set = function(e, t) {
                        return this._values[e] ? this._values[e].v = t : (this._keys.push(e),
                        this._values[e] = {
                            v: t,
                            i: this._keys.length - 1
                        }),
                        this
                    }
                    ,
                    t.prototype.values = function() {
                        var t = this
                          , i = 0;
                        return {
                            next: function() {
                                var e = t._keys[i++];
                                return {
                                    value: void 0 !== e ? t._values[e].v : void 0,
                                    done: void 0 === e
                                }
                            }
                        }
                    }
                    ,
                    Object.defineProperty(t.prototype, "size", {
                        enumerable: !0,
                        get: function() {
                            return this._keys.length
                        }
                    }),
                    e.exports = t
                }
            })
              , map_1 = map.Map;
            long__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.toExtendedJSON = function(e) {
                return e && e.relaxed ? this.toNumber() : {
                    $numberLong: this.toString()
                }
            }
            ,
            long__WEBPACK_IMPORTED_MODULE_0___default.a.fromExtendedJSON = function(e, t) {
                var i = long__WEBPACK_IMPORTED_MODULE_0___default.a.fromString(e.$numberLong);
                return t && t.relaxed ? i.toNumber() : i
            }
            ,
            Object.defineProperty(long__WEBPACK_IMPORTED_MODULE_0___default.a.prototype, "_bsontype", {
                value: "Long"
            });
            var long_1 = long__WEBPACK_IMPORTED_MODULE_0___default.a;
            function _classCallCheck(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass(e, t, i) {
                return t && _defineProperties(e.prototype, t),
                i && _defineProperties(e, i),
                e
            }
            var Double = function() {
                function i(e) {
                    _classCallCheck(this, i),
                    this.value = e
                }
                return _createClass(i, [{
                    key: "valueOf",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function(e) {
                        return e && e.relaxed && isFinite(this.value) ? this.value : {
                            $numberDouble: this.value.toString()
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e, t) {
                        return t && t.relaxed ? parseFloat(e.$numberDouble) : new i(parseFloat(e.$numberDouble))
                    }
                }]),
                i
            }();
            Object.defineProperty(Double.prototype, "_bsontype", {
                value: "Double"
            });
            var double_1 = Double;
            function _typeof(e) {
                return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                )(e)
            }
            function _classCallCheck$1(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$1(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$1(e, t, i) {
                return t && _defineProperties$1(e.prototype, t),
                i && _defineProperties$1(e, i),
                e
            }
            function _possibleConstructorReturn(e, t) {
                return !t || "object" !== _typeof(t) && "function" != typeof t ? _assertThisInitialized(e) : t
            }
            function _assertThisInitialized(e) {
                if (void 0 === e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }
            function _getPrototypeOf(e) {
                return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }
                )(e)
            }
            function _inherits(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && _setPrototypeOf(e, t)
            }
            function _setPrototypeOf(e, t) {
                return (_setPrototypeOf = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t,
                    e
                }
                )(e, t)
            }
            var Timestamp = function(e) {
                function i(e, t) {
                    return _classCallCheck$1(this, i),
                    _possibleConstructorReturn(long_1.isLong(e) ? _possibleConstructorReturn(this, _getPrototypeOf(i).call(this, e.low, e.high)) : _possibleConstructorReturn(this, _getPrototypeOf(i).call(this, e, t)))
                }
                return _inherits(i, long_1),
                _createClass$1(i, [{
                    key: "toJSON",
                    value: function() {
                        return {
                            $timestamp: this.toString()
                        }
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        return {
                            $timestamp: {
                                t: this.high,
                                i: this.low
                            }
                        }
                    }
                }], [{
                    key: "fromInt",
                    value: function(e) {
                        return new i(long_1.fromInt(e))
                    }
                }, {
                    key: "fromNumber",
                    value: function(e) {
                        return new i(long_1.fromNumber(e))
                    }
                }, {
                    key: "fromBits",
                    value: function(e, t) {
                        return new i(e,t)
                    }
                }, {
                    key: "fromString",
                    value: function(e, t) {
                        return new i(long_1.fromString(e, t))
                    }
                }, {
                    key: "fromExtendedJSON",
                    value: function(e) {
                        return new i(e.$timestamp.i,e.$timestamp.t)
                    }
                }]),
                i
            }();
            Object.defineProperty(Timestamp.prototype, "_bsontype", {
                value: "Timestamp"
            });
            var timestamp = Timestamp
              , require$$0 = {};
            function normalizedFunctionString(e) {
                return e.toString().replace("function(", "function (")
            }
            function insecureRandomBytes(e) {
                for (var t = new Uint8Array(e), i = 0; i < e; ++i)
                    t[i] = Math.floor(256 * Math.random());
                return t
            }
            var randomBytes = insecureRandomBytes;
            if ("undefined" != typeof window && window.crypto && window.crypto.getRandomValues)
                randomBytes = function(e) {
                    return window.crypto.getRandomValues(new Uint8Array(e))
                }
                ;
            else {
                try {
                    randomBytes = require$$0.randomBytes
                } catch (e) {}
                null == randomBytes && (randomBytes = insecureRandomBytes)
            }
            var utils = {
                normalizedFunctionString: normalizedFunctionString,
                randomBytes: randomBytes
            };
            function defaultSetTimout() {
                throw new Error("setTimeout has not been defined")
            }
            function defaultClearTimeout() {
                throw new Error("clearTimeout has not been defined")
            }
            var cachedSetTimeout = defaultSetTimout
              , cachedClearTimeout = defaultClearTimeout;
            function runTimeout(t) {
                if (cachedSetTimeout === setTimeout)
                    return setTimeout(t, 0);
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout)
                    return cachedSetTimeout = setTimeout,
                    setTimeout(t, 0);
                try {
                    return cachedSetTimeout(t, 0)
                } catch (e) {
                    try {
                        return cachedSetTimeout.call(null, t, 0)
                    } catch (e) {
                        return cachedSetTimeout.call(this, t, 0)
                    }
                }
            }
            function runClearTimeout(t) {
                if (cachedClearTimeout === clearTimeout)
                    return clearTimeout(t);
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout)
                    return cachedClearTimeout = clearTimeout,
                    clearTimeout(t);
                try {
                    return cachedClearTimeout(t)
                } catch (e) {
                    try {
                        return cachedClearTimeout.call(null, t)
                    } catch (e) {
                        return cachedClearTimeout.call(this, t)
                    }
                }
            }
            "function" == typeof global.setTimeout && (cachedSetTimeout = setTimeout),
            "function" == typeof global.clearTimeout && (cachedClearTimeout = clearTimeout);
            var queue = [], draining = !1, currentQueue, queueIndex = -1;
            function cleanUpNextTick() {
                draining && currentQueue && (draining = !1,
                currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1,
                queue.length && drainQueue())
            }
            function drainQueue() {
                if (!draining) {
                    var e = runTimeout(cleanUpNextTick);
                    draining = !0;
                    for (var t = queue.length; t; ) {
                        for (currentQueue = queue,
                        queue = []; ++queueIndex < t; )
                            currentQueue && currentQueue[queueIndex].run();
                        queueIndex = -1,
                        t = queue.length
                    }
                    currentQueue = null,
                    draining = !1,
                    runClearTimeout(e)
                }
            }
            function nextTick(e) {
                var t = new Array(arguments.length - 1);
                if (1 < arguments.length)
                    for (var i = 1; i < arguments.length; i++)
                        t[i - 1] = arguments[i];
                queue.push(new Item(e,t)),
                1 !== queue.length || draining || runTimeout(drainQueue)
            }
            function Item(e, t) {
                this.fun = e,
                this.array = t
            }
            Item.prototype.run = function() {
                this.fun.apply(null, this.array)
            }
            ;
            var title = "browser"
              , platform = "browser"
              , browser = !0
              , env = {}
              , argv = []
              , version = ""
              , versions = {}
              , release = {}
              , config = {};
            function noop() {}
            var on = noop
              , addListener = noop
              , once = noop
              , off = noop
              , removeListener = noop
              , removeAllListeners = noop
              , emit = noop;
            function binding(e) {
                throw new Error("process.binding is not supported")
            }
            function cwd() {
                return "/"
            }
            function chdir(e) {
                throw new Error("process.chdir is not supported")
            }
            function umask() {
                return 0
            }
            var performance = global.performance || {}
              , performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function() {
                return (new Date).getTime()
            }
            ;
            function hrtime(e) {
                var t = .001 * performanceNow.call(performance)
                  , i = Math.floor(t)
                  , n = Math.floor(t % 1 * 1e9);
                return e && (i -= e[0],
                (n -= e[1]) < 0 && (i--,
                n += 1e9)),
                [i, n]
            }
            var startTime = new Date;
            function uptime() {
                return (new Date - startTime) / 1e3
            }
            var process = {
                nextTick: nextTick,
                title: title,
                browser: browser,
                env: env,
                argv: argv,
                version: version,
                versions: versions,
                on: on,
                addListener: addListener,
                once: once,
                off: off,
                removeListener: removeListener,
                removeAllListeners: removeAllListeners,
                emit: emit,
                binding: binding,
                cwd: cwd,
                chdir: chdir,
                umask: umask,
                hrtime: hrtime,
                platform: platform,
                release: release,
                config: config,
                uptime: uptime
            }, inherits;
            inherits = "function" == typeof Object.create ? function(e, t) {
                e.super_ = t,
                e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                })
            }
            : function(e, t) {
                e.super_ = t;
                function i() {}
                i.prototype = t.prototype,
                e.prototype = new i,
                e.prototype.constructor = e
            }
            ;
            var inherits$1 = inherits;
            function _typeof$1(e) {
                return (_typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                )(e)
            }
            var formatRegExp = /%[sdj%]/g;
            function format(e) {
                if (!isString(e)) {
                    for (var t = [], i = 0; i < arguments.length; i++)
                        t.push(inspect(arguments[i]));
                    return t.join(" ")
                }
                i = 1;
                for (var n = arguments, r = n.length, o = String(e).replace(formatRegExp, function(e) {
                    if ("%%" === e)
                        return "%";
                    if (r <= i)
                        return e;
                    switch (e) {
                    case "%s":
                        return String(n[i++]);
                    case "%d":
                        return Number(n[i++]);
                    case "%j":
                        try {
                            return JSON.stringify(n[i++])
                        } catch (e) {
                            return "[Circular]"
                        }
                    default:
                        return e
                    }
                }), s = n[i]; i < r; s = n[++i])
                    isNull(s) || !isObject(s) ? o += " " + s : o += " " + inspect(s);
                return o
            }
            function deprecate(e, t) {
                if (isUndefined(global.process))
                    return function() {
                        return deprecate(e, t).apply(this, arguments)
                    }
                    ;
                var i = !1;
                return function() {
                    return i || (console.error(t),
                    i = !0),
                    e.apply(this, arguments)
                }
            }
            var debugs = {}, debugEnviron;
            function debuglog(t) {
                if (isUndefined(debugEnviron) && (debugEnviron = process.env.NODE_DEBUG || ""),
                t = t.toUpperCase(),
                !debugs[t])
                    if (new RegExp("\\b" + t + "\\b","i").test(debugEnviron)) {
                        debugs[t] = function() {
                            var e = format.apply(null, arguments);
                            console.error("%s %d: %s", t, 0, e)
                        }
                    } else
                        debugs[t] = function() {}
                        ;
                return debugs[t]
            }
            function inspect(e, t) {
                var i = {
                    seen: [],
                    stylize: stylizeNoColor
                };
                return 3 <= arguments.length && (i.depth = arguments[2]),
                4 <= arguments.length && (i.colors = arguments[3]),
                isBoolean(t) ? i.showHidden = t : t && _extend(i, t),
                isUndefined(i.showHidden) && (i.showHidden = !1),
                isUndefined(i.depth) && (i.depth = 2),
                isUndefined(i.colors) && (i.colors = !1),
                isUndefined(i.customInspect) && (i.customInspect = !0),
                i.colors && (i.stylize = stylizeWithColor),
                formatValue(i, e, i.depth)
            }
            function stylizeWithColor(e, t) {
                var i = inspect.styles[t];
                return i ? "[" + inspect.colors[i][0] + "m" + e + "[" + inspect.colors[i][1] + "m" : e
            }
            function stylizeNoColor(e, t) {
                return e
            }
            function arrayToHash(e) {
                var i = {};
                return e.forEach(function(e, t) {
                    i[e] = !0
                }),
                i
            }
            function formatValue(t, i, n) {
                if (t.customInspect && i && isFunction(i.inspect) && i.inspect !== inspect && (!i.constructor || i.constructor.prototype !== i)) {
                    var e = i.inspect(n, t);
                    return isString(e) || (e = formatValue(t, e, n)),
                    e
                }
                var r = formatPrimitive(t, i);
                if (r)
                    return r;
                var o = Object.keys(i)
                  , s = arrayToHash(o);
                if (t.showHidden && (o = Object.getOwnPropertyNames(i)),
                isError(i) && (0 <= o.indexOf("message") || 0 <= o.indexOf("description")))
                    return formatError(i);
                if (0 === o.length) {
                    if (isFunction(i)) {
                        var a = i.name ? ": " + i.name : "";
                        return t.stylize("[Function" + a + "]", "special")
                    }
                    if (isRegExp(i))
                        return t.stylize(RegExp.prototype.toString.call(i), "regexp");
                    if (isDate(i))
                        return t.stylize(Date.prototype.toString.call(i), "date");
                    if (isError(i))
                        return formatError(i)
                }
                var l, u = "", h = !1, c = ["{", "}"];
                isArray(i) && (h = !0,
                c = ["[", "]"]),
                isFunction(i) && (u = " [Function" + (i.name ? ": " + i.name : "") + "]");
                return isRegExp(i) && (u = " " + RegExp.prototype.toString.call(i)),
                isDate(i) && (u = " " + Date.prototype.toUTCString.call(i)),
                isError(i) && (u = " " + formatError(i)),
                0 !== o.length || h && 0 != i.length ? n < 0 ? isRegExp(i) ? t.stylize(RegExp.prototype.toString.call(i), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(i),
                l = h ? formatArray(t, i, n, s, o) : o.map(function(e) {
                    return formatProperty(t, i, n, s, e, h)
                }),
                t.seen.pop(),
                reduceToSingleString(l, u, c)) : c[0] + u + c[1]
            }
            function formatPrimitive(e, t) {
                if (isUndefined(t))
                    return e.stylize("undefined", "undefined");
                if (isString(t)) {
                    var i = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return e.stylize(i, "string")
                }
                return isNumber(t) ? e.stylize("" + t, "number") : isBoolean(t) ? e.stylize("" + t, "boolean") : isNull(t) ? e.stylize("null", "null") : void 0
            }
            function formatError(e) {
                return "[" + Error.prototype.toString.call(e) + "]"
            }
            function formatArray(t, i, n, r, e) {
                for (var o = [], s = 0, a = i.length; s < a; ++s)
                    hasOwnProperty(i, String(s)) ? o.push(formatProperty(t, i, n, r, String(s), !0)) : o.push("");
                return e.forEach(function(e) {
                    e.match(/^\d+$/) || o.push(formatProperty(t, i, n, r, e, !0))
                }),
                o
            }
            function formatProperty(e, t, i, n, r, o) {
                var s, a, l;
                if ((l = Object.getOwnPropertyDescriptor(t, r) || {
                    value: t[r]
                }).get ? a = l.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : l.set && (a = e.stylize("[Setter]", "special")),
                hasOwnProperty(n, r) || (s = "[" + r + "]"),
                a || (e.seen.indexOf(l.value) < 0 ? -1 < (a = isNull(i) ? formatValue(e, l.value, null) : formatValue(e, l.value, i - 1)).indexOf("\n") && (a = o ? a.split("\n").map(function(e) {
                    return "  " + e
                }).join("\n").substr(2) : "\n" + a.split("\n").map(function(e) {
                    return "   " + e
                }).join("\n")) : a = e.stylize("[Circular]", "special")),
                isUndefined(s)) {
                    if (o && r.match(/^\d+$/))
                        return a;
                    s = (s = JSON.stringify("" + r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s = s.substr(1, s.length - 2),
                    e.stylize(s, "name")) : (s = s.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"),
                    e.stylize(s, "string"))
                }
                return s + ": " + a
            }
            function reduceToSingleString(e, t, i) {
                return 60 < e.reduce(function(e, t) {
                    return t.indexOf("\n"),
                    e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                }, 0) ? i[0] + ("" === t ? "" : t + "\n ") + " " + e.join(",\n  ") + " " + i[1] : i[0] + t + " " + e.join(", ") + " " + i[1]
            }
            function isArray(e) {
                return Array.isArray(e)
            }
            function isBoolean(e) {
                return "boolean" == typeof e
            }
            function isNull(e) {
                return null === e
            }
            function isNullOrUndefined(e) {
                return null == e
            }
            function isNumber(e) {
                return "number" == typeof e
            }
            function isString(e) {
                return "string" == typeof e
            }
            function isSymbol(e) {
                return "symbol" === _typeof$1(e)
            }
            function isUndefined(e) {
                return void 0 === e
            }
            function isRegExp(e) {
                return isObject(e) && "[object RegExp]" === objectToString(e)
            }
            function isObject(e) {
                return "object" === _typeof$1(e) && null !== e
            }
            function isDate(e) {
                return isObject(e) && "[object Date]" === objectToString(e)
            }
            function isError(e) {
                return isObject(e) && ("[object Error]" === objectToString(e) || e instanceof Error)
            }
            function isFunction(e) {
                return "function" == typeof e
            }
            function isPrimitive(e) {
                return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" === _typeof$1(e) || void 0 === e
            }
            function isBuffer(e) {
                return Buffer.isBuffer(e)
            }
            function objectToString(e) {
                return Object.prototype.toString.call(e)
            }
            function pad(e) {
                return e < 10 ? "0" + e.toString(10) : e.toString(10)
            }
            inspect.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
            },
            inspect.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            };
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            function timestamp$1() {
                var e = new Date
                  , t = [pad(e.getHours()), pad(e.getMinutes()), pad(e.getSeconds())].join(":");
                return [e.getDate(), months[e.getMonth()], t].join(" ")
            }
            function log() {
                console.log("%s - %s", timestamp$1(), format.apply(null, arguments))
            }
            function _extend(e, t) {
                if (!t || !isObject(t))
                    return e;
                for (var i = Object.keys(t), n = i.length; n--; )
                    e[i[n]] = t[i[n]];
                return e
            }
            function hasOwnProperty(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            var util = {
                inherits: inherits$1,
                _extend: _extend,
                log: log,
                isBuffer: isBuffer,
                isPrimitive: isPrimitive,
                isFunction: isFunction,
                isError: isError,
                isDate: isDate,
                isObject: isObject,
                isRegExp: isRegExp,
                isUndefined: isUndefined,
                isSymbol: isSymbol,
                isString: isString,
                isNumber: isNumber,
                isNullOrUndefined: isNullOrUndefined,
                isNull: isNull,
                isBoolean: isBoolean,
                isArray: isArray,
                inspect: inspect,
                deprecate: deprecate,
                format: format,
                debuglog: debuglog
            };
            function _classCallCheck$2(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$2(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$2(e, t, i) {
                return t && _defineProperties$2(e.prototype, t),
                i && _defineProperties$2(e, i),
                e
            }
            var Buffer$1 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , randomBytes$1 = utils.randomBytes
              , deprecate$1 = util.deprecate
              , PROCESS_UNIQUE = randomBytes$1(5)
              , checkForHexRegExp = new RegExp("^[0-9a-fA-F]{24}$")
              , hasBufferType = !1;
            try {
                Buffer$1 && Buffer$1.from && (hasBufferType = !0)
            } catch (e) {
                hasBufferType = !1
            }
            for (var hexTable = [], _i = 0; _i < 256; _i++)
                hexTable[_i] = (_i <= 15 ? "0" : "") + _i.toString(16);
            for (var decodeLookup = [], i = 0; i < 10; )
                decodeLookup[48 + i] = i++;
            for (; i < 16; )
                decodeLookup[55 + i] = decodeLookup[87 + i] = i++;
            var _Buffer = Buffer$1;
            function convertToHex(e) {
                return e.toString("hex")
            }
            function makeObjectIdError(e, t) {
                var i = e[t];
                return new TypeError('ObjectId string "'.concat(e, '" contains invalid character "').concat(i, '" with character code (').concat(e.charCodeAt(t), "). All character codes for a non-hex string must be less than 256."))
            }
            var ObjectId = function() {
                function r(e) {
                    if (_classCallCheck$2(this, r),
                    e instanceof r)
                        return e;
                    if (null == e || "number" == typeof e)
                        return this.id = r.generate(e),
                        void (r.cacheHexString && (this.__id = this.toString("hex")));
                    var t = r.isValid(e);
                    if (!t && null != e)
                        throw new TypeError("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                    if (t && "string" == typeof e && 24 === e.length && hasBufferType)
                        return new r(Buffer$1.from(e, "hex"));
                    if (t && "string" == typeof e && 24 === e.length)
                        return r.createFromHexString(e);
                    if (null == e || 12 !== e.length) {
                        if (null != e && e.toHexString)
                            return r.createFromHexString(e.toHexString());
                        throw new TypeError("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters")
                    }
                    this.id = e,
                    r.cacheHexString && (this.__id = this.toString("hex"))
                }
                return _createClass$2(r, [{
                    key: "toHexString",
                    value: function() {
                        if (r.cacheHexString && this.__id)
                            return this.__id;
                        var e = "";
                        if (!this.id || !this.id.length)
                            throw new TypeError("invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [" + JSON.stringify(this.id) + "]");
                        if (this.id instanceof _Buffer)
                            return e = convertToHex(this.id),
                            r.cacheHexString && (this.__id = e),
                            e;
                        for (var t = 0; t < this.id.length; t++) {
                            var i = hexTable[this.id.charCodeAt(t)];
                            if ("string" != typeof i)
                                throw makeObjectIdError(this.id, t);
                            e += i
                        }
                        return r.cacheHexString && (this.__id = e),
                        e
                    }
                }, {
                    key: "toString",
                    value: function(e) {
                        return this.id && this.id.copy ? this.id.toString("string" == typeof e ? e : "hex") : this.toHexString()
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.toHexString()
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e instanceof r ? this.toString() === e.toString() : "string" == typeof e && r.isValid(e) && 12 === e.length && this.id instanceof _Buffer ? e === this.id.toString("binary") : "string" == typeof e && r.isValid(e) && 24 === e.length ? e.toLowerCase() === this.toHexString() : "string" == typeof e && r.isValid(e) && 12 === e.length ? e === this.id : !(null == e || !(e instanceof r || e.toHexString)) && e.toHexString() === this.toHexString()
                    }
                }, {
                    key: "getTimestamp",
                    value: function() {
                        var e = new Date
                          , t = this.id.readUInt32BE(0);
                        return e.setTime(1e3 * Math.floor(t)),
                        e
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        return this.toHexString ? {
                            $oid: this.toHexString()
                        } : {
                            $oid: this.toString("hex")
                        }
                    }
                }], [{
                    key: "getInc",
                    value: function() {
                        return r.index = (r.index + 1) % 16777215
                    }
                }, {
                    key: "generate",
                    value: function(e) {
                        "number" != typeof e && (e = ~~(Date.now() / 1e3));
                        var t = r.getInc()
                          , i = Buffer$1.alloc(12);
                        return i[3] = 255 & e,
                        i[2] = e >> 8 & 255,
                        i[1] = e >> 16 & 255,
                        i[0] = e >> 24 & 255,
                        i[4] = PROCESS_UNIQUE[0],
                        i[5] = PROCESS_UNIQUE[1],
                        i[6] = PROCESS_UNIQUE[2],
                        i[7] = PROCESS_UNIQUE[3],
                        i[8] = PROCESS_UNIQUE[4],
                        i[11] = 255 & t,
                        i[10] = t >> 8 & 255,
                        i[9] = t >> 16 & 255,
                        i
                    }
                }, {
                    key: "createPk",
                    value: function() {
                        return new r
                    }
                }, {
                    key: "createFromTime",
                    value: function(e) {
                        var t = Buffer$1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
                        return t[3] = 255 & e,
                        t[2] = e >> 8 & 255,
                        t[1] = e >> 16 & 255,
                        t[0] = e >> 24 & 255,
                        new r(t)
                    }
                }, {
                    key: "createFromHexString",
                    value: function(e) {
                        if (void 0 === e || null != e && 24 !== e.length)
                            throw new TypeError("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
                        if (hasBufferType)
                            return new r(Buffer$1.from(e, "hex"));
                        for (var t = new _Buffer(12), i = 0, n = 0; n < 24; )
                            t[i++] = decodeLookup[e.charCodeAt(n++)] << 4 | decodeLookup[e.charCodeAt(n++)];
                        return new r(t)
                    }
                }, {
                    key: "isValid",
                    value: function(e) {
                        return null != e && ("number" == typeof e || ("string" == typeof e ? 12 === e.length || 24 === e.length && checkForHexRegExp.test(e) : e instanceof r || (e instanceof _Buffer && 12 === e.length || !!e.toHexString && (12 === e.id.length || 24 === e.id.length && checkForHexRegExp.test(e.id)))))
                    }
                }, {
                    key: "fromExtendedJSON",
                    value: function(e) {
                        return new r(e.$oid)
                    }
                }]),
                r
            }();
            ObjectId.get_inc = deprecate$1(function() {
                return ObjectId.getInc()
            }, "Please use the static `ObjectId.getInc()` instead"),
            ObjectId.prototype.get_inc = deprecate$1(function() {
                return ObjectId.getInc()
            }, "Please use the static `ObjectId.getInc()` instead"),
            ObjectId.prototype.getInc = deprecate$1(function() {
                return ObjectId.getInc()
            }, "Please use the static `ObjectId.getInc()` instead"),
            ObjectId.prototype.generate = deprecate$1(function(e) {
                return ObjectId.generate(e)
            }, "Please use the static `ObjectId.generate(time)` instead"),
            Object.defineProperty(ObjectId.prototype, "generationTime", {
                enumerable: !0,
                get: function() {
                    return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24
                },
                set: function(e) {
                    this.id[3] = 255 & e,
                    this.id[2] = e >> 8 & 255,
                    this.id[1] = e >> 16 & 255,
                    this.id[0] = e >> 24 & 255
                }
            }),
            ObjectId.prototype[util.inspect.custom || "inspect"] = ObjectId.prototype.toString,
            ObjectId.index = ~~(16777215 * Math.random()),
            Object.defineProperty(ObjectId.prototype, "_bsontype", {
                value: "ObjectID"
            });
            var objectid = ObjectId;
            function _classCallCheck$3(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$3(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$3(e, t, i) {
                return t && _defineProperties$3(e.prototype, t),
                i && _defineProperties$3(e, i),
                e
            }
            function alphabetize(e) {
                return e.split("").sort().join("")
            }
            var BSONRegExp = function() {
                function n(e, t) {
                    _classCallCheck$3(this, n),
                    this.pattern = e || "",
                    this.options = t ? alphabetize(t) : "";
                    for (var i = 0; i < this.options.length; i++)
                        if ("i" !== this.options[i] && "m" !== this.options[i] && "x" !== this.options[i] && "l" !== this.options[i] && "s" !== this.options[i] && "u" !== this.options[i])
                            throw new Error("The regular expression option [".concat(this.options[i], "] is not supported"))
                }
                return _createClass$3(n, [{
                    key: "toExtendedJSON",
                    value: function() {
                        return {
                            $regularExpression: {
                                pattern: this.pattern,
                                options: this.options
                            }
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e) {
                        return new n(e.$regularExpression.pattern,e.$regularExpression.options.split("").sort().join(""))
                    }
                }]),
                n
            }();
            Object.defineProperty(BSONRegExp.prototype, "_bsontype", {
                value: "BSONRegExp"
            });
            var regexp = BSONRegExp;
            function _classCallCheck$4(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$4(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$4(e, t, i) {
                return t && _defineProperties$4(e.prototype, t),
                i && _defineProperties$4(e, i),
                e
            }
            var BSONSymbol = function() {
                function t(e) {
                    _classCallCheck$4(this, t),
                    this.value = e
                }
                return _createClass$4(t, [{
                    key: "valueOf",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "inspect",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        return {
                            $symbol: this.value
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e) {
                        return new t(e.$symbol)
                    }
                }]),
                t
            }();
            Object.defineProperty(BSONSymbol.prototype, "_bsontype", {
                value: "Symbol"
            });
            var symbol = BSONSymbol;
            function _classCallCheck$5(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$5(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$5(e, t, i) {
                return t && _defineProperties$5(e.prototype, t),
                i && _defineProperties$5(e, i),
                e
            }
            var Int32 = function() {
                function i(e) {
                    _classCallCheck$5(this, i),
                    this.value = e
                }
                return _createClass$5(i, [{
                    key: "valueOf",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.value
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function(e) {
                        return e && e.relaxed ? this.value : {
                            $numberInt: this.value.toString()
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e, t) {
                        return t && t.relaxed ? parseInt(e.$numberInt, 10) : new i(e.$numberInt)
                    }
                }]),
                i
            }();
            Object.defineProperty(Int32.prototype, "_bsontype", {
                value: "Int32"
            });
            var int_32 = Int32;
            function _classCallCheck$6(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$6(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$6(e, t, i) {
                return t && _defineProperties$6(e.prototype, t),
                i && _defineProperties$6(e, i),
                e
            }
            var Code = function() {
                function i(e, t) {
                    _classCallCheck$6(this, i),
                    this.code = e,
                    this.scope = t
                }
                return _createClass$6(i, [{
                    key: "toJSON",
                    value: function() {
                        return {
                            scope: this.scope,
                            code: this.code
                        }
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        return this.scope ? {
                            $code: this.code,
                            $scope: this.scope
                        } : {
                            $code: this.code
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e) {
                        return new i(e.$code,e.$scope)
                    }
                }]),
                i
            }();
            Object.defineProperty(Code.prototype, "_bsontype", {
                value: "Code"
            });
            var code = Code
              , Buffer$2 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , PARSE_STRING_REGEXP = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/
              , PARSE_INF_REGEXP = /^(\+|-)?(Infinity|inf)$/i
              , PARSE_NAN_REGEXP = /^(\+|-)?NaN$/i
              , EXPONENT_MAX = 6111
              , EXPONENT_MIN = -6176
              , EXPONENT_BIAS = 6176
              , MAX_DIGITS = 34
              , NAN_BUFFER = [124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()
              , INF_NEGATIVE_BUFFER = [248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()
              , INF_POSITIVE_BUFFER = [120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()
              , EXPONENT_REGEX = /^([-+])?(\d+)?$/;
            function isDigit(e) {
                return !isNaN(parseInt(e, 10))
            }
            function divideu128(e) {
                var t = long_1.fromNumber(1e9)
                  , i = long_1.fromNumber(0);
                if (!(e.parts[0] || e.parts[1] || e.parts[2] || e.parts[3]))
                    return {
                        quotient: e,
                        rem: i
                    };
                for (var n = 0; n <= 3; n++)
                    i = (i = i.shiftLeft(32)).add(new long_1(e.parts[n],0)),
                    e.parts[n] = i.div(t).low,
                    i = i.modulo(t);
                return {
                    quotient: e,
                    rem: i
                }
            }
            function multiply64x2(e, t) {
                if (!e && !t)
                    return {
                        high: long_1.fromNumber(0),
                        low: long_1.fromNumber(0)
                    };
                var i = e.shiftRightUnsigned(32)
                  , n = new long_1(e.getLowBits(),0)
                  , r = t.shiftRightUnsigned(32)
                  , o = new long_1(t.getLowBits(),0)
                  , s = i.multiply(r)
                  , a = i.multiply(o)
                  , l = n.multiply(r)
                  , u = n.multiply(o);
                return s = s.add(a.shiftRightUnsigned(32)),
                a = new long_1(a.getLowBits(),0).add(l).add(u.shiftRightUnsigned(32)),
                {
                    high: s = s.add(a.shiftRightUnsigned(32)),
                    low: u = a.shiftLeft(32).add(new long_1(u.getLowBits(),0))
                }
            }
            function lessThan(e, t) {
                var i = e.high >>> 0
                  , n = t.high >>> 0;
                return i < n || i == n && e.low >>> 0 < t.low >>> 0
            }
            function invalidErr(e, t) {
                throw new TypeError('"'.concat(e, '" is not a valid Decimal128 string - ').concat(t))
            }
            function Decimal128(e) {
                this.bytes = e
            }
            Decimal128.fromString = function(e) {
                var t, i = !1, n = !1, r = !1, o = 0, s = 0, a = 0, l = 0, u = 0, h = [0], c = 0, d = 0, f = 0, p = 0, g = 0, m = 0, v = [0, 0], _ = [0, 0], y = 0;
                if (7e3 <= e.length)
                    throw new TypeError(e + " not a valid Decimal128 string");
                var w = e.match(PARSE_STRING_REGEXP)
                  , b = e.match(PARSE_INF_REGEXP)
                  , S = e.match(PARSE_NAN_REGEXP);
                if (!w && !b && !S || 0 === e.length)
                    throw new TypeError(e + " not a valid Decimal128 string");
                if (w) {
                    var T = w[2]
                      , E = w[4]
                      , x = w[5]
                      , O = w[6];
                    E && void 0 === O && invalidErr(e, "missing exponent power"),
                    E && void 0 === T && invalidErr(e, "missing exponent base"),
                    void 0 === E && (x || O) && invalidErr(e, "missing e before exponent")
                }
                if ("+" !== e[y] && "-" !== e[y] || (i = "-" === e[y++]),
                !isDigit(e[y]) && "." !== e[y]) {
                    if ("i" === e[y] || "I" === e[y])
                        return new Decimal128(Buffer$2.from(i ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
                    if ("N" === e[y])
                        return new Decimal128(Buffer$2.from(NAN_BUFFER))
                }
                for (; isDigit(e[y]) || "." === e[y]; )
                    "." !== e[y] ? (c < 34 && ("0" === e[y] && !r || (r || (u = s),
                    r = !0,
                    h[d++] = parseInt(e[y], 10),
                    c += 1)),
                    r && (a += 1),
                    n && (l += 1),
                    s += 1) : (n && invalidErr(e, "contains multiple periods"),
                    n = !0),
                    y += 1;
                if (n && !s)
                    throw new TypeError(e + " not a valid Decimal128 string");
                if ("e" === e[y] || "E" === e[y]) {
                    var P = e.substr(++y).match(EXPONENT_REGEX);
                    if (!P || !P[2])
                        return new Decimal128(Buffer$2.from(NAN_BUFFER));
                    g = parseInt(P[0], 10),
                    y += P[0].length
                }
                if (e[y])
                    return new Decimal128(Buffer$2.from(NAN_BUFFER));
                if (f = 0,
                c) {
                    if (p = c - 1,
                    1 !== (o = a))
                        for (; "0" === e[u + o - 1]; )
                            o -= 1
                } else
                    c = a = 1,
                    o = h[p = f = 0] = 0;
                for (g <= l && 16384 < l - g ? g = EXPONENT_MIN : g -= l; EXPONENT_MAX < g; ) {
                    if (MAX_DIGITS < (p += 1) - f) {
                        if (h.join("").match(/^0+$/)) {
                            g = EXPONENT_MAX;
                            break
                        }
                        invalidErr(e, "overflow")
                    }
                    g -= 1
                }
                for (; g < EXPONENT_MIN || c < a; ) {
                    if (0 === p && o < c) {
                        g = EXPONENT_MIN,
                        o = 0;
                        break
                    }
                    if (c < a ? a -= 1 : p -= 1,
                    g < EXPONENT_MAX)
                        g += 1;
                    else {
                        if (h.join("").match(/^0+$/)) {
                            g = EXPONENT_MAX;
                            break
                        }
                        invalidErr(e, "overflow")
                    }
                }
                if (p - f + 1 < o) {
                    var B = s;
                    n && (u += 1,
                    B += 1),
                    i && (u += 1,
                    B += 1);
                    var R = parseInt(e[u + p + 1], 10)
                      , N = 0;
                    if (5 <= R && (N = 1,
                    5 === R))
                        for (N = h[p] % 2 == 1,
                        m = u + p + 2; m < B; m++)
                            if (parseInt(e[m], 10)) {
                                N = 1;
                                break
                            }
                    if (N)
                        for (var I = p; 0 <= I; I--)
                            if (9 < ++h[I] && (h[I] = 0) === I) {
                                if (!(g < EXPONENT_MAX))
                                    return new Decimal128(Buffer$2.from(i ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
                                g += 1,
                                h[I] = 1
                            }
                }
                if (v = long_1.fromNumber(0),
                _ = long_1.fromNumber(0),
                0 === o)
                    v = long_1.fromNumber(0),
                    _ = long_1.fromNumber(0);
                else if (p - f < 17) {
                    var A = f;
                    for (_ = long_1.fromNumber(h[A++]),
                    v = new long_1(0,0); A <= p; A++)
                        _ = (_ = _.multiply(long_1.fromNumber(10))).add(long_1.fromNumber(h[A]))
                } else {
                    var C = f;
                    for (v = long_1.fromNumber(h[C++]); C <= p - 17; C++)
                        v = (v = v.multiply(long_1.fromNumber(10))).add(long_1.fromNumber(h[C]));
                    for (_ = long_1.fromNumber(h[C++]); C <= p; C++)
                        _ = (_ = _.multiply(long_1.fromNumber(10))).add(long_1.fromNumber(h[C]))
                }
                var D = multiply64x2(v, long_1.fromString("100000000000000000"));
                D.low = D.low.add(_),
                lessThan(D.low, _) && (D.high = D.high.add(long_1.fromNumber(1))),
                t = g + EXPONENT_BIAS;
                var k = {
                    low: long_1.fromNumber(0),
                    high: long_1.fromNumber(0)
                };
                D.high.shiftRightUnsigned(49).and(long_1.fromNumber(1)).equals(long_1.fromNumber(1)) ? (k.high = k.high.or(long_1.fromNumber(3).shiftLeft(61)),
                k.high = k.high.or(long_1.fromNumber(t).and(long_1.fromNumber(16383).shiftLeft(47))),
                k.high = k.high.or(D.high.and(long_1.fromNumber(0x7fffffffffff)))) : (k.high = k.high.or(long_1.fromNumber(16383 & t).shiftLeft(49)),
                k.high = k.high.or(D.high.and(long_1.fromNumber(562949953421311)))),
                k.low = D.low,
                i && (k.high = k.high.or(long_1.fromString("9223372036854775808")));
                var M = Buffer$2.alloc(16);
                return y = 0,
                M[y++] = 255 & k.low.low,
                M[y++] = k.low.low >> 8 & 255,
                M[y++] = k.low.low >> 16 & 255,
                M[y++] = k.low.low >> 24 & 255,
                M[y++] = 255 & k.low.high,
                M[y++] = k.low.high >> 8 & 255,
                M[y++] = k.low.high >> 16 & 255,
                M[y++] = k.low.high >> 24 & 255,
                M[y++] = 255 & k.high.low,
                M[y++] = k.high.low >> 8 & 255,
                M[y++] = k.high.low >> 16 & 255,
                M[y++] = k.high.low >> 24 & 255,
                M[y++] = 255 & k.high.high,
                M[y++] = k.high.high >> 8 & 255,
                M[y++] = k.high.high >> 16 & 255,
                M[y++] = k.high.high >> 24 & 255,
                new Decimal128(M)
            }
            ;
            var COMBINATION_MASK = 31
              , EXPONENT_MASK = 16383
              , COMBINATION_INFINITY = 30
              , COMBINATION_NAN = 31;
            Decimal128.prototype.toString = function() {
                for (var e, t, i, n, r, o, s = 0, a = new Array(36), l = 0; l < a.length; l++)
                    a[l] = 0;
                var u, h, c, d, f, p = 0, g = !1, m = {
                    parts: new Array(4)
                }, v = [];
                p = 0;
                var _ = this.bytes;
                if (n = _[p++] | _[p++] << 8 | _[p++] << 16 | _[p++] << 24,
                i = _[p++] | _[p++] << 8 | _[p++] << 16 | _[p++] << 24,
                t = _[p++] | _[p++] << 8 | _[p++] << 16 | _[p++] << 24,
                e = _[p++] | _[p++] << 8 | _[p++] << 16 | _[p++] << 24,
                p = 0,
                {
                    low: new long_1(n,i),
                    high: new long_1(t,e)
                }.high.lessThan(long_1.ZERO) && v.push("-"),
                (r = e >> 26 & COMBINATION_MASK) >> 3 == 3) {
                    if (r === COMBINATION_INFINITY)
                        return v.join("") + "Infinity";
                    if (r === COMBINATION_NAN)
                        return "NaN";
                    o = e >> 15 & EXPONENT_MASK,
                    c = 8 + (e >> 14 & 1)
                } else
                    c = e >> 14 & 7,
                    o = e >> 17 & EXPONENT_MASK;
                if (u = o - EXPONENT_BIAS,
                m.parts[0] = (16383 & e) + ((15 & c) << 14),
                m.parts[1] = t,
                m.parts[2] = i,
                m.parts[3] = n,
                0 === m.parts[0] && 0 === m.parts[1] && 0 === m.parts[2] && 0 === m.parts[3])
                    g = !0;
                else
                    for (f = 3; 0 <= f; f--) {
                        var y = 0
                          , w = divideu128(m);
                        if (m = w.quotient,
                        y = w.rem.low)
                            for (d = 8; 0 <= d; d--)
                                a[9 * f + d] = y % 10,
                                y = Math.floor(y / 10)
                    }
                if (g)
                    s = 1,
                    a[p] = 0;
                else
                    for (s = 36; !a[p]; )
                        s -= 1,
                        p += 1;
                if (34 <= (h = s - 1 + u) || h <= -7 || 0 < u) {
                    if (34 < s)
                        return v.push(0),
                        0 < u ? v.push("E+" + u) : u < 0 && v.push("E" + u),
                        v.join("");
                    v.push(a[p++]),
                    (s -= 1) && v.push(".");
                    for (var b = 0; b < s; b++)
                        v.push(a[p++]);
                    v.push("E"),
                    0 < h ? v.push("+" + h) : v.push(h)
                } else if (0 <= u)
                    for (var S = 0; S < s; S++)
                        v.push(a[p++]);
                else {
                    var T = s + u;
                    if (0 < T)
                        for (var E = 0; E < T; E++)
                            v.push(a[p++]);
                    else
                        v.push("0");
                    for (v.push("."); T++ < 0; )
                        v.push("0");
                    for (var x = 0; x < s - Math.max(T - 1, 0); x++)
                        v.push(a[p++])
                }
                return v.join("")
            }
            ,
            Decimal128.prototype.toJSON = function() {
                return {
                    $numberDecimal: this.toString()
                }
            }
            ,
            Decimal128.prototype.toExtendedJSON = function() {
                return {
                    $numberDecimal: this.toString()
                }
            }
            ,
            Decimal128.fromExtendedJSON = function(e) {
                return Decimal128.fromString(e.$numberDecimal)
            }
            ,
            Object.defineProperty(Decimal128.prototype, "_bsontype", {
                value: "Decimal128"
            });
            var decimal128 = Decimal128;
            function _classCallCheck$7(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$7(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$7(e, t, i) {
                return t && _defineProperties$7(e.prototype, t),
                i && _defineProperties$7(e, i),
                e
            }
            var MinKey = function() {
                function e() {
                    _classCallCheck$7(this, e)
                }
                return _createClass$7(e, [{
                    key: "toExtendedJSON",
                    value: function() {
                        return {
                            $minKey: 1
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function() {
                        return new e
                    }
                }]),
                e
            }();
            Object.defineProperty(MinKey.prototype, "_bsontype", {
                value: "MinKey"
            });
            var min_key = MinKey;
            function _classCallCheck$8(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$8(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$8(e, t, i) {
                return t && _defineProperties$8(e.prototype, t),
                i && _defineProperties$8(e, i),
                e
            }
            var MaxKey = function() {
                function e() {
                    _classCallCheck$8(this, e)
                }
                return _createClass$8(e, [{
                    key: "toExtendedJSON",
                    value: function() {
                        return {
                            $maxKey: 1
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function() {
                        return new e
                    }
                }]),
                e
            }();
            Object.defineProperty(MaxKey.prototype, "_bsontype", {
                value: "MaxKey"
            });
            var max_key = MaxKey;
            function _classCallCheck$9(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$9(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$9(e, t, i) {
                return t && _defineProperties$9(e.prototype, t),
                i && _defineProperties$9(e, i),
                e
            }
            var DBRef = function() {
                function o(e, t, i, n) {
                    _classCallCheck$9(this, o);
                    var r = e.split(".");
                    2 === r.length && (i = r.shift(),
                    e = r.shift()),
                    this.collection = e,
                    this.oid = t,
                    this.db = i,
                    this.fields = n || {}
                }
                return _createClass$9(o, [{
                    key: "toJSON",
                    value: function() {
                        var e = Object.assign({
                            $ref: this.collection,
                            $id: this.oid
                        }, this.fields);
                        return null != this.db && (e.$db = this.db),
                        e
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        var e = {
                            $ref: this.collection,
                            $id: this.oid
                        };
                        return this.db && (e.$db = this.db),
                        e = Object.assign(e, this.fields)
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e) {
                        var t = Object.assign({}, e);
                        return ["$ref", "$id", "$db"].forEach(function(e) {
                            return delete t[e]
                        }),
                        new o(e.$ref,e.$id,e.$db,t)
                    }
                }]),
                o
            }();
            Object.defineProperty(DBRef.prototype, "_bsontype", {
                value: "DBRef"
            }),
            Object.defineProperty(DBRef.prototype, "namespace", {
                get: function() {
                    return this.collection
                },
                set: function(e) {
                    this.collection = e
                },
                configurable: !1
            });
            var db_ref = DBRef;
            function _classCallCheck$a(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function _defineProperties$a(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            function _createClass$a(e, t, i) {
                return t && _defineProperties$a(e.prototype, t),
                i && _defineProperties$a(e, i),
                e
            }
            var Buffer$3 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , Binary = function() {
                function o(e, t) {
                    if (_classCallCheck$a(this, o),
                    !(null == e || "string" == typeof e || Buffer$3.isBuffer(e) || e instanceof Uint8Array || Array.isArray(e)))
                        throw new TypeError("only String, Buffer, Uint8Array or Array accepted");
                    if (this.sub_type = null == t ? BSON_BINARY_SUBTYPE_DEFAULT : t,
                    this.position = 0,
                    null == e || e instanceof Number)
                        void 0 !== Buffer$3 ? this.buffer = Buffer$3.alloc(o.BUFFER_SIZE) : "undefined" != typeof Uint8Array ? this.buffer = new Uint8Array(new ArrayBuffer(o.BUFFER_SIZE)) : this.buffer = new Array(o.BUFFER_SIZE);
                    else {
                        if ("string" == typeof e)
                            if (void 0 !== Buffer$3)
                                this.buffer = Buffer$3.from(e);
                            else {
                                if ("undefined" == typeof Uint8Array && !Array.isArray(e))
                                    throw new TypeError("only String, Buffer, Uint8Array or Array accepted");
                                this.buffer = writeStringToArray(e)
                            }
                        else
                            this.buffer = e;
                        this.position = e.length
                    }
                }
                return _createClass$a(o, [{
                    key: "put",
                    value: function(e) {
                        if (null != e.length && "number" != typeof e && 1 !== e.length)
                            throw new TypeError("only accepts single character String, Uint8Array or Array");
                        if ("number" != typeof e && e < 0 || 255 < e)
                            throw new TypeError("only accepts number in a valid unsigned byte range 0-255");
                        var t = null;
                        if (t = "string" == typeof e ? e.charCodeAt(0) : null != e.length ? e[0] : e,
                        this.buffer.length > this.position)
                            this.buffer[this.position++] = t;
                        else if (void 0 !== Buffer$3 && Buffer$3.isBuffer(this.buffer)) {
                            var i = Buffer$3.alloc(o.BUFFER_SIZE + this.buffer.length);
                            this.buffer.copy(i, 0, 0, this.buffer.length),
                            this.buffer = i,
                            this.buffer[this.position++] = t
                        } else {
                            var n = null;
                            n = isUint8Array(this.buffer) ? new Uint8Array(new ArrayBuffer(o.BUFFER_SIZE + this.buffer.length)) : new Array(o.BUFFER_SIZE + this.buffer.length);
                            for (var r = 0; r < this.buffer.length; r++)
                                n[r] = this.buffer[r];
                            this.buffer = n,
                            this.buffer[this.position++] = t
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        if (t = "number" == typeof t ? t : this.position,
                        this.buffer.length < t + e.length) {
                            var i = null;
                            if (void 0 !== Buffer$3 && Buffer$3.isBuffer(this.buffer))
                                i = Buffer$3.alloc(this.buffer.length + e.length),
                                this.buffer.copy(i, 0, 0, this.buffer.length);
                            else if (isUint8Array(this.buffer)) {
                                i = new Uint8Array(new ArrayBuffer(this.buffer.length + e.length));
                                for (var n = 0; n < this.position; n++)
                                    i[n] = this.buffer[n]
                            }
                            this.buffer = i
                        }
                        if (void 0 !== Buffer$3 && Buffer$3.isBuffer(e) && Buffer$3.isBuffer(this.buffer))
                            e.copy(this.buffer, t, 0, e.length),
                            this.position = t + e.length > this.position ? t + e.length : this.position;
                        else if (void 0 !== Buffer$3 && "string" == typeof e && Buffer$3.isBuffer(this.buffer))
                            this.buffer.write(e, t, "binary"),
                            this.position = t + e.length > this.position ? t + e.length : this.position;
                        else if (isUint8Array(e) || Array.isArray(e) && "string" != typeof e) {
                            for (var r = 0; r < e.length; r++)
                                this.buffer[t++] = e[r];
                            this.position = t > this.position ? t : this.position
                        } else if ("string" == typeof e) {
                            for (var o = 0; o < e.length; o++)
                                this.buffer[t++] = e.charCodeAt(o);
                            this.position = t > this.position ? t : this.position
                        }
                    }
                }, {
                    key: "read",
                    value: function(e, t) {
                        if (t = t && 0 < t ? t : this.position,
                        this.buffer.slice)
                            return this.buffer.slice(e, e + t);
                        for (var i = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(t)) : new Array(t), n = 0; n < t; n++)
                            i[n] = this.buffer[e++];
                        return i
                    }
                }, {
                    key: "value",
                    value: function(e) {
                        if ((e = null != e && e) && void 0 !== Buffer$3 && Buffer$3.isBuffer(this.buffer) && this.buffer.length === this.position)
                            return this.buffer;
                        if (void 0 !== Buffer$3 && Buffer$3.isBuffer(this.buffer))
                            return e ? this.buffer.slice(0, this.position) : this.buffer.toString("binary", 0, this.position);
                        if (e) {
                            if (null != this.buffer.slice)
                                return this.buffer.slice(0, this.position);
                            for (var t = isUint8Array(this.buffer) ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position), i = 0; i < this.position; i++)
                                t[i] = this.buffer[i];
                            return t
                        }
                        return convertArraytoUtf8BinaryString(this.buffer, 0, this.position)
                    }
                }, {
                    key: "length",
                    value: function() {
                        return this.position
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return null != this.buffer ? this.buffer.toString("base64") : ""
                    }
                }, {
                    key: "toString",
                    value: function(e) {
                        return null != this.buffer ? this.buffer.slice(0, this.position).toString(e) : ""
                    }
                }, {
                    key: "toExtendedJSON",
                    value: function() {
                        var e = Buffer$3.isBuffer(this.buffer) ? this.buffer.toString("base64") : Buffer$3.from(this.buffer).toString("base64")
                          , t = Number(this.sub_type).toString(16);
                        return {
                            $binary: {
                                base64: e,
                                subType: 1 === t.length ? "0" + t : t
                            }
                        }
                    }
                }], [{
                    key: "fromExtendedJSON",
                    value: function(e) {
                        var t = e.$binary.subType ? parseInt(e.$binary.subType, 16) : 0;
                        return new o(Buffer$3.from(e.$binary.base64, "base64"),t)
                    }
                }]),
                o
            }()
              , BSON_BINARY_SUBTYPE_DEFAULT = 0;
            function isUint8Array(e) {
                return "[object Uint8Array]" === Object.prototype.toString.call(e)
            }
            function writeStringToArray(e) {
                for (var t = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(e.length)) : new Array(e.length), i = 0; i < e.length; i++)
                    t[i] = e.charCodeAt(i);
                return t
            }
            function convertArraytoUtf8BinaryString(e, t, i) {
                for (var n = "", r = t; r < i; r++)
                    n += String.fromCharCode(e[r]);
                return n
            }
            Binary.BUFFER_SIZE = 256,
            Binary.SUBTYPE_DEFAULT = 0,
            Binary.SUBTYPE_FUNCTION = 1,
            Binary.SUBTYPE_BYTE_ARRAY = 2,
            Binary.SUBTYPE_UUID_OLD = 3,
            Binary.SUBTYPE_UUID = 4,
            Binary.SUBTYPE_MD5 = 5,
            Binary.SUBTYPE_USER_DEFINED = 128,
            Object.defineProperty(Binary.prototype, "_bsontype", {
                value: "Binary"
            });
            var binary = Binary
              , constants = {
                BSON_INT32_MAX: 2147483647,
                BSON_INT32_MIN: -2147483648,
                BSON_INT64_MAX: Math.pow(2, 63) - 1,
                BSON_INT64_MIN: -Math.pow(2, 63),
                JS_INT_MAX: 9007199254740992,
                JS_INT_MIN: -9007199254740992,
                BSON_DATA_NUMBER: 1,
                BSON_DATA_STRING: 2,
                BSON_DATA_OBJECT: 3,
                BSON_DATA_ARRAY: 4,
                BSON_DATA_BINARY: 5,
                BSON_DATA_UNDEFINED: 6,
                BSON_DATA_OID: 7,
                BSON_DATA_BOOLEAN: 8,
                BSON_DATA_DATE: 9,
                BSON_DATA_NULL: 10,
                BSON_DATA_REGEXP: 11,
                BSON_DATA_DBPOINTER: 12,
                BSON_DATA_CODE: 13,
                BSON_DATA_SYMBOL: 14,
                BSON_DATA_CODE_W_SCOPE: 15,
                BSON_DATA_INT: 16,
                BSON_DATA_TIMESTAMP: 17,
                BSON_DATA_LONG: 18,
                BSON_DATA_DECIMAL128: 19,
                BSON_DATA_MIN_KEY: 255,
                BSON_DATA_MAX_KEY: 127,
                BSON_BINARY_SUBTYPE_DEFAULT: 0,
                BSON_BINARY_SUBTYPE_FUNCTION: 1,
                BSON_BINARY_SUBTYPE_BYTE_ARRAY: 2,
                BSON_BINARY_SUBTYPE_UUID: 3,
                BSON_BINARY_SUBTYPE_MD5: 4,
                BSON_BINARY_SUBTYPE_USER_DEFINED: 128
            };
            function _typeof$2(e) {
                return (_typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                )(e)
            }
            var keysToCodecs = {
                $oid: objectid,
                $binary: binary,
                $symbol: symbol,
                $numberInt: int_32,
                $numberDecimal: decimal128,
                $numberDouble: double_1,
                $numberLong: long_1,
                $minKey: min_key,
                $maxKey: max_key,
                $regularExpression: regexp,
                $timestamp: timestamp
            };
            function deserializeValue(e, t, i, n) {
                if ("number" == typeof i) {
                    if (n.relaxed)
                        return i;
                    if (Math.floor(i) === i) {
                        if (BSON_INT32_MIN <= i && i <= BSON_INT32_MAX)
                            return new int_32(i);
                        if (BSON_INT64_MIN <= i && i <= BSON_INT64_MAX)
                            return new long_1.fromNumber(i)
                    }
                    return new double_1(i)
                }
                if (null == i || "object" !== _typeof$2(i))
                    return i;
                if (i.$undefined)
                    return null;
                for (var r = Object.keys(i).filter(function(e) {
                    return e.startsWith("$") && null != i[e]
                }), o = 0; o < r.length; o++) {
                    var s = keysToCodecs[r[o]];
                    if (s)
                        return s.fromExtendedJSON(i, n)
                }
                if (null != i.$date) {
                    var a = i.$date
                      , l = new Date;
                    return "string" == typeof a ? l.setTime(Date.parse(a)) : long_1.isLong(a) ? l.setTime(a.toNumber()) : "number" == typeof a && n.relaxed && l.setTime(a),
                    l
                }
                if (null != i.$code) {
                    var u = Object.assign({}, i);
                    return i.$scope && (u.$scope = deserializeValue(e, null, i.$scope)),
                    code.fromExtendedJSON(i)
                }
                if (null != i.$ref || null != i.$dbPointer) {
                    var h = i.$ref ? i : i.$dbPointer;
                    if (h instanceof db_ref)
                        return h;
                    var c = Object.keys(h).filter(function(e) {
                        return e.startsWith("$")
                    })
                      , d = !0;
                    if (c.forEach(function(e) {
                        -1 === ["$ref", "$id", "$db"].indexOf(e) && (d = !1)
                    }),
                    d)
                        return db_ref.fromExtendedJSON(h)
                }
                return i
            }
            function parse(e, i) {
                var n = this;
                return "boolean" == typeof (i = Object.assign({}, {
                    relaxed: !0
                }, i)).relaxed && (i.strict = !i.relaxed),
                "boolean" == typeof i.strict && (i.relaxed = !i.strict),
                JSON.parse(e, function(e, t) {
                    return deserializeValue(n, e, t, i)
                })
            }
            var BSON_INT32_MAX = 2147483647
              , BSON_INT32_MIN = -2147483648
              , BSON_INT64_MAX = 0x8000000000000000
              , BSON_INT64_MIN = -0x8000000000000000;
            function stringify(e, t, i, n) {
                null != i && "object" === _typeof$2(i) && (n = i,
                i = 0),
                null == t || "object" !== _typeof$2(t) || Array.isArray(t) || (n = t,
                t = null,
                i = 0),
                n = Object.assign({}, {
                    relaxed: !0
                }, n);
                var r = Array.isArray(e) ? serializeArray(e, n) : serializeDocument(e, n);
                return JSON.stringify(r, t, i)
            }
            function serialize(e, t) {
                return t = t || {},
                JSON.parse(stringify(e, t))
            }
            function deserialize(e, t) {
                return t = t || {},
                parse(JSON.stringify(e), t)
            }
            function serializeArray(e, t) {
                return e.map(function(e) {
                    return serializeValue(e, t)
                })
            }
            function getISOString(e) {
                var t = e.toISOString();
                return 0 !== e.getUTCMilliseconds() ? t : t.slice(0, -5) + "Z"
            }
            function serializeValue(e, t) {
                if (Array.isArray(e))
                    return serializeArray(e, t);
                if (void 0 === e)
                    return null;
                if (e instanceof Date) {
                    var i = e.getTime()
                      , n = -1 < i && i < 2534023188e5;
                    return t.relaxed && n ? {
                        $date: getISOString(e)
                    } : {
                        $date: {
                            $numberLong: e.getTime().toString()
                        }
                    }
                }
                if ("number" == typeof e && !t.relaxed) {
                    if (Math.floor(e) === e) {
                        var r = BSON_INT64_MIN <= e && e <= BSON_INT64_MAX;
                        if (BSON_INT32_MIN <= e && e <= BSON_INT32_MAX)
                            return {
                                $numberInt: e.toString()
                            };
                        if (r)
                            return {
                                $numberLong: e.toString()
                            }
                    }
                    return {
                        $numberDouble: e.toString()
                    }
                }
                if (e instanceof RegExp) {
                    var o = e.flags;
                    return void 0 === o && (o = e.toString().match(/[gimuy]*$/)[0]),
                    new regexp(e.source,o).toExtendedJSON()
                }
                return null != e && "object" === _typeof$2(e) ? serializeDocument(e, t) : e
            }
            var BSON_TYPE_MAPPINGS = {
                Binary: function(e) {
                    return new binary(e.value(),e.subtype)
                },
                Code: function(e) {
                    return new code(e.code,e.scope)
                },
                DBRef: function(e) {
                    return new db_ref(e.collection || e.namespace,e.oid,e.db,e.fields)
                },
                Decimal128: function(e) {
                    return new decimal128(e.bytes)
                },
                Double: function(e) {
                    return new double_1(e.value)
                },
                Int32: function(e) {
                    return new int_32(e.value)
                },
                Long: function(e) {
                    return long_1.fromBits(null != e.low ? e.low : e.low_, null != e.low ? e.high : e.high_, null != e.low ? e.unsigned : e.unsigned_)
                },
                MaxKey: function() {
                    return new max_key
                },
                MinKey: function() {
                    return new min_key
                },
                ObjectID: function(e) {
                    return new objectid(e)
                },
                ObjectId: function(e) {
                    return new objectid(e)
                },
                BSONRegExp: function(e) {
                    return new regexp(e.pattern,e.options)
                },
                Symbol: function(e) {
                    return new symbol(e.value)
                },
                Timestamp: function(e) {
                    return timestamp.fromBits(e.low, e.high)
                }
            };
            function serializeDocument(e, t) {
                if (null == e || "object" !== _typeof$2(e))
                    throw new Error("not an object instance");
                var i = e._bsontype;
                if (void 0 === i) {
                    var n = {};
                    for (var r in e)
                        n[r] = serializeValue(e[r], t);
                    return n
                }
                if ("string" != typeof i)
                    throw new Error("_bsontype must be a string, but was: " + _typeof$2(i));
                var o = e;
                if ("function" != typeof o.toExtendedJSON) {
                    var s = BSON_TYPE_MAPPINGS[i];
                    if (!s)
                        throw new TypeError("Unrecognized or invalid _bsontype: " + i);
                    o = s(o)
                }
                return "Code" === i && o.scope ? o = new code(o.code,serializeValue(o.scope, t)) : "DBRef" === i && o.oid && (o = new db_ref(o.collection,serializeValue(o.oid, t),o.db,o.fields)),
                o.toExtendedJSON(t)
            }
            var extended_json = {
                parse: parse,
                deserialize: deserialize,
                serialize: serialize,
                stringify: stringify
            }
              , FIRST_BIT = 128
              , FIRST_TWO_BITS = 192
              , FIRST_THREE_BITS = 224
              , FIRST_FOUR_BITS = 240
              , FIRST_FIVE_BITS = 248
              , TWO_BIT_CHAR = 192
              , THREE_BIT_CHAR = 224
              , FOUR_BIT_CHAR = 240
              , CONTINUING_CHAR = 128;
            function validateUtf8(e, t, i) {
                for (var n = 0, r = t; r < i; r += 1) {
                    var o = e[r];
                    if (n) {
                        if ((o & FIRST_TWO_BITS) !== CONTINUING_CHAR)
                            return !1;
                        n -= 1
                    } else if (o & FIRST_BIT)
                        if ((o & FIRST_THREE_BITS) === TWO_BIT_CHAR)
                            n = 1;
                        else if ((o & FIRST_FOUR_BITS) === THREE_BIT_CHAR)
                            n = 2;
                        else {
                            if ((o & FIRST_FIVE_BITS) !== FOUR_BIT_CHAR)
                                return !1;
                            n = 3
                        }
                }
                return !n
            }
            var validateUtf8_1 = validateUtf8
              , validate_utf8 = {
                validateUtf8: validateUtf8_1
            }
              , Buffer$4 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , validateUtf8$1 = validate_utf8.validateUtf8
              , JS_INT_MAX_LONG = long_1.fromNumber(constants.JS_INT_MAX)
              , JS_INT_MIN_LONG = long_1.fromNumber(constants.JS_INT_MIN)
              , functionCache = {};
            function deserialize$1(e, t, i) {
                var n = (t = null == t ? {} : t) && t.index ? t.index : 0
                  , r = e[n] | e[n + 1] << 8 | e[n + 2] << 16 | e[n + 3] << 24;
                if (r < 5)
                    throw new Error("bson size must be >= 5, is ".concat(r));
                if (t.allowObjectSmallerThanBufferSize && e.length < r)
                    throw new Error("buffer length ".concat(e.length, " must be >= bson size ").concat(r));
                if (!t.allowObjectSmallerThanBufferSize && e.length !== r)
                    throw new Error("buffer length ".concat(e.length, " must === bson size ").concat(r));
                if (r + n > e.length)
                    throw new Error("(bson size ".concat(r, " + options.index ").concat(n, " must be <= buffer length ").concat(Buffer$4.byteLength(e), ")"));
                if (0 !== e[n + r - 1])
                    throw new Error("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
                return deserializeObject(e, n, t, i)
            }
            function deserializeObject(e, t, i, n) {
                var r = null != i.evalFunctions && i.evalFunctions
                  , o = null != i.cacheFunctions && i.cacheFunctions
                  , s = null != i.cacheFunctionsCrc32 && i.cacheFunctionsCrc32;
                if (!s)
                    var a = null;
                var l = null == i.fieldsAsRaw ? null : i.fieldsAsRaw
                  , u = null != i.raw && i.raw
                  , h = "boolean" == typeof i.bsonRegExp && i.bsonRegExp
                  , c = null != i.promoteBuffers && i.promoteBuffers
                  , d = null == i.promoteLongs || i.promoteLongs
                  , f = null == i.promoteValues || i.promoteValues
                  , p = t;
                if (e.length < 5)
                    throw new Error("corrupt bson message < 5 bytes long");
                var g = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                if (g < 5 || g > e.length)
                    throw new Error("corrupt bson message");
                for (var m = n ? [] : {}, v = 0; ; ) {
                    var _ = e[t++];
                    if (0 === _)
                        break;
                    for (var y = t; 0 !== e[y] && y < e.length; )
                        y++;
                    if (y >= Buffer$4.byteLength(e))
                        throw new Error("Bad BSON Document: illegal CString");
                    var w = n ? v++ : e.toString("utf8", t, y);
                    if (t = y + 1,
                    _ === constants.BSON_DATA_STRING) {
                        var b = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (b <= 0 || b > e.length - t || 0 !== e[t + b - 1])
                            throw new Error("bad string length in bson");
                        if (!validateUtf8$1(e, t, t + b - 1))
                            throw new Error("Invalid UTF-8 string in BSON document");
                        var S = e.toString("utf8", t, t + b - 1);
                        m[w] = S,
                        t += b
                    } else if (_ === constants.BSON_DATA_OID) {
                        var T = Buffer$4.alloc(12);
                        e.copy(T, 0, t, t + 12),
                        m[w] = new objectid(T),
                        t += 12
                    } else if (_ === constants.BSON_DATA_INT && !1 === f)
                        m[w] = new int_32(e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24);
                    else if (_ === constants.BSON_DATA_INT)
                        m[w] = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                    else if (_ === constants.BSON_DATA_NUMBER && !1 === f)
                        m[w] = new double_1(e.readDoubleLE(t)),
                        t += 8;
                    else if (_ === constants.BSON_DATA_NUMBER)
                        m[w] = e.readDoubleLE(t),
                        t += 8;
                    else if (_ === constants.BSON_DATA_DATE) {
                        var E = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24
                          , x = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        m[w] = new Date(new long_1(E,x).toNumber())
                    } else if (_ === constants.BSON_DATA_BOOLEAN) {
                        if (0 !== e[t] && 1 !== e[t])
                            throw new Error("illegal boolean type value");
                        m[w] = 1 === e[t++]
                    } else if (_ === constants.BSON_DATA_OBJECT) {
                        var O = t
                          , P = e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24;
                        if (P <= 0 || P > e.length - t)
                            throw new Error("bad embedded document length in bson");
                        m[w] = u ? e.slice(t, t + P) : deserializeObject(e, O, i, !1),
                        t += P
                    } else if (_ === constants.BSON_DATA_ARRAY) {
                        var B = t
                          , R = e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24
                          , N = i
                          , I = t + R;
                        if (l && l[w]) {
                            for (var A in N = {},
                            i)
                                N[A] = i[A];
                            N.raw = !0
                        }
                        if (m[w] = deserializeObject(e, B, N, !0),
                        0 !== e[(t += R) - 1])
                            throw new Error("invalid array terminator byte");
                        if (t !== I)
                            throw new Error("corrupted array bson")
                    } else if (_ === constants.BSON_DATA_UNDEFINED)
                        m[w] = void 0;
                    else if (_ === constants.BSON_DATA_NULL)
                        m[w] = null;
                    else if (_ === constants.BSON_DATA_LONG) {
                        var C = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24
                          , D = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24
                          , k = new long_1(C,D);
                        m[w] = d && !0 === f && k.lessThanOrEqual(JS_INT_MAX_LONG) && k.greaterThanOrEqual(JS_INT_MIN_LONG) ? k.toNumber() : k
                    } else if (_ === constants.BSON_DATA_DECIMAL128) {
                        var M = Buffer$4.alloc(16);
                        e.copy(M, 0, t, t + 16),
                        t += 16;
                        var H = new decimal128(M);
                        m[w] = H.toObject ? H.toObject() : H
                    } else if (_ === constants.BSON_DATA_BINARY) {
                        var z = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24
                          , L = z
                          , F = e[t++];
                        if (z < 0)
                            throw new Error("Negative binary type element size found");
                        if (z > Buffer$4.byteLength(e))
                            throw new Error("Binary type size larger than document size");
                        if (null != e.slice) {
                            if (F === binary.SUBTYPE_BYTE_ARRAY) {
                                if ((z = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24) < 0)
                                    throw new Error("Negative binary type element size found for subtype 0x02");
                                if (L - 4 < z)
                                    throw new Error("Binary type with subtype 0x02 contains to long binary size");
                                if (z < L - 4)
                                    throw new Error("Binary type with subtype 0x02 contains to short binary size")
                            }
                            m[w] = c && f ? e.slice(t, t + z) : new binary(e.slice(t, t + z),F)
                        } else {
                            var U = "undefined" != typeof Uint8Array ? new Uint8Array(new ArrayBuffer(z)) : new Array(z);
                            if (F === binary.SUBTYPE_BYTE_ARRAY) {
                                if ((z = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24) < 0)
                                    throw new Error("Negative binary type element size found for subtype 0x02");
                                if (L - 4 < z)
                                    throw new Error("Binary type with subtype 0x02 contains to long binary size");
                                if (z < L - 4)
                                    throw new Error("Binary type with subtype 0x02 contains to short binary size")
                            }
                            for (y = 0; y < z; y++)
                                U[y] = e[t + y];
                            m[w] = c && f ? U : new binary(U,F)
                        }
                        t += z
                    } else if (_ === constants.BSON_DATA_REGEXP && !1 === h) {
                        for (y = t; 0 !== e[y] && y < e.length; )
                            y++;
                        if (y >= e.length)
                            throw new Error("Bad BSON Document: illegal CString");
                        var X = e.toString("utf8", t, y);
                        for (y = t = y + 1; 0 !== e[y] && y < e.length; )
                            y++;
                        if (y >= e.length)
                            throw new Error("Bad BSON Document: illegal CString");
                        var $ = e.toString("utf8", t, y);
                        t = y + 1;
                        var j = new Array($.length);
                        for (y = 0; y < $.length; y++)
                            switch ($[y]) {
                            case "m":
                                j[y] = "m";
                                break;
                            case "s":
                                j[y] = "g";
                                break;
                            case "i":
                                j[y] = "i"
                            }
                        m[w] = new RegExp(X,j.join(""))
                    } else if (_ === constants.BSON_DATA_REGEXP && !0 === h) {
                        for (y = t; 0 !== e[y] && y < e.length; )
                            y++;
                        if (y >= e.length)
                            throw new Error("Bad BSON Document: illegal CString");
                        var q = e.toString("utf8", t, y);
                        for (y = t = y + 1; 0 !== e[y] && y < e.length; )
                            y++;
                        if (y >= e.length)
                            throw new Error("Bad BSON Document: illegal CString");
                        var Y = e.toString("utf8", t, y);
                        t = y + 1,
                        m[w] = new regexp(q,Y)
                    } else if (_ === constants.BSON_DATA_SYMBOL) {
                        var W = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (W <= 0 || W > e.length - t || 0 !== e[t + W - 1])
                            throw new Error("bad string length in bson");
                        m[w] = e.toString("utf8", t, t + W - 1),
                        t += W
                    } else if (_ === constants.BSON_DATA_TIMESTAMP) {
                        var G = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24
                          , V = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        m[w] = new timestamp(G,V)
                    } else if (_ === constants.BSON_DATA_MIN_KEY)
                        m[w] = new min_key;
                    else if (_ === constants.BSON_DATA_MAX_KEY)
                        m[w] = new max_key;
                    else if (_ === constants.BSON_DATA_CODE) {
                        var K = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (K <= 0 || K > e.length - t || 0 !== e[t + K - 1])
                            throw new Error("bad string length in bson");
                        var Z = e.toString("utf8", t, t + K - 1);
                        if (r)
                            if (o) {
                                var J = s ? a(Z) : Z;
                                m[w] = isolateEvalWithHash(functionCache, J, Z, m)
                            } else
                                m[w] = isolateEval(Z);
                        else
                            m[w] = new code(Z);
                        t += K
                    } else if (_ === constants.BSON_DATA_CODE_W_SCOPE) {
                        var Q = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (Q < 13)
                            throw new Error("code_w_scope total size shorter minimum expected length");
                        var ee = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (ee <= 0 || ee > e.length - t || 0 !== e[t + ee - 1])
                            throw new Error("bad string length in bson");
                        var te = e.toString("utf8", t, t + ee - 1)
                          , ie = t += ee
                          , ne = e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24
                          , re = deserializeObject(e, ie, i, !1);
                        if (t += ne,
                        Q < 8 + ne + ee)
                            throw new Error("code_w_scope total size is to short, truncating scope");
                        if (8 + ne + ee < Q)
                            throw new Error("code_w_scope total size is to long, clips outer document");
                        if (r) {
                            if (o) {
                                var oe = s ? a(te) : te;
                                m[w] = isolateEvalWithHash(functionCache, oe, te, m)
                            } else
                                m[w] = isolateEval(te);
                            m[w].scope = re
                        } else
                            m[w] = new code(te,re)
                    } else {
                        if (_ !== constants.BSON_DATA_DBPOINTER)
                            throw new Error("Detected unknown BSON type " + _.toString(16) + ' for fieldname "' + w + '", are you using the latest BSON parser?');
                        var se = e[t++] | e[t++] << 8 | e[t++] << 16 | e[t++] << 24;
                        if (se <= 0 || se > e.length - t || 0 !== e[t + se - 1])
                            throw new Error("bad string length in bson");
                        if (!validateUtf8$1(e, t, t + se - 1))
                            throw new Error("Invalid UTF-8 string in BSON document");
                        var ae = e.toString("utf8", t, t + se - 1);
                        t += se;
                        var le = Buffer$4.alloc(12);
                        e.copy(le, 0, t, t + 12);
                        var ue = new objectid(le);
                        t += 12,
                        m[w] = new db_ref(ae,ue)
                    }
                }
                if (g != t - p) {
                    if (n)
                        throw new Error("corrupt array bson");
                    throw new Error("corrupt object bson")
                }
                var he = Object.keys(m).filter(function(e) {
                    return e.startsWith("$")
                })
                  , ce = !0;
                if (he.forEach(function(e) {
                    -1 === ["$ref", "$id", "$db"].indexOf(e) && (ce = !1)
                }),
                !ce)
                    return m;
                if (null == m.$id || null == m.$ref)
                    return m;
                var de = Object.assign({}, m);
                return delete de.$ref,
                delete de.$id,
                delete de.$db,
                new db_ref(m.$ref,m.$id,m.$db || null,de)
            }
            function isolateEvalWithHash(functionCache, hash, functionString, object) {
                var value = null;
                return null == functionCache[hash] && (eval("value = " + functionString),
                functionCache[hash] = value),
                functionCache[hash].bind(object)
            }
            function isolateEval(functionString) {
                var value = null;
                return eval("value = " + functionString),
                value
            }
            var deserializer = deserialize$1;
            function readIEEE754(e, t, i, n, r) {
                var o, s, a = "big" === i, l = 8 * r - n - 1, u = (1 << l) - 1, h = u >> 1, c = -7, d = a ? 0 : r - 1, f = a ? 1 : -1, p = e[t + d];
                for (d += f,
                o = p & (1 << -c) - 1,
                p >>= -c,
                c += l; 0 < c; o = 256 * o + e[t + d],
                d += f,
                c -= 8)
                    ;
                for (s = o & (1 << -c) - 1,
                o >>= -c,
                c += n; 0 < c; s = 256 * s + e[t + d],
                d += f,
                c -= 8)
                    ;
                if (0 === o)
                    o = 1 - h;
                else {
                    if (o === u)
                        return s ? NaN : 1 / 0 * (p ? -1 : 1);
                    s += Math.pow(2, n),
                    o -= h
                }
                return (p ? -1 : 1) * s * Math.pow(2, o - n)
            }
            function writeIEEE754(e, t, i, n, r, o) {
                var s, a, l, u = "big" === n, h = 8 * o - r - 1, c = (1 << h) - 1, d = c >> 1, f = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = u ? o - 1 : 0, g = u ? -1 : 1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t),
                isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0,
                s = c) : (s = Math.floor(Math.log(t) / Math.LN2),
                t * (l = Math.pow(2, -s)) < 1 && (s--,
                l *= 2),
                2 <= (t += 1 <= s + d ? f / l : f * Math.pow(2, 1 - d)) * l && (s++,
                l /= 2),
                c <= s + d ? (a = 0,
                s = c) : 1 <= s + d ? (a = (t * l - 1) * Math.pow(2, r),
                s += d) : (a = t * Math.pow(2, d - 1) * Math.pow(2, r),
                s = 0)),
                isNaN(t) && (a = 0); 8 <= r; )
                    e[i + p] = 255 & a,
                    p += g,
                    a /= 256,
                    r -= 8;
                for (s = s << r | a,
                isNaN(t) && (s += 8),
                h += r; 0 < h; )
                    e[i + p] = 255 & s,
                    p += g,
                    s /= 256,
                    h -= 8;
                e[i + p - g] |= 128 * m
            }
            var float_parser = {
                readIEEE754: readIEEE754,
                writeIEEE754: writeIEEE754
            };
            function _typeof$3(e) {
                return (_typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                )(e)
            }
            var Buffer$5 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , writeIEEE754$1 = float_parser.writeIEEE754
              , normalizedFunctionString$1 = utils.normalizedFunctionString
              , regexp$1 = /\x00/
              , ignoreKeys = new Set(["$db", "$ref", "$id", "$clusterTime"])
              , isDate$1 = function(e) {
                return "object" === _typeof$3(e) && "[object Date]" === Object.prototype.toString.call(e)
            }
              , isRegExp$1 = function(e) {
                return "[object RegExp]" === Object.prototype.toString.call(e)
            };
            function serializeString(e, t, i, n, r) {
                e[n++] = constants.BSON_DATA_STRING;
                var o = r ? e.write(t, n, "ascii") : e.write(t, n, "utf8");
                e[(n = n + o + 1) - 1] = 0;
                var s = e.write(i, n + 4, "utf8");
                return e[n + 3] = s + 1 >> 24 & 255,
                e[n + 2] = s + 1 >> 16 & 255,
                e[n + 1] = s + 1 >> 8 & 255,
                e[n] = s + 1 & 255,
                n = n + 4 + s,
                e[n++] = 0,
                n
            }
            function serializeNumber(e, t, i, n, r) {
                if (Math.floor(i) === i && i >= constants.JS_INT_MIN && i <= constants.JS_INT_MAX)
                    if (i >= constants.BSON_INT32_MIN && i <= constants.BSON_INT32_MAX)
                        e[n++] = constants.BSON_DATA_INT,
                        n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                        e[n++] = 0,
                        e[n++] = 255 & i,
                        e[n++] = i >> 8 & 255,
                        e[n++] = i >> 16 & 255,
                        e[n++] = i >> 24 & 255;
                    else if (i >= constants.JS_INT_MIN && i <= constants.JS_INT_MAX) {
                        e[n++] = constants.BSON_DATA_NUMBER,
                        n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                        e[n++] = 0,
                        writeIEEE754$1(e, i, n, "little", 52, 8),
                        n += 8
                    } else {
                        e[n++] = constants.BSON_DATA_LONG,
                        n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                        e[n++] = 0;
                        var o = long_1.fromNumber(i)
                          , s = o.getLowBits()
                          , a = o.getHighBits();
                        e[n++] = 255 & s,
                        e[n++] = s >> 8 & 255,
                        e[n++] = s >> 16 & 255,
                        e[n++] = s >> 24 & 255,
                        e[n++] = 255 & a,
                        e[n++] = a >> 8 & 255,
                        e[n++] = a >> 16 & 255,
                        e[n++] = a >> 24 & 255
                    }
                else
                    e[n++] = constants.BSON_DATA_NUMBER,
                    n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                    e[n++] = 0,
                    writeIEEE754$1(e, i, n, "little", 52, 8),
                    n += 8;
                return n
            }
            function serializeNull(e, t, i, n, r) {
                return e[n++] = constants.BSON_DATA_NULL,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                n
            }
            function serializeBoolean(e, t, i, n, r) {
                return e[n++] = constants.BSON_DATA_BOOLEAN,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                e[n++] = i ? 1 : 0,
                n
            }
            function serializeDate(e, t, i, n, r) {
                e[n++] = constants.BSON_DATA_DATE,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var o = long_1.fromNumber(i.getTime())
                  , s = o.getLowBits()
                  , a = o.getHighBits();
                return e[n++] = 255 & s,
                e[n++] = s >> 8 & 255,
                e[n++] = s >> 16 & 255,
                e[n++] = s >> 24 & 255,
                e[n++] = 255 & a,
                e[n++] = a >> 8 & 255,
                e[n++] = a >> 16 & 255,
                e[n++] = a >> 24 & 255,
                n
            }
            function serializeRegExp(e, t, i, n, r) {
                if (e[n++] = constants.BSON_DATA_REGEXP,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                i.source && null != i.source.match(regexp$1))
                    throw Error("value " + i.source + " must not contain null bytes");
                return n += e.write(i.source, n, "utf8"),
                e[n++] = 0,
                i.ignoreCase && (e[n++] = 105),
                i.global && (e[n++] = 115),
                i.multiline && (e[n++] = 109),
                e[n++] = 0,
                n
            }
            function serializeBSONRegExp(e, t, i, n, r) {
                if (e[n++] = constants.BSON_DATA_REGEXP,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                null != i.pattern.match(regexp$1))
                    throw Error("pattern " + i.pattern + " must not contain null bytes");
                return n += e.write(i.pattern, n, "utf8"),
                e[n++] = 0,
                n += e.write(i.options.split("").sort().join(""), n, "utf8"),
                e[n++] = 0,
                n
            }
            function serializeMinMax(e, t, i, n, r) {
                return null === i ? e[n++] = constants.BSON_DATA_NULL : "MinKey" === i._bsontype ? e[n++] = constants.BSON_DATA_MIN_KEY : e[n++] = constants.BSON_DATA_MAX_KEY,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                n
            }
            function serializeObjectId(e, t, i, n, r) {
                if (e[n++] = constants.BSON_DATA_OID,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                "string" == typeof i.id)
                    e.write(i.id, n, "binary");
                else {
                    if (!i.id || !i.id.copy)
                        throw new TypeError("object [" + JSON.stringify(i) + "] is not a valid ObjectId");
                    i.id.copy(e, n, 0, 12)
                }
                return n + 12
            }
            function serializeBuffer(e, t, i, n, r) {
                e[n++] = constants.BSON_DATA_BINARY,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var o = i.length;
                return e[n++] = 255 & o,
                e[n++] = o >> 8 & 255,
                e[n++] = o >> 16 & 255,
                e[n++] = o >> 24 & 255,
                e[n++] = constants.BSON_BINARY_SUBTYPE_DEFAULT,
                i.copy(e, n, 0, o),
                n += o
            }
            function serializeObject(e, t, i, n, r, o, s, a, l, u) {
                for (var h = 0; h < u.length; h++)
                    if (u[h] === i)
                        throw new Error("cyclic dependency detected");
                u.push(i),
                e[n++] = Array.isArray(i) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT,
                n += l ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var c = serializeInto(e, i, r, n, o + 1, s, a, u);
                return u.pop(),
                c
            }
            function serializeDecimal128(e, t, i, n, r) {
                return e[n++] = constants.BSON_DATA_DECIMAL128,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                i.bytes.copy(e, n, 0, 16),
                n + 16
            }
            function serializeLong(e, t, i, n, r) {
                e[n++] = "Long" === i._bsontype ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var o = i.getLowBits()
                  , s = i.getHighBits();
                return e[n++] = 255 & o,
                e[n++] = o >> 8 & 255,
                e[n++] = o >> 16 & 255,
                e[n++] = o >> 24 & 255,
                e[n++] = 255 & s,
                e[n++] = s >> 8 & 255,
                e[n++] = s >> 16 & 255,
                e[n++] = s >> 24 & 255,
                n
            }
            function serializeInt32(e, t, i, n, r) {
                return e[n++] = constants.BSON_DATA_INT,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                e[n++] = 255 & i,
                e[n++] = i >> 8 & 255,
                e[n++] = i >> 16 & 255,
                e[n++] = i >> 24 & 255,
                n
            }
            function serializeDouble(e, t, i, n, r) {
                return e[n++] = constants.BSON_DATA_NUMBER,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0,
                writeIEEE754$1(e, i.value, n, "little", 52, 8),
                n += 8
            }
            function serializeFunction(e, t, i, n, r, o, s) {
                e[n++] = constants.BSON_DATA_CODE,
                n += s ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var a = normalizedFunctionString$1(i)
                  , l = e.write(a, n + 4, "utf8") + 1;
                return e[n] = 255 & l,
                e[n + 1] = l >> 8 & 255,
                e[n + 2] = l >> 16 & 255,
                e[n + 3] = l >> 24 & 255,
                n = n + 4 + l - 1,
                e[n++] = 0,
                n
            }
            function serializeCode(e, t, i, n, r, o, s, a, l) {
                if (i.scope && "object" === _typeof$3(i.scope)) {
                    e[n++] = constants.BSON_DATA_CODE_W_SCOPE,
                    n += l ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                    e[n++] = 0;
                    var u = n
                      , h = "string" == typeof i.code ? i.code : i.code.toString();
                    n += 4;
                    var c = e.write(h, n + 4, "utf8") + 1;
                    e[n] = 255 & c,
                    e[n + 1] = c >> 8 & 255,
                    e[n + 2] = c >> 16 & 255,
                    e[n + 3] = c >> 24 & 255,
                    e[n + 4 + c - 1] = 0,
                    n = n + c + 4;
                    var d = serializeInto(e, i.scope, r, n, o + 1, s, a);
                    n = d - 1;
                    var f = d - u;
                    e[u++] = 255 & f,
                    e[u++] = f >> 8 & 255,
                    e[u++] = f >> 16 & 255,
                    e[u++] = f >> 24 & 255,
                    e[n++] = 0
                } else {
                    e[n++] = constants.BSON_DATA_CODE,
                    n += l ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                    e[n++] = 0;
                    var p = i.code.toString()
                      , g = e.write(p, n + 4, "utf8") + 1;
                    e[n] = 255 & g,
                    e[n + 1] = g >> 8 & 255,
                    e[n + 2] = g >> 16 & 255,
                    e[n + 3] = g >> 24 & 255,
                    n = n + 4 + g - 1,
                    e[n++] = 0
                }
                return n
            }
            function serializeBinary(e, t, i, n, r) {
                e[n++] = constants.BSON_DATA_BINARY,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var o = i.value(!0)
                  , s = i.position;
                return i.sub_type === binary.SUBTYPE_BYTE_ARRAY && (s += 4),
                e[n++] = 255 & s,
                e[n++] = s >> 8 & 255,
                e[n++] = s >> 16 & 255,
                e[n++] = s >> 24 & 255,
                e[n++] = i.sub_type,
                i.sub_type === binary.SUBTYPE_BYTE_ARRAY && (s -= 4,
                e[n++] = 255 & s,
                e[n++] = s >> 8 & 255,
                e[n++] = s >> 16 & 255,
                e[n++] = s >> 24 & 255),
                o.copy(e, n, 0, i.position),
                n += i.position
            }
            function serializeSymbol(e, t, i, n, r) {
                e[n++] = constants.BSON_DATA_SYMBOL,
                n += r ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var o = e.write(i.value, n + 4, "utf8") + 1;
                return e[n] = 255 & o,
                e[n + 1] = o >> 8 & 255,
                e[n + 2] = o >> 16 & 255,
                e[n + 3] = o >> 24 & 255,
                n = n + 4 + o - 1,
                e[n++] = 0,
                n
            }
            function serializeDBRef(e, t, i, n, r, o, s) {
                e[n++] = constants.BSON_DATA_OBJECT,
                n += s ? e.write(t, n, "ascii") : e.write(t, n, "utf8"),
                e[n++] = 0;
                var a, l = n, u = {
                    $ref: i.collection || i.namespace,
                    $id: i.oid
                };
                null != i.db && (u.$db = i.db);
                var h = (a = serializeInto(e, u = Object.assign(u, i.fields), !1, n, r + 1, o)) - l;
                return e[l++] = 255 & h,
                e[l++] = h >> 8 & 255,
                e[l++] = h >> 16 & 255,
                e[l++] = h >> 24 & 255,
                a
            }
            function serializeInto(e, t, i, n, r, o, s, a) {
                n = n || 0,
                (a = a || []).push(t);
                var l = n + 4;
                if (Array.isArray(t))
                    for (var u = 0; u < t.length; u++) {
                        var h = "" + u
                          , c = t[u];
                        if (c && c.toBSON) {
                            if ("function" != typeof c.toBSON)
                                throw new TypeError("toBSON is not a function");
                            c = c.toBSON()
                        }
                        var d = _typeof$3(c);
                        if ("string" === d)
                            l = serializeString(e, h, c, l, !0);
                        else if ("number" === d)
                            l = serializeNumber(e, h, c, l, !0);
                        else if ("boolean" === d)
                            l = serializeBoolean(e, h, c, l, !0);
                        else if (c instanceof Date || isDate$1(c))
                            l = serializeDate(e, h, c, l, !0);
                        else if (void 0 === c)
                            l = serializeNull(e, h, c, l, !0);
                        else if (null === c)
                            l = serializeNull(e, h, c, l, !0);
                        else if ("ObjectId" === c._bsontype || "ObjectID" === c._bsontype)
                            l = serializeObjectId(e, h, c, l, !0);
                        else if (Buffer$5.isBuffer(c))
                            l = serializeBuffer(e, h, c, l, !0);
                        else if (c instanceof RegExp || isRegExp$1(c))
                            l = serializeRegExp(e, h, c, l, !0);
                        else if ("object" === d && null == c._bsontype)
                            l = serializeObject(e, h, c, l, i, r, o, s, !0, a);
                        else if ("object" === d && "Decimal128" === c._bsontype)
                            l = serializeDecimal128(e, h, c, l, !0);
                        else if ("Long" === c._bsontype || "Timestamp" === c._bsontype)
                            l = serializeLong(e, h, c, l, !0);
                        else if ("Double" === c._bsontype)
                            l = serializeDouble(e, h, c, l, !0);
                        else if ("function" == typeof c && o)
                            l = serializeFunction(e, h, c, l, i, r, o, !0);
                        else if ("Code" === c._bsontype)
                            l = serializeCode(e, h, c, l, i, r, o, s, !0);
                        else if ("Binary" === c._bsontype)
                            l = serializeBinary(e, h, c, l, !0);
                        else if ("Symbol" === c._bsontype)
                            l = serializeSymbol(e, h, c, l, !0);
                        else if ("DBRef" === c._bsontype)
                            l = serializeDBRef(e, h, c, l, r, o, !0);
                        else if ("BSONRegExp" === c._bsontype)
                            l = serializeBSONRegExp(e, h, c, l, !0);
                        else if ("Int32" === c._bsontype)
                            l = serializeInt32(e, h, c, l, !0);
                        else if ("MinKey" === c._bsontype || "MaxKey" === c._bsontype)
                            l = serializeMinMax(e, h, c, l, !0);
                        else if (void 0 !== c._bsontype)
                            throw new TypeError("Unrecognized or invalid _bsontype: " + c._bsontype)
                    }
                else if (t instanceof map)
                    for (var f = t.entries(), p = !1; !p; ) {
                        var g = f.next();
                        if (!(p = g.done)) {
                            var m = g.value[0]
                              , v = g.value[1]
                              , _ = _typeof$3(v);
                            if ("string" == typeof m && !ignoreKeys.has(m)) {
                                if (null != m.match(regexp$1))
                                    throw Error("key " + m + " must not contain null bytes");
                                if (i) {
                                    if ("$" === m[0])
                                        throw Error("key " + m + " must not start with '$'");
                                    if (~m.indexOf("."))
                                        throw Error("key " + m + " must not contain '.'")
                                }
                            }
                            if ("string" === _)
                                l = serializeString(e, m, v, l);
                            else if ("number" === _)
                                l = serializeNumber(e, m, v, l);
                            else if ("boolean" === _)
                                l = serializeBoolean(e, m, v, l);
                            else if (v instanceof Date || isDate$1(v))
                                l = serializeDate(e, m, v, l);
                            else if (null === v || void 0 === v && !1 === s)
                                l = serializeNull(e, m, v, l);
                            else if ("ObjectId" === v._bsontype || "ObjectID" === v._bsontype)
                                l = serializeObjectId(e, m, v, l);
                            else if (Buffer$5.isBuffer(v))
                                l = serializeBuffer(e, m, v, l);
                            else if (v instanceof RegExp || isRegExp$1(v))
                                l = serializeRegExp(e, m, v, l);
                            else if ("object" === _ && null == v._bsontype)
                                l = serializeObject(e, m, v, l, i, r, o, s, !1, a);
                            else if ("object" === _ && "Decimal128" === v._bsontype)
                                l = serializeDecimal128(e, m, v, l);
                            else if ("Long" === v._bsontype || "Timestamp" === v._bsontype)
                                l = serializeLong(e, m, v, l);
                            else if ("Double" === v._bsontype)
                                l = serializeDouble(e, m, v, l);
                            else if ("Code" === v._bsontype)
                                l = serializeCode(e, m, v, l, i, r, o, s);
                            else if ("function" == typeof v && o)
                                l = serializeFunction(e, m, v, l, i, r, o);
                            else if ("Binary" === v._bsontype)
                                l = serializeBinary(e, m, v, l);
                            else if ("Symbol" === v._bsontype)
                                l = serializeSymbol(e, m, v, l);
                            else if ("DBRef" === v._bsontype)
                                l = serializeDBRef(e, m, v, l, r, o);
                            else if ("BSONRegExp" === v._bsontype)
                                l = serializeBSONRegExp(e, m, v, l);
                            else if ("Int32" === v._bsontype)
                                l = serializeInt32(e, m, v, l);
                            else if ("MinKey" === v._bsontype || "MaxKey" === v._bsontype)
                                l = serializeMinMax(e, m, v, l);
                            else if (void 0 !== v._bsontype)
                                throw new TypeError("Unrecognized or invalid _bsontype: " + v._bsontype)
                        }
                    }
                else {
                    if (t.toBSON) {
                        if ("function" != typeof t.toBSON)
                            throw new TypeError("toBSON is not a function");
                        if (null != (t = t.toBSON()) && "object" !== _typeof$3(t))
                            throw new TypeError("toBSON function did not return an object")
                    }
                    for (var y in t) {
                        var w = t[y];
                        if (w && w.toBSON) {
                            if ("function" != typeof w.toBSON)
                                throw new TypeError("toBSON is not a function");
                            w = w.toBSON()
                        }
                        var b = _typeof$3(w);
                        if ("string" == typeof y && !ignoreKeys.has(y)) {
                            if (null != y.match(regexp$1))
                                throw Error("key " + y + " must not contain null bytes");
                            if (i) {
                                if ("$" === y[0])
                                    throw Error("key " + y + " must not start with '$'");
                                if (~y.indexOf("."))
                                    throw Error("key " + y + " must not contain '.'")
                            }
                        }
                        if ("string" === b)
                            l = serializeString(e, y, w, l);
                        else if ("number" === b)
                            l = serializeNumber(e, y, w, l);
                        else if ("boolean" === b)
                            l = serializeBoolean(e, y, w, l);
                        else if (w instanceof Date || isDate$1(w))
                            l = serializeDate(e, y, w, l);
                        else if (void 0 === w)
                            !1 === s && (l = serializeNull(e, y, w, l));
                        else if (null === w)
                            l = serializeNull(e, y, w, l);
                        else if ("ObjectId" === w._bsontype || "ObjectID" === w._bsontype)
                            l = serializeObjectId(e, y, w, l);
                        else if (Buffer$5.isBuffer(w))
                            l = serializeBuffer(e, y, w, l);
                        else if (w instanceof RegExp || isRegExp$1(w))
                            l = serializeRegExp(e, y, w, l);
                        else if ("object" === b && null == w._bsontype)
                            l = serializeObject(e, y, w, l, i, r, o, s, !1, a);
                        else if ("object" === b && "Decimal128" === w._bsontype)
                            l = serializeDecimal128(e, y, w, l);
                        else if ("Long" === w._bsontype || "Timestamp" === w._bsontype)
                            l = serializeLong(e, y, w, l);
                        else if ("Double" === w._bsontype)
                            l = serializeDouble(e, y, w, l);
                        else if ("Code" === w._bsontype)
                            l = serializeCode(e, y, w, l, i, r, o, s);
                        else if ("function" == typeof w && o)
                            l = serializeFunction(e, y, w, l, i, r, o);
                        else if ("Binary" === w._bsontype)
                            l = serializeBinary(e, y, w, l);
                        else if ("Symbol" === w._bsontype)
                            l = serializeSymbol(e, y, w, l);
                        else if ("DBRef" === w._bsontype)
                            l = serializeDBRef(e, y, w, l, r, o);
                        else if ("BSONRegExp" === w._bsontype)
                            l = serializeBSONRegExp(e, y, w, l);
                        else if ("Int32" === w._bsontype)
                            l = serializeInt32(e, y, w, l);
                        else if ("MinKey" === w._bsontype || "MaxKey" === w._bsontype)
                            l = serializeMinMax(e, y, w, l);
                        else if (void 0 !== w._bsontype)
                            throw new TypeError("Unrecognized or invalid _bsontype: " + w._bsontype)
                    }
                }
                a.pop(),
                e[l++] = 0;
                var S = l - n;
                return e[n++] = 255 & S,
                e[n++] = S >> 8 & 255,
                e[n++] = S >> 16 & 255,
                e[n++] = S >> 24 & 255,
                l
            }
            var serializer = serializeInto;
            function _typeof$4(e) {
                return (_typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                )(e)
            }
            var Buffer$6 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , normalizedFunctionString$2 = utils.normalizedFunctionString;
            function isDate$2(e) {
                return "object" === _typeof$4(e) && "[object Date]" === Object.prototype.toString.call(e)
            }
            function calculateObjectSize(e, t, i) {
                var n = 5;
                if (Array.isArray(e))
                    for (var r = 0; r < e.length; r++)
                        n += calculateElement(r.toString(), e[r], t, !0, i);
                else
                    for (var o in e.toBSON && (e = e.toBSON()),
                    e)
                        n += calculateElement(o, e[o], t, !1, i);
                return n
            }
            function calculateElement(e, t, i, n, r) {
                switch (t && t.toBSON && (t = t.toBSON()),
                _typeof$4(t)) {
                case "string":
                    return 1 + Buffer$6.byteLength(e, "utf8") + 1 + 4 + Buffer$6.byteLength(t, "utf8") + 1;
                case "number":
                    return Math.floor(t) === t && t >= constants.JS_INT_MIN && t <= constants.JS_INT_MAX && t >= constants.BSON_INT32_MIN && t <= constants.BSON_INT32_MAX ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 5 : (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 9;
                case "undefined":
                    return n || !r ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 : 0;
                case "boolean":
                    return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 2;
                case "object":
                    if (null == t || "MinKey" === t._bsontype || "MaxKey" === t._bsontype)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1;
                    if ("ObjectId" === t._bsontype || "ObjectID" === t._bsontype)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 13;
                    if (t instanceof Date || isDate$2(t))
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 9;
                    if (void 0 !== Buffer$6 && Buffer$6.isBuffer(t))
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 6 + t.length;
                    if ("Long" === t._bsontype || "Double" === t._bsontype || "Timestamp" === t._bsontype)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 9;
                    if ("Decimal128" === t._bsontype)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 17;
                    if ("Code" === t._bsontype)
                        return null != t.scope && 0 < Object.keys(t.scope).length ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + 4 + 4 + Buffer$6.byteLength(t.code.toString(), "utf8") + 1 + calculateObjectSize(t.scope, i, r) : (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + 4 + Buffer$6.byteLength(t.code.toString(), "utf8") + 1;
                    if ("Binary" === t._bsontype)
                        return t.sub_type === binary.SUBTYPE_BYTE_ARRAY ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + (t.position + 1 + 4 + 1 + 4) : (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + (t.position + 1 + 4 + 1);
                    if ("Symbol" === t._bsontype)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + Buffer$6.byteLength(t.value, "utf8") + 4 + 1 + 1;
                    if ("DBRef" !== t._bsontype)
                        return t instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(t) ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + Buffer$6.byteLength(t.source, "utf8") + 1 + (t.global ? 1 : 0) + (t.ignoreCase ? 1 : 0) + (t.multiline ? 1 : 0) + 1 : "BSONRegExp" === t._bsontype ? (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + Buffer$6.byteLength(t.pattern, "utf8") + 1 + Buffer$6.byteLength(t.options, "utf8") + 1 : (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + calculateObjectSize(t, i, r) + 1;
                    var o = Object.assign({
                        $ref: t.collection,
                        $id: t.oid
                    }, t.fields);
                    return null != t.db && (o.$db = t.db),
                    (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + calculateObjectSize(o, i, r);
                case "function":
                    if (t instanceof RegExp || "[object RegExp]" === Object.prototype.toString.call(t) || "[object RegExp]" === String.call(t))
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + Buffer$6.byteLength(t.source, "utf8") + 1 + (t.global ? 1 : 0) + (t.ignoreCase ? 1 : 0) + (t.multiline ? 1 : 0) + 1;
                    if (i && null != t.scope && 0 < Object.keys(t.scope).length)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + 4 + 4 + Buffer$6.byteLength(normalizedFunctionString$2(t), "utf8") + 1 + calculateObjectSize(t.scope, i, r);
                    if (i)
                        return (null != e ? Buffer$6.byteLength(e, "utf8") + 1 : 0) + 1 + 4 + Buffer$6.byteLength(normalizedFunctionString$2(t), "utf8") + 1
                }
                return 0
            }
            var calculate_size = calculateObjectSize
              , Buffer$7 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , ensure_buffer = function(e) {
                if (e instanceof Buffer$7)
                    return e;
                if (e instanceof Uint8Array)
                    return Buffer$7.from(e.buffer);
                throw new TypeError("Must use either Buffer or Uint8Array")
            }
              , Buffer$8 = buffer__WEBPACK_IMPORTED_MODULE_1___default.a.Buffer
              , MAXSIZE = 17825792
              , buffer$1 = Buffer$8.alloc(MAXSIZE);
            function setInternalBufferSize(e) {
                buffer$1.length < e && (buffer$1 = Buffer$8.alloc(e))
            }
            function serialize$1(e, t) {
                var i = "boolean" == typeof (t = t || {}).checkKeys && t.checkKeys
                  , n = "boolean" == typeof t.serializeFunctions && t.serializeFunctions
                  , r = "boolean" != typeof t.ignoreUndefined || t.ignoreUndefined
                  , o = "number" == typeof t.minInternalBufferSize ? t.minInternalBufferSize : MAXSIZE;
                buffer$1.length < o && (buffer$1 = Buffer$8.alloc(o));
                var s = serializer(buffer$1, e, i, 0, 0, n, r, [])
                  , a = Buffer$8.alloc(s);
                return buffer$1.copy(a, 0, 0, a.length),
                a
            }
            function serializeWithBufferAndIndex(e, t, i) {
                var n = "boolean" == typeof (i = i || {}).checkKeys && i.checkKeys
                  , r = "boolean" == typeof i.serializeFunctions && i.serializeFunctions
                  , o = "boolean" != typeof i.ignoreUndefined || i.ignoreUndefined
                  , s = "number" == typeof i.index ? i.index : 0
                  , a = serializer(buffer$1, e, n, 0, 0, r, o);
                return buffer$1.copy(t, s, 0, a),
                s + a - 1
            }
            function deserialize$2(e, t) {
                return e = ensure_buffer(e),
                deserializer(e, t)
            }
            function calculateObjectSize$1(e, t) {
                var i = "boolean" == typeof (t = t || {}).serializeFunctions && t.serializeFunctions
                  , n = "boolean" != typeof t.ignoreUndefined || t.ignoreUndefined;
                return calculate_size(e, i, n)
            }
            function deserializeStream(e, t, i, n, r, o) {
                o = Object.assign({
                    allowObjectSmallerThanBufferSize: !0
                }, o),
                e = ensure_buffer(e);
                for (var s = t, a = 0; a < i; a++) {
                    var l = e[s] | e[s + 1] << 8 | e[s + 2] << 16 | e[s + 3] << 24;
                    o.index = s,
                    n[r + a] = deserializer(e, o),
                    s += l
                }
                return s
            }
            var bson = {
                BSON_INT32_MAX: constants.BSON_INT32_MAX,
                BSON_INT32_MIN: constants.BSON_INT32_MIN,
                BSON_INT64_MAX: constants.BSON_INT64_MAX,
                BSON_INT64_MIN: constants.BSON_INT64_MIN,
                JS_INT_MAX: constants.JS_INT_MAX,
                JS_INT_MIN: constants.JS_INT_MIN,
                BSON_DATA_NUMBER: constants.BSON_DATA_NUMBER,
                BSON_DATA_STRING: constants.BSON_DATA_STRING,
                BSON_DATA_OBJECT: constants.BSON_DATA_OBJECT,
                BSON_DATA_ARRAY: constants.BSON_DATA_ARRAY,
                BSON_DATA_BINARY: constants.BSON_DATA_BINARY,
                BSON_DATA_UNDEFINED: constants.BSON_DATA_UNDEFINED,
                BSON_DATA_OID: constants.BSON_DATA_OID,
                BSON_DATA_BOOLEAN: constants.BSON_DATA_BOOLEAN,
                BSON_DATA_DATE: constants.BSON_DATA_DATE,
                BSON_DATA_NULL: constants.BSON_DATA_NULL,
                BSON_DATA_REGEXP: constants.BSON_DATA_REGEXP,
                BSON_DATA_DBPOINTER: constants.BSON_DATA_DBPOINTER,
                BSON_DATA_CODE: constants.BSON_DATA_CODE,
                BSON_DATA_SYMBOL: constants.BSON_DATA_SYMBOL,
                BSON_DATA_CODE_W_SCOPE: constants.BSON_DATA_CODE_W_SCOPE,
                BSON_DATA_INT: constants.BSON_DATA_INT,
                BSON_DATA_TIMESTAMP: constants.BSON_DATA_TIMESTAMP,
                BSON_DATA_LONG: constants.BSON_DATA_LONG,
                BSON_DATA_DECIMAL128: constants.BSON_DATA_DECIMAL128,
                BSON_DATA_MIN_KEY: constants.BSON_DATA_MIN_KEY,
                BSON_DATA_MAX_KEY: constants.BSON_DATA_MAX_KEY,
                BSON_BINARY_SUBTYPE_DEFAULT: constants.BSON_BINARY_SUBTYPE_DEFAULT,
                BSON_BINARY_SUBTYPE_FUNCTION: constants.BSON_BINARY_SUBTYPE_FUNCTION,
                BSON_BINARY_SUBTYPE_BYTE_ARRAY: constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY,
                BSON_BINARY_SUBTYPE_UUID: constants.BSON_BINARY_SUBTYPE_UUID,
                BSON_BINARY_SUBTYPE_MD5: constants.BSON_BINARY_SUBTYPE_MD5,
                BSON_BINARY_SUBTYPE_USER_DEFINED: constants.BSON_BINARY_SUBTYPE_USER_DEFINED,
                Code: code,
                Map: map,
                BSONSymbol: symbol,
                DBRef: db_ref,
                Binary: binary,
                ObjectId: objectid,
                Long: long_1,
                Timestamp: timestamp,
                Double: double_1,
                Int32: int_32,
                MinKey: min_key,
                MaxKey: max_key,
                BSONRegExp: regexp,
                Decimal128: decimal128,
                serialize: serialize$1,
                serializeWithBufferAndIndex: serializeWithBufferAndIndex,
                deserialize: deserialize$2,
                calculateObjectSize: calculateObjectSize$1,
                deserializeStream: deserializeStream,
                setInternalBufferSize: setInternalBufferSize,
                ObjectID: objectid,
                EJSON: extended_json
            }
              , bson_1 = bson.BSON_INT32_MAX
              , bson_2 = bson.BSON_INT32_MIN
              , bson_3 = bson.BSON_INT64_MAX
              , bson_4 = bson.BSON_INT64_MIN
              , bson_5 = bson.JS_INT_MAX
              , bson_6 = bson.JS_INT_MIN
              , bson_7 = bson.BSON_DATA_NUMBER
              , bson_8 = bson.BSON_DATA_STRING
              , bson_9 = bson.BSON_DATA_OBJECT
              , bson_10 = bson.BSON_DATA_ARRAY
              , bson_11 = bson.BSON_DATA_BINARY
              , bson_12 = bson.BSON_DATA_UNDEFINED
              , bson_13 = bson.BSON_DATA_OID
              , bson_14 = bson.BSON_DATA_BOOLEAN
              , bson_15 = bson.BSON_DATA_DATE
              , bson_16 = bson.BSON_DATA_NULL
              , bson_17 = bson.BSON_DATA_REGEXP
              , bson_18 = bson.BSON_DATA_DBPOINTER
              , bson_19 = bson.BSON_DATA_CODE
              , bson_20 = bson.BSON_DATA_SYMBOL
              , bson_21 = bson.BSON_DATA_CODE_W_SCOPE
              , bson_22 = bson.BSON_DATA_INT
              , bson_23 = bson.BSON_DATA_TIMESTAMP
              , bson_24 = bson.BSON_DATA_LONG
              , bson_25 = bson.BSON_DATA_DECIMAL128
              , bson_26 = bson.BSON_DATA_MIN_KEY
              , bson_27 = bson.BSON_DATA_MAX_KEY
              , bson_28 = bson.BSON_BINARY_SUBTYPE_DEFAULT
              , bson_29 = bson.BSON_BINARY_SUBTYPE_FUNCTION
              , bson_30 = bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY
              , bson_31 = bson.BSON_BINARY_SUBTYPE_UUID
              , bson_32 = bson.BSON_BINARY_SUBTYPE_MD5
              , bson_33 = bson.BSON_BINARY_SUBTYPE_USER_DEFINED
              , bson_34 = bson.Code
              , bson_35 = bson.BSONSymbol
              , bson_36 = bson.DBRef
              , bson_37 = bson.Binary
              , bson_38 = bson.ObjectId
              , bson_39 = bson.Long
              , bson_40 = bson.Timestamp
              , bson_41 = bson.Double
              , bson_42 = bson.Int32
              , bson_43 = bson.MinKey
              , bson_44 = bson.MaxKey
              , bson_45 = bson.BSONRegExp
              , bson_46 = bson.Decimal128
              , bson_47 = bson.serialize
              , bson_48 = bson.serializeWithBufferAndIndex
              , bson_49 = bson.deserialize
              , bson_50 = bson.calculateObjectSize
              , bson_51 = bson.deserializeStream
              , bson_52 = bson.setInternalBufferSize
              , bson_53 = bson.ObjectID
              , bson_54 = bson.EJSON;
            __webpack_exports__.default = bson
        }
        .call(this, __webpack_require__(3), __webpack_require__(4).Buffer)
    }
    , function(e, t) {
        var i;
        i = function() {
            return this
        }();
        try {
            i = i || new Function("return this")()
        } catch (e) {
            "object" == typeof window && (i = window)
        }
        e.exports = i
    }
    , function(e, H, z) {
        "use strict";
        (function(e) {
            /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
            var n = z(5)
              , o = z(6)
              , s = z(7);
            function i() {
                return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
            }
            function a(e, t) {
                if (i() < t)
                    throw new RangeError("Invalid typed array length");
                return c.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = c.prototype : (null === e && (e = new c(t)),
                e.length = t),
                e
            }
            function c(e, t, i) {
                if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c))
                    return new c(e,t,i);
                if ("number" != typeof e)
                    return r(this, e, t, i);
                if ("string" == typeof t)
                    throw new Error("If encoding is specified then the first argument must be a string");
                return u(this, e)
            }
            function r(e, t, i, n) {
                if ("number" == typeof t)
                    throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, i, n) {
                    if (t.byteLength,
                    i < 0 || t.byteLength < i)
                        throw new RangeError("'offset' is out of bounds");
                    if (t.byteLength < i + (n || 0))
                        throw new RangeError("'length' is out of bounds");
                    t = void 0 === i && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t,i) : new Uint8Array(t,i,n);
                    c.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = c.prototype : e = h(e, t);
                    return e
                }(e, t, i, n) : "string" == typeof t ? function(e, t, i) {
                    "string" == typeof i && "" !== i || (i = "utf8");
                    if (!c.isEncoding(i))
                        throw new TypeError('"encoding" must be a valid string encoding');
                    var n = 0 | f(t, i)
                      , r = (e = a(e, n)).write(t, i);
                    r !== n && (e = e.slice(0, r));
                    return e
                }(e, t, i) : function(e, t) {
                    if (c.isBuffer(t)) {
                        var i = 0 | d(t.length);
                        return 0 === (e = a(e, i)).length || t.copy(e, 0, 0, i),
                        e
                    }
                    if (t) {
                        if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length"in t)
                            return "number" != typeof t.length || function(e) {
                                return e != e
                            }(t.length) ? a(e, 0) : h(e, t);
                        if ("Buffer" === t.type && s(t.data))
                            return h(e, t.data)
                    }
                    throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                }(e, t)
            }
            function l(e) {
                if ("number" != typeof e)
                    throw new TypeError('"size" argument must be a number');
                if (e < 0)
                    throw new RangeError('"size" argument must not be negative')
            }
            function u(e, t) {
                if (l(t),
                e = a(e, t < 0 ? 0 : 0 | d(t)),
                !c.TYPED_ARRAY_SUPPORT)
                    for (var i = 0; i < t; ++i)
                        e[i] = 0;
                return e
            }
            function h(e, t) {
                var i = t.length < 0 ? 0 : 0 | d(t.length);
                e = a(e, i);
                for (var n = 0; n < i; n += 1)
                    e[n] = 255 & t[n];
                return e
            }
            function d(e) {
                if (e >= i())
                    throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + i().toString(16) + " bytes");
                return 0 | e
            }
            function f(e, t) {
                if (c.isBuffer(e))
                    return e.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer))
                    return e.byteLength;
                "string" != typeof e && (e = "" + e);
                var i = e.length;
                if (0 === i)
                    return 0;
                for (var n = !1; ; )
                    switch (t) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return i;
                    case "utf8":
                    case "utf-8":
                    case void 0:
                        return D(e).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * i;
                    case "hex":
                        return i >>> 1;
                    case "base64":
                        return k(e).length;
                    default:
                        if (n)
                            return D(e).length;
                        t = ("" + t).toLowerCase(),
                        n = !0
                    }
            }
            function p(e, t, i) {
                var n = e[t];
                e[t] = e[i],
                e[i] = n
            }
            function g(e, t, i, n, r) {
                if (0 === e.length)
                    return -1;
                if ("string" == typeof i ? (n = i,
                i = 0) : 2147483647 < i ? i = 2147483647 : i < -2147483648 && (i = -2147483648),
                i = +i,
                isNaN(i) && (i = r ? 0 : e.length - 1),
                i < 0 && (i = e.length + i),
                i >= e.length) {
                    if (r)
                        return -1;
                    i = e.length - 1
                } else if (i < 0) {
                    if (!r)
                        return -1;
                    i = 0
                }
                if ("string" == typeof t && (t = c.from(t, n)),
                c.isBuffer(t))
                    return 0 === t.length ? -1 : m(e, t, i, n, r);
                if ("number" == typeof t)
                    return t &= 255,
                    c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? r ? Uint8Array.prototype.indexOf.call(e, t, i) : Uint8Array.prototype.lastIndexOf.call(e, t, i) : m(e, [t], i, n, r);
                throw new TypeError("val must be string, number or Buffer")
            }
            function m(e, t, i, n, r) {
                var o, s = 1, a = e.length, l = t.length;
                if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                    if (e.length < 2 || t.length < 2)
                        return -1;
                    a /= s = 2,
                    l /= 2,
                    i /= 2
                }
                function u(e, t) {
                    return 1 === s ? e[t] : e.readUInt16BE(t * s)
                }
                if (r) {
                    var h = -1;
                    for (o = i; o < a; o++)
                        if (u(e, o) === u(t, -1 === h ? 0 : o - h)) {
                            if (-1 === h && (h = o),
                            o - h + 1 === l)
                                return h * s
                        } else
                            -1 !== h && (o -= o - h),
                            h = -1
                } else
                    for (a < i + l && (i = a - l),
                    o = i; 0 <= o; o--) {
                        for (var c = !0, d = 0; d < l; d++)
                            if (u(e, o + d) !== u(t, d)) {
                                c = !1;
                                break
                            }
                        if (c)
                            return o
                    }
                return -1
            }
            function v(e, t, i, n) {
                i = Number(i) || 0;
                var r = e.length - i;
                n ? r < (n = Number(n)) && (n = r) : n = r;
                var o = t.length;
                if (o % 2 != 0)
                    throw new TypeError("Invalid hex string");
                o / 2 < n && (n = o / 2);
                for (var s = 0; s < n; ++s) {
                    var a = parseInt(t.substr(2 * s, 2), 16);
                    if (isNaN(a))
                        return s;
                    e[i + s] = a
                }
                return s
            }
            function _(e, t, i, n) {
                return M(function(e) {
                    for (var t = [], i = 0; i < e.length; ++i)
                        t.push(255 & e.charCodeAt(i));
                    return t
                }(t), e, i, n)
            }
            function y(e, t, i) {
                return 0 === t && i === e.length ? n.fromByteArray(e) : n.fromByteArray(e.slice(t, i))
            }
            function w(e, t, i) {
                i = Math.min(e.length, i);
                for (var n = [], r = t; r < i; ) {
                    var o, s, a, l, u = e[r], h = null, c = 239 < u ? 4 : 223 < u ? 3 : 191 < u ? 2 : 1;
                    if (r + c <= i)
                        switch (c) {
                        case 1:
                            u < 128 && (h = u);
                            break;
                        case 2:
                            128 == (192 & (o = e[r + 1])) && 127 < (l = (31 & u) << 6 | 63 & o) && (h = l);
                            break;
                        case 3:
                            o = e[r + 1],
                            s = e[r + 2],
                            128 == (192 & o) && 128 == (192 & s) && 2047 < (l = (15 & u) << 12 | (63 & o) << 6 | 63 & s) && (l < 55296 || 57343 < l) && (h = l);
                            break;
                        case 4:
                            o = e[r + 1],
                            s = e[r + 2],
                            a = e[r + 3],
                            128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && 65535 < (l = (15 & u) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) && l < 1114112 && (h = l)
                        }
                    null === h ? (h = 65533,
                    c = 1) : 65535 < h && (h -= 65536,
                    n.push(h >>> 10 & 1023 | 55296),
                    h = 56320 | 1023 & h),
                    n.push(h),
                    r += c
                }
                return function(e) {
                    var t = e.length;
                    if (t <= b)
                        return String.fromCharCode.apply(String, e);
                    var i = ""
                      , n = 0;
                    for (; n < t; )
                        i += String.fromCharCode.apply(String, e.slice(n, n += b));
                    return i
                }(n)
            }
            H.Buffer = c,
            H.SlowBuffer = function(e) {
                +e != e && (e = 0);
                return c.alloc(+e)
            }
            ,
            H.INSPECT_MAX_BYTES = 50,
            c.TYPED_ARRAY_SUPPORT = void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function() {
                try {
                    var e = new Uint8Array(1);
                    return e.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function() {
                            return 42
                        }
                    },
                    42 === e.foo() && "function" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength
                } catch (e) {
                    return !1
                }
            }(),
            H.kMaxLength = i(),
            c.poolSize = 8192,
            c._augment = function(e) {
                return e.__proto__ = c.prototype,
                e
            }
            ,
            c.from = function(e, t, i) {
                return r(null, e, t, i)
            }
            ,
            c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype,
            c.__proto__ = Uint8Array,
            "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {
                value: null,
                configurable: !0
            })),
            c.alloc = function(e, t, i) {
                return function(e, t, i, n) {
                    return l(t),
                    t <= 0 ? a(e, t) : void 0 !== i ? "string" == typeof n ? a(e, t).fill(i, n) : a(e, t).fill(i) : a(e, t)
                }(null, e, t, i)
            }
            ,
            c.allocUnsafe = function(e) {
                return u(null, e)
            }
            ,
            c.allocUnsafeSlow = function(e) {
                return u(null, e)
            }
            ,
            c.isBuffer = function(e) {
                return !(null == e || !e._isBuffer)
            }
            ,
            c.compare = function(e, t) {
                if (!c.isBuffer(e) || !c.isBuffer(t))
                    throw new TypeError("Arguments must be Buffers");
                if (e === t)
                    return 0;
                for (var i = e.length, n = t.length, r = 0, o = Math.min(i, n); r < o; ++r)
                    if (e[r] !== t[r]) {
                        i = e[r],
                        n = t[r];
                        break
                    }
                return i < n ? -1 : n < i ? 1 : 0
            }
            ,
            c.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
                }
            }
            ,
            c.concat = function(e, t) {
                if (!s(e))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length)
                    return c.alloc(0);
                var i;
                if (void 0 === t)
                    for (i = t = 0; i < e.length; ++i)
                        t += e[i].length;
                var n = c.allocUnsafe(t)
                  , r = 0;
                for (i = 0; i < e.length; ++i) {
                    var o = e[i];
                    if (!c.isBuffer(o))
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    o.copy(n, r),
                    r += o.length
                }
                return n
            }
            ,
            c.byteLength = f,
            c.prototype._isBuffer = !0,
            c.prototype.swap16 = function() {
                var e = this.length;
                if (e % 2 != 0)
                    throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var t = 0; t < e; t += 2)
                    p(this, t, t + 1);
                return this
            }
            ,
            c.prototype.swap32 = function() {
                var e = this.length;
                if (e % 4 != 0)
                    throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var t = 0; t < e; t += 4)
                    p(this, t, t + 3),
                    p(this, t + 1, t + 2);
                return this
            }
            ,
            c.prototype.swap64 = function() {
                var e = this.length;
                if (e % 8 != 0)
                    throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var t = 0; t < e; t += 8)
                    p(this, t, t + 7),
                    p(this, t + 1, t + 6),
                    p(this, t + 2, t + 5),
                    p(this, t + 3, t + 4);
                return this
            }
            ,
            c.prototype.toString = function() {
                var e = 0 | this.length;
                return 0 == e ? "" : 0 === arguments.length ? w(this, 0, e) : function(e, t, i) {
                    var n = !1;
                    if ((void 0 === t || t < 0) && (t = 0),
                    t > this.length)
                        return "";
                    if ((void 0 === i || i > this.length) && (i = this.length),
                    i <= 0)
                        return "";
                    if ((i >>>= 0) <= (t >>>= 0))
                        return "";
                    for (e || (e = "utf8"); ; )
                        switch (e) {
                        case "hex":
                            return E(this, t, i);
                        case "utf8":
                        case "utf-8":
                            return w(this, t, i);
                        case "ascii":
                            return S(this, t, i);
                        case "latin1":
                        case "binary":
                            return T(this, t, i);
                        case "base64":
                            return y(this, t, i);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return x(this, t, i);
                        default:
                            if (n)
                                throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(),
                            n = !0
                        }
                }
                .apply(this, arguments)
            }
            ,
            c.prototype.equals = function(e) {
                if (!c.isBuffer(e))
                    throw new TypeError("Argument must be a Buffer");
                return this === e || 0 === c.compare(this, e)
            }
            ,
            c.prototype.inspect = function() {
                var e = ""
                  , t = H.INSPECT_MAX_BYTES;
                return 0 < this.length && (e = this.toString("hex", 0, t).match(/.{2}/g).join(" "),
                this.length > t && (e += " ... ")),
                "<Buffer " + e + ">"
            }
            ,
            c.prototype.compare = function(e, t, i, n, r) {
                if (!c.isBuffer(e))
                    throw new TypeError("Argument must be a Buffer");
                if (void 0 === t && (t = 0),
                void 0 === i && (i = e ? e.length : 0),
                void 0 === n && (n = 0),
                void 0 === r && (r = this.length),
                t < 0 || i > e.length || n < 0 || r > this.length)
                    throw new RangeError("out of range index");
                if (r <= n && i <= t)
                    return 0;
                if (r <= n)
                    return -1;
                if (i <= t)
                    return 1;
                if (this === e)
                    return 0;
                for (var o = (r >>>= 0) - (n >>>= 0), s = (i >>>= 0) - (t >>>= 0), a = Math.min(o, s), l = this.slice(n, r), u = e.slice(t, i), h = 0; h < a; ++h)
                    if (l[h] !== u[h]) {
                        o = l[h],
                        s = u[h];
                        break
                    }
                return o < s ? -1 : s < o ? 1 : 0
            }
            ,
            c.prototype.includes = function(e, t, i) {
                return -1 !== this.indexOf(e, t, i)
            }
            ,
            c.prototype.indexOf = function(e, t, i) {
                return g(this, e, t, i, !0)
            }
            ,
            c.prototype.lastIndexOf = function(e, t, i) {
                return g(this, e, t, i, !1)
            }
            ,
            c.prototype.write = function(e, t, i, n) {
                if (void 0 === t)
                    n = "utf8",
                    i = this.length,
                    t = 0;
                else if (void 0 === i && "string" == typeof t)
                    n = t,
                    i = this.length,
                    t = 0;
                else {
                    if (!isFinite(t))
                        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    t |= 0,
                    isFinite(i) ? (i |= 0,
                    void 0 === n && (n = "utf8")) : (n = i,
                    i = void 0)
                }
                var r = this.length - t;
                if ((void 0 === i || r < i) && (i = r),
                0 < e.length && (i < 0 || t < 0) || t > this.length)
                    throw new RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                for (var o, s, a, l, u, h, c, d, f, p = !1; ; )
                    switch (n) {
                    case "hex":
                        return v(this, e, t, i);
                    case "utf8":
                    case "utf-8":
                        return d = t,
                        f = i,
                        M(D(e, (c = this).length - d), c, d, f);
                    case "ascii":
                        return _(this, e, t, i);
                    case "latin1":
                    case "binary":
                        return _(this, e, t, i);
                    case "base64":
                        return l = this,
                        u = t,
                        h = i,
                        M(k(e), l, u, h);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return s = t,
                        a = i,
                        M(function(e, t) {
                            for (var i, n, r, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s)
                                i = e.charCodeAt(s),
                                n = i >> 8,
                                r = i % 256,
                                o.push(r),
                                o.push(n);
                            return o
                        }(e, (o = this).length - s), o, s, a);
                    default:
                        if (p)
                            throw new TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase(),
                        p = !0
                    }
            }
            ,
            c.prototype.toJSON = function() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }
            ;
            var b = 4096;
            function S(e, t, i) {
                var n = "";
                i = Math.min(e.length, i);
                for (var r = t; r < i; ++r)
                    n += String.fromCharCode(127 & e[r]);
                return n
            }
            function T(e, t, i) {
                var n = "";
                i = Math.min(e.length, i);
                for (var r = t; r < i; ++r)
                    n += String.fromCharCode(e[r]);
                return n
            }
            function E(e, t, i) {
                var n = e.length;
                (!t || t < 0) && (t = 0),
                (!i || i < 0 || n < i) && (i = n);
                for (var r = "", o = t; o < i; ++o)
                    r += C(e[o]);
                return r
            }
            function x(e, t, i) {
                for (var n = e.slice(t, i), r = "", o = 0; o < n.length; o += 2)
                    r += String.fromCharCode(n[o] + 256 * n[o + 1]);
                return r
            }
            function O(e, t, i) {
                if (e % 1 != 0 || e < 0)
                    throw new RangeError("offset is not uint");
                if (i < e + t)
                    throw new RangeError("Trying to access beyond buffer length")
            }
            function P(e, t, i, n, r, o) {
                if (!c.isBuffer(e))
                    throw new TypeError('"buffer" argument must be a Buffer instance');
                if (r < t || t < o)
                    throw new RangeError('"value" argument is out of bounds');
                if (i + n > e.length)
                    throw new RangeError("Index out of range")
            }
            function B(e, t, i, n) {
                t < 0 && (t = 65535 + t + 1);
                for (var r = 0, o = Math.min(e.length - i, 2); r < o; ++r)
                    e[i + r] = (t & 255 << 8 * (n ? r : 1 - r)) >>> 8 * (n ? r : 1 - r)
            }
            function R(e, t, i, n) {
                t < 0 && (t = 4294967295 + t + 1);
                for (var r = 0, o = Math.min(e.length - i, 4); r < o; ++r)
                    e[i + r] = t >>> 8 * (n ? r : 3 - r) & 255
            }
            function N(e, t, i, n, r, o) {
                if (i + n > e.length)
                    throw new RangeError("Index out of range");
                if (i < 0)
                    throw new RangeError("Index out of range")
            }
            function I(e, t, i, n, r) {
                return r || N(e, 0, i, 4),
                o.write(e, t, i, n, 23, 4),
                i + 4
            }
            function A(e, t, i, n, r) {
                return r || N(e, 0, i, 8),
                o.write(e, t, i, n, 52, 8),
                i + 8
            }
            c.prototype.slice = function(e, t) {
                var i, n = this.length;
                if ((e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : n < e && (e = n),
                (t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : n < t && (t = n),
                t < e && (t = e),
                c.TYPED_ARRAY_SUPPORT)
                    (i = this.subarray(e, t)).__proto__ = c.prototype;
                else {
                    var r = t - e;
                    i = new c(r,void 0);
                    for (var o = 0; o < r; ++o)
                        i[o] = this[o + e]
                }
                return i
            }
            ,
            c.prototype.readUIntLE = function(e, t, i) {
                e |= 0,
                t |= 0,
                i || O(e, t, this.length);
                for (var n = this[e], r = 1, o = 0; ++o < t && (r *= 256); )
                    n += this[e + o] * r;
                return n
            }
            ,
            c.prototype.readUIntBE = function(e, t, i) {
                e |= 0,
                t |= 0,
                i || O(e, t, this.length);
                for (var n = this[e + --t], r = 1; 0 < t && (r *= 256); )
                    n += this[e + --t] * r;
                return n
            }
            ,
            c.prototype.readUInt8 = function(e, t) {
                return t || O(e, 1, this.length),
                this[e]
            }
            ,
            c.prototype.readUInt16LE = function(e, t) {
                return t || O(e, 2, this.length),
                this[e] | this[e + 1] << 8
            }
            ,
            c.prototype.readUInt16BE = function(e, t) {
                return t || O(e, 2, this.length),
                this[e] << 8 | this[e + 1]
            }
            ,
            c.prototype.readUInt32LE = function(e, t) {
                return t || O(e, 4, this.length),
                (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
            }
            ,
            c.prototype.readUInt32BE = function(e, t) {
                return t || O(e, 4, this.length),
                16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
            }
            ,
            c.prototype.readIntLE = function(e, t, i) {
                e |= 0,
                t |= 0,
                i || O(e, t, this.length);
                for (var n = this[e], r = 1, o = 0; ++o < t && (r *= 256); )
                    n += this[e + o] * r;
                return (r *= 128) <= n && (n -= Math.pow(2, 8 * t)),
                n
            }
            ,
            c.prototype.readIntBE = function(e, t, i) {
                e |= 0,
                t |= 0,
                i || O(e, t, this.length);
                for (var n = t, r = 1, o = this[e + --n]; 0 < n && (r *= 256); )
                    o += this[e + --n] * r;
                return (r *= 128) <= o && (o -= Math.pow(2, 8 * t)),
                o
            }
            ,
            c.prototype.readInt8 = function(e, t) {
                return t || O(e, 1, this.length),
                128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            }
            ,
            c.prototype.readInt16LE = function(e, t) {
                t || O(e, 2, this.length);
                var i = this[e] | this[e + 1] << 8;
                return 32768 & i ? 4294901760 | i : i
            }
            ,
            c.prototype.readInt16BE = function(e, t) {
                t || O(e, 2, this.length);
                var i = this[e + 1] | this[e] << 8;
                return 32768 & i ? 4294901760 | i : i
            }
            ,
            c.prototype.readInt32LE = function(e, t) {
                return t || O(e, 4, this.length),
                this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
            }
            ,
            c.prototype.readInt32BE = function(e, t) {
                return t || O(e, 4, this.length),
                this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
            }
            ,
            c.prototype.readFloatLE = function(e, t) {
                return t || O(e, 4, this.length),
                o.read(this, e, !0, 23, 4)
            }
            ,
            c.prototype.readFloatBE = function(e, t) {
                return t || O(e, 4, this.length),
                o.read(this, e, !1, 23, 4)
            }
            ,
            c.prototype.readDoubleLE = function(e, t) {
                return t || O(e, 8, this.length),
                o.read(this, e, !0, 52, 8)
            }
            ,
            c.prototype.readDoubleBE = function(e, t) {
                return t || O(e, 8, this.length),
                o.read(this, e, !1, 52, 8)
            }
            ,
            c.prototype.writeUIntLE = function(e, t, i, n) {
                e = +e,
                t |= 0,
                i |= 0,
                n || P(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
                var r = 1
                  , o = 0;
                for (this[t] = 255 & e; ++o < i && (r *= 256); )
                    this[t + o] = e / r & 255;
                return t + i
            }
            ,
            c.prototype.writeUIntBE = function(e, t, i, n) {
                e = +e,
                t |= 0,
                i |= 0,
                n || P(this, e, t, i, Math.pow(2, 8 * i) - 1, 0);
                var r = i - 1
                  , o = 1;
                for (this[t + r] = 255 & e; 0 <= --r && (o *= 256); )
                    this[t + r] = e / o & 255;
                return t + i
            }
            ,
            c.prototype.writeUInt8 = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 1, 255, 0),
                c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                this[t] = 255 & e,
                t + 1
            }
            ,
            c.prototype.writeUInt16LE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 2, 65535, 0),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8) : B(this, e, t, !0),
                t + 2
            }
            ,
            c.prototype.writeUInt16BE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 2, 65535, 0),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
                this[t + 1] = 255 & e) : B(this, e, t, !1),
                t + 2
            }
            ,
            c.prototype.writeUInt32LE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 4, 4294967295, 0),
                c.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24,
                this[t + 2] = e >>> 16,
                this[t + 1] = e >>> 8,
                this[t] = 255 & e) : R(this, e, t, !0),
                t + 4
            }
            ,
            c.prototype.writeUInt32BE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 4, 4294967295, 0),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
                this[t + 1] = e >>> 16,
                this[t + 2] = e >>> 8,
                this[t + 3] = 255 & e) : R(this, e, t, !1),
                t + 4
            }
            ,
            c.prototype.writeIntLE = function(e, t, i, n) {
                if (e = +e,
                t |= 0,
                !n) {
                    var r = Math.pow(2, 8 * i - 1);
                    P(this, e, t, i, r - 1, -r)
                }
                var o = 0
                  , s = 1
                  , a = 0;
                for (this[t] = 255 & e; ++o < i && (s *= 256); )
                    e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1),
                    this[t + o] = (e / s >> 0) - a & 255;
                return t + i
            }
            ,
            c.prototype.writeIntBE = function(e, t, i, n) {
                if (e = +e,
                t |= 0,
                !n) {
                    var r = Math.pow(2, 8 * i - 1);
                    P(this, e, t, i, r - 1, -r)
                }
                var o = i - 1
                  , s = 1
                  , a = 0;
                for (this[t + o] = 255 & e; 0 <= --o && (s *= 256); )
                    e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1),
                    this[t + o] = (e / s >> 0) - a & 255;
                return t + i
            }
            ,
            c.prototype.writeInt8 = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 1, 127, -128),
                c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                e < 0 && (e = 255 + e + 1),
                this[t] = 255 & e,
                t + 1
            }
            ,
            c.prototype.writeInt16LE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 2, 32767, -32768),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8) : B(this, e, t, !0),
                t + 2
            }
            ,
            c.prototype.writeInt16BE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 2, 32767, -32768),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
                this[t + 1] = 255 & e) : B(this, e, t, !1),
                t + 2
            }
            ,
            c.prototype.writeInt32LE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 4, 2147483647, -2147483648),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8,
                this[t + 2] = e >>> 16,
                this[t + 3] = e >>> 24) : R(this, e, t, !0),
                t + 4
            }
            ,
            c.prototype.writeInt32BE = function(e, t, i) {
                return e = +e,
                t |= 0,
                i || P(this, e, t, 4, 2147483647, -2147483648),
                e < 0 && (e = 4294967295 + e + 1),
                c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
                this[t + 1] = e >>> 16,
                this[t + 2] = e >>> 8,
                this[t + 3] = 255 & e) : R(this, e, t, !1),
                t + 4
            }
            ,
            c.prototype.writeFloatLE = function(e, t, i) {
                return I(this, e, t, !0, i)
            }
            ,
            c.prototype.writeFloatBE = function(e, t, i) {
                return I(this, e, t, !1, i)
            }
            ,
            c.prototype.writeDoubleLE = function(e, t, i) {
                return A(this, e, t, !0, i)
            }
            ,
            c.prototype.writeDoubleBE = function(e, t, i) {
                return A(this, e, t, !1, i)
            }
            ,
            c.prototype.copy = function(e, t, i, n) {
                if (i || (i = 0),
                n || 0 === n || (n = this.length),
                t >= e.length && (t = e.length),
                t || (t = 0),
                0 < n && n < i && (n = i),
                n === i)
                    return 0;
                if (0 === e.length || 0 === this.length)
                    return 0;
                if (t < 0)
                    throw new RangeError("targetStart out of bounds");
                if (i < 0 || i >= this.length)
                    throw new RangeError("sourceStart out of bounds");
                if (n < 0)
                    throw new RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length),
                e.length - t < n - i && (n = e.length - t + i);
                var r, o = n - i;
                if (this === e && i < t && t < n)
                    for (r = o - 1; 0 <= r; --r)
                        e[r + t] = this[r + i];
                else if (o < 1e3 || !c.TYPED_ARRAY_SUPPORT)
                    for (r = 0; r < o; ++r)
                        e[r + t] = this[r + i];
                else
                    Uint8Array.prototype.set.call(e, this.subarray(i, i + o), t);
                return o
            }
            ,
            c.prototype.fill = function(e, t, i, n) {
                if ("string" == typeof e) {
                    if ("string" == typeof t ? (n = t,
                    t = 0,
                    i = this.length) : "string" == typeof i && (n = i,
                    i = this.length),
                    1 === e.length) {
                        var r = e.charCodeAt(0);
                        r < 256 && (e = r)
                    }
                    if (void 0 !== n && "string" != typeof n)
                        throw new TypeError("encoding must be a string");
                    if ("string" == typeof n && !c.isEncoding(n))
                        throw new TypeError("Unknown encoding: " + n)
                } else
                    "number" == typeof e && (e &= 255);
                if (t < 0 || this.length < t || this.length < i)
                    throw new RangeError("Out of range index");
                if (i <= t)
                    return this;
                var o;
                if (t >>>= 0,
                i = void 0 === i ? this.length : i >>> 0,
                e || (e = 0),
                "number" == typeof e)
                    for (o = t; o < i; ++o)
                        this[o] = e;
                else {
                    var s = c.isBuffer(e) ? e : D(new c(e,n).toString())
                      , a = s.length;
                    for (o = 0; o < i - t; ++o)
                        this[o + t] = s[o % a]
                }
                return this
            }
            ;
            var t = /[^+\/0-9A-Za-z-_]/g;
            function C(e) {
                return e < 16 ? "0" + e.toString(16) : e.toString(16)
            }
            function D(e, t) {
                var i;
                t = t || 1 / 0;
                for (var n = e.length, r = null, o = [], s = 0; s < n; ++s) {
                    if (55295 < (i = e.charCodeAt(s)) && i < 57344) {
                        if (!r) {
                            if (56319 < i) {
                                -1 < (t -= 3) && o.push(239, 191, 189);
                                continue
                            }
                            if (s + 1 === n) {
                                -1 < (t -= 3) && o.push(239, 191, 189);
                                continue
                            }
                            r = i;
                            continue
                        }
                        if (i < 56320) {
                            -1 < (t -= 3) && o.push(239, 191, 189),
                            r = i;
                            continue
                        }
                        i = 65536 + (r - 55296 << 10 | i - 56320)
                    } else
                        r && -1 < (t -= 3) && o.push(239, 191, 189);
                    if (r = null,
                    i < 128) {
                        if ((t -= 1) < 0)
                            break;
                        o.push(i)
                    } else if (i < 2048) {
                        if ((t -= 2) < 0)
                            break;
                        o.push(i >> 6 | 192, 63 & i | 128)
                    } else if (i < 65536) {
                        if ((t -= 3) < 0)
                            break;
                        o.push(i >> 12 | 224, i >> 6 & 63 | 128, 63 & i | 128)
                    } else {
                        if (!(i < 1114112))
                            throw new Error("Invalid code point");
                        if ((t -= 4) < 0)
                            break;
                        o.push(i >> 18 | 240, i >> 12 & 63 | 128, i >> 6 & 63 | 128, 63 & i | 128)
                    }
                }
                return o
            }
            function k(e) {
                return n.toByteArray(function(e) {
                    if ((e = function(e) {
                        return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
                    }(e).replace(t, "")).length < 2)
                        return "";
                    for (; e.length % 4 != 0; )
                        e += "=";
                    return e
                }(e))
            }
            function M(e, t, i, n) {
                for (var r = 0; r < n && !(r + i >= t.length || r >= e.length); ++r)
                    t[r + i] = e[r];
                return r
            }
        }
        ).call(this, z(3))
    }
    , function(e, t, i) {
        "use strict";
        t.byteLength = function(e) {
            var t = c(e)
              , i = t[0]
              , n = t[1];
            return 3 * (i + n) / 4 - n
        }
        ,
        t.toByteArray = function(e) {
            for (var t, i = c(e), n = i[0], r = i[1], o = new h(function(e, t, i) {
                return 3 * (t + i) / 4 - i
            }(0, n, r)), s = 0, a = 0 < r ? n - 4 : n, l = 0; l < a; l += 4)
                t = u[e.charCodeAt(l)] << 18 | u[e.charCodeAt(l + 1)] << 12 | u[e.charCodeAt(l + 2)] << 6 | u[e.charCodeAt(l + 3)],
                o[s++] = t >> 16 & 255,
                o[s++] = t >> 8 & 255,
                o[s++] = 255 & t;
            2 === r && (t = u[e.charCodeAt(l)] << 2 | u[e.charCodeAt(l + 1)] >> 4,
            o[s++] = 255 & t);
            1 === r && (t = u[e.charCodeAt(l)] << 10 | u[e.charCodeAt(l + 1)] << 4 | u[e.charCodeAt(l + 2)] >> 2,
            o[s++] = t >> 8 & 255,
            o[s++] = 255 & t);
            return o
        }
        ,
        t.fromByteArray = function(e) {
            for (var t, i = e.length, n = i % 3, r = [], o = 0, s = i - n; o < s; o += 16383)
                r.push(l(e, o, s < o + 16383 ? s : o + 16383));
            1 == n ? (t = e[i - 1],
            r.push(a[t >> 2] + a[t << 4 & 63] + "==")) : 2 == n && (t = (e[i - 2] << 8) + e[i - 1],
            r.push(a[t >> 10] + a[t >> 4 & 63] + a[t << 2 & 63] + "="));
            return r.join("")
        }
        ;
        for (var a = [], u = [], h = "undefined" != typeof Uint8Array ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = 0, o = n.length; r < o; ++r)
            a[r] = n[r],
            u[n.charCodeAt(r)] = r;
        function c(e) {
            var t = e.length;
            if (0 < t % 4)
                throw new Error("Invalid string. Length must be a multiple of 4");
            var i = e.indexOf("=");
            return -1 === i && (i = t),
            [i, i === t ? 0 : 4 - i % 4]
        }
        function l(e, t, i) {
            for (var n, r, o = [], s = t; s < i; s += 3)
                n = (e[s] << 16 & 16711680) + (e[s + 1] << 8 & 65280) + (255 & e[s + 2]),
                o.push(a[(r = n) >> 18 & 63] + a[r >> 12 & 63] + a[r >> 6 & 63] + a[63 & r]);
            return o.join("")
        }
        u["-".charCodeAt(0)] = 62,
        u["_".charCodeAt(0)] = 63
    }
    , function(e, t) {
        t.read = function(e, t, i, n, r) {
            var o, s, a = 8 * r - n - 1, l = (1 << a) - 1, u = l >> 1, h = -7, c = i ? r - 1 : 0, d = i ? -1 : 1, f = e[t + c];
            for (c += d,
            o = f & (1 << -h) - 1,
            f >>= -h,
            h += a; 0 < h; o = 256 * o + e[t + c],
            c += d,
            h -= 8)
                ;
            for (s = o & (1 << -h) - 1,
            o >>= -h,
            h += n; 0 < h; s = 256 * s + e[t + c],
            c += d,
            h -= 8)
                ;
            if (0 === o)
                o = 1 - u;
            else {
                if (o === l)
                    return s ? NaN : 1 / 0 * (f ? -1 : 1);
                s += Math.pow(2, n),
                o -= u
            }
            return (f ? -1 : 1) * s * Math.pow(2, o - n)
        }
        ,
        t.write = function(e, t, i, n, r, o) {
            var s, a, l, u = 8 * o - r - 1, h = (1 << u) - 1, c = h >> 1, d = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = n ? 0 : o - 1, p = n ? 1 : -1, g = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
            for (t = Math.abs(t),
            isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0,
            s = h) : (s = Math.floor(Math.log(t) / Math.LN2),
            t * (l = Math.pow(2, -s)) < 1 && (s--,
            l *= 2),
            2 <= (t += 1 <= s + c ? d / l : d * Math.pow(2, 1 - c)) * l && (s++,
            l /= 2),
            h <= s + c ? (a = 0,
            s = h) : 1 <= s + c ? (a = (t * l - 1) * Math.pow(2, r),
            s += c) : (a = t * Math.pow(2, c - 1) * Math.pow(2, r),
            s = 0)); 8 <= r; e[i + f] = 255 & a,
            f += p,
            a /= 256,
            r -= 8)
                ;
            for (s = s << r | a,
            u += r; 0 < u; e[i + f] = 255 & s,
            f += p,
            s /= 256,
            u -= 8)
                ;
            e[i + f - p] |= 128 * g
        }
    }
    , function(e, t) {
        var i = {}.toString;
        e.exports = Array.isArray || function(e) {
            return "[object Array]" == i.call(e)
        }
    }
    , function(e, t) {
        e.exports = n;
        var f = null;
        try {
            f = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])),{}).exports
        } catch (e) {}
        function n(e, t, i) {
            this.low = 0 | e,
            this.high = 0 | t,
            this.unsigned = !!i
        }
        function p(e) {
            return !0 === (e && e.__isLong__)
        }
        Object.defineProperty(n.prototype, "__isLong__", {
            value: !0
        }),
        n.isLong = p;
        var o = {}
          , s = {};
        function i(e, t) {
            var i, n, r;
            return t ? (r = 0 <= (e >>>= 0) && e < 256) && (n = s[e]) ? n : (i = m(e, (0 | e) < 0 ? -1 : 0, !0),
            r && (s[e] = i),
            i) : (r = -128 <= (e |= 0) && e < 128) && (n = o[e]) ? n : (i = m(e, e < 0 ? -1 : 0, !1),
            r && (o[e] = i),
            i)
        }
        function g(e, t) {
            if (isNaN(e))
                return t ? u : y;
            if (t) {
                if (e < 0)
                    return u;
                if (a <= e)
                    return T
            } else {
                if (e <= -l)
                    return E;
                if (l <= e + 1)
                    return S
            }
            return e < 0 ? g(-e, t).neg() : m(e % r | 0, e / r | 0, t)
        }
        function m(e, t, i) {
            return new n(e,t,i)
        }
        n.fromInt = i,
        n.fromNumber = g,
        n.fromBits = m;
        var h = Math.pow;
        function c(e, t, i) {
            if (0 === e.length)
                throw Error("empty string");
            if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e)
                return y;
            if (t = "number" == typeof t ? (i = t,
            !1) : !!t,
            (i = i || 10) < 2 || 36 < i)
                throw RangeError("radix");
            var n;
            if (0 < (n = e.indexOf("-")))
                throw Error("interior hyphen");
            if (0 === n)
                return c(e.substring(1), t, i).neg();
            for (var r = g(h(i, 8)), o = y, s = 0; s < e.length; s += 8) {
                var a = Math.min(8, e.length - s)
                  , l = parseInt(e.substring(s, s + a), i);
                if (a < 8) {
                    var u = g(h(i, a));
                    o = o.mul(u).add(g(l))
                } else
                    o = (o = o.mul(r)).add(g(l))
            }
            return o.unsigned = t,
            o
        }
        function v(e, t) {
            return "number" == typeof e ? g(e, t) : "string" == typeof e ? c(e, t) : m(e.low, e.high, "boolean" == typeof t ? t : e.unsigned)
        }
        n.fromString = c,
        n.fromValue = v;
        var r = 4294967296
          , a = r * r
          , l = a / 2
          , _ = i(1 << 24)
          , y = i(0);
        n.ZERO = y;
        var u = i(0, !0);
        n.UZERO = u;
        var d = i(1);
        n.ONE = d;
        var w = i(1, !0);
        n.UONE = w;
        var b = i(-1);
        n.NEG_ONE = b;
        var S = m(-1, 2147483647, !1);
        n.MAX_VALUE = S;
        var T = m(-1, -1, !0);
        n.MAX_UNSIGNED_VALUE = T;
        var E = m(0, -2147483648, !1);
        n.MIN_VALUE = E;
        var x = n.prototype;
        x.toInt = function() {
            return this.unsigned ? this.low >>> 0 : this.low
        }
        ,
        x.toNumber = function() {
            return this.unsigned ? (this.high >>> 0) * r + (this.low >>> 0) : this.high * r + (this.low >>> 0)
        }
        ,
        x.toString = function(e) {
            if ((e = e || 10) < 2 || 36 < e)
                throw RangeError("radix");
            if (this.isZero())
                return "0";
            if (this.isNegative()) {
                if (this.eq(E)) {
                    var t = g(e)
                      , i = this.div(t)
                      , n = i.mul(t).sub(this);
                    return i.toString(e) + n.toInt().toString(e)
                }
                return "-" + this.neg().toString(e)
            }
            for (var r = g(h(e, 6), this.unsigned), o = this, s = ""; ; ) {
                var a = o.div(r)
                  , l = (o.sub(a.mul(r)).toInt() >>> 0).toString(e);
                if ((o = a).isZero())
                    return l + s;
                for (; l.length < 6; )
                    l = "0" + l;
                s = "" + l + s
            }
        }
        ,
        x.getHighBits = function() {
            return this.high
        }
        ,
        x.getHighBitsUnsigned = function() {
            return this.high >>> 0
        }
        ,
        x.getLowBits = function() {
            return this.low
        }
        ,
        x.getLowBitsUnsigned = function() {
            return this.low >>> 0
        }
        ,
        x.getNumBitsAbs = function() {
            if (this.isNegative())
                return this.eq(E) ? 64 : this.neg().getNumBitsAbs();
            for (var e = 0 != this.high ? this.high : this.low, t = 31; 0 < t && 0 == (e & 1 << t); t--)
                ;
            return 0 != this.high ? t + 33 : t + 1
        }
        ,
        x.isZero = function() {
            return 0 === this.high && 0 === this.low
        }
        ,
        x.eqz = x.isZero,
        x.isNegative = function() {
            return !this.unsigned && this.high < 0
        }
        ,
        x.isPositive = function() {
            return this.unsigned || 0 <= this.high
        }
        ,
        x.isOdd = function() {
            return 1 == (1 & this.low)
        }
        ,
        x.isEven = function() {
            return 0 == (1 & this.low)
        }
        ,
        x.equals = function(e) {
            return p(e) || (e = v(e)),
            (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && (this.high === e.high && this.low === e.low)
        }
        ,
        x.eq = x.equals,
        x.notEquals = function(e) {
            return !this.eq(e)
        }
        ,
        x.neq = x.notEquals,
        x.ne = x.notEquals,
        x.lessThan = function(e) {
            return this.comp(e) < 0
        }
        ,
        x.lt = x.lessThan,
        x.lessThanOrEqual = function(e) {
            return this.comp(e) <= 0
        }
        ,
        x.lte = x.lessThanOrEqual,
        x.le = x.lessThanOrEqual,
        x.greaterThan = function(e) {
            return 0 < this.comp(e)
        }
        ,
        x.gt = x.greaterThan,
        x.greaterThanOrEqual = function(e) {
            return 0 <= this.comp(e)
        }
        ,
        x.gte = x.greaterThanOrEqual,
        x.ge = x.greaterThanOrEqual,
        x.compare = function(e) {
            if (p(e) || (e = v(e)),
            this.eq(e))
                return 0;
            var t = this.isNegative()
              , i = e.isNegative();
            return t && !i ? -1 : !t && i ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1
        }
        ,
        x.comp = x.compare,
        x.negate = function() {
            return !this.unsigned && this.eq(E) ? E : this.not().add(d)
        }
        ,
        x.neg = x.negate,
        x.add = function(e) {
            p(e) || (e = v(e));
            var t = this.high >>> 16
              , i = 65535 & this.high
              , n = this.low >>> 16
              , r = 65535 & this.low
              , o = e.high >>> 16
              , s = 65535 & e.high
              , a = e.low >>> 16
              , l = 0
              , u = 0
              , h = 0
              , c = 0;
            return h += (c += r + (65535 & e.low)) >>> 16,
            u += (h += n + a) >>> 16,
            l += (u += i + s) >>> 16,
            l += t + o,
            m((h &= 65535) << 16 | (c &= 65535), (l &= 65535) << 16 | (u &= 65535), this.unsigned)
        }
        ,
        x.subtract = function(e) {
            return p(e) || (e = v(e)),
            this.add(e.neg())
        }
        ,
        x.sub = x.subtract,
        x.multiply = function(e) {
            if (this.isZero())
                return y;
            if (p(e) || (e = v(e)),
            f)
                return m(f.mul(this.low, this.high, e.low, e.high), f.get_high(), this.unsigned);
            if (e.isZero())
                return y;
            if (this.eq(E))
                return e.isOdd() ? E : y;
            if (e.eq(E))
                return this.isOdd() ? E : y;
            if (this.isNegative())
                return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
            if (e.isNegative())
                return this.mul(e.neg()).neg();
            if (this.lt(_) && e.lt(_))
                return g(this.toNumber() * e.toNumber(), this.unsigned);
            var t = this.high >>> 16
              , i = 65535 & this.high
              , n = this.low >>> 16
              , r = 65535 & this.low
              , o = e.high >>> 16
              , s = 65535 & e.high
              , a = e.low >>> 16
              , l = 65535 & e.low
              , u = 0
              , h = 0
              , c = 0
              , d = 0;
            return c += (d += r * l) >>> 16,
            h += (c += n * l) >>> 16,
            c &= 65535,
            h += (c += r * a) >>> 16,
            u += (h += i * l) >>> 16,
            h &= 65535,
            u += (h += n * a) >>> 16,
            h &= 65535,
            u += (h += r * s) >>> 16,
            u += t * l + i * a + n * s + r * o,
            m((c &= 65535) << 16 | (d &= 65535), (u &= 65535) << 16 | (h &= 65535), this.unsigned)
        }
        ,
        x.mul = x.multiply,
        x.divide = function(e) {
            if (p(e) || (e = v(e)),
            e.isZero())
                throw Error("division by zero");
            var t, i, n;
            if (f)
                return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? m((this.unsigned ? f.div_u : f.div_s)(this.low, this.high, e.low, e.high), f.get_high(), this.unsigned) : this;
            if (this.isZero())
                return this.unsigned ? u : y;
            if (this.unsigned) {
                if (e.unsigned || (e = e.toUnsigned()),
                e.gt(this))
                    return u;
                if (e.gt(this.shru(1)))
                    return w;
                n = u
            } else {
                if (this.eq(E))
                    return e.eq(d) || e.eq(b) ? E : e.eq(E) ? d : (t = this.shr(1).div(e).shl(1)).eq(y) ? e.isNegative() ? d : b : (i = this.sub(e.mul(t)),
                    n = t.add(i.div(e)));
                else if (e.eq(E))
                    return this.unsigned ? u : y;
                if (this.isNegative())
                    return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
                if (e.isNegative())
                    return this.div(e.neg()).neg();
                n = y
            }
            for (i = this; i.gte(e); ) {
                t = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
                for (var r = Math.ceil(Math.log(t) / Math.LN2), o = r <= 48 ? 1 : h(2, r - 48), s = g(t), a = s.mul(e); a.isNegative() || a.gt(i); )
                    a = (s = g(t -= o, this.unsigned)).mul(e);
                s.isZero() && (s = d),
                n = n.add(s),
                i = i.sub(a)
            }
            return n
        }
        ,
        x.div = x.divide,
        x.modulo = function(e) {
            return p(e) || (e = v(e)),
            f ? m((this.unsigned ? f.rem_u : f.rem_s)(this.low, this.high, e.low, e.high), f.get_high(), this.unsigned) : this.sub(this.div(e).mul(e))
        }
        ,
        x.mod = x.modulo,
        x.rem = x.modulo,
        x.not = function() {
            return m(~this.low, ~this.high, this.unsigned)
        }
        ,
        x.and = function(e) {
            return p(e) || (e = v(e)),
            m(this.low & e.low, this.high & e.high, this.unsigned)
        }
        ,
        x.or = function(e) {
            return p(e) || (e = v(e)),
            m(this.low | e.low, this.high | e.high, this.unsigned)
        }
        ,
        x.xor = function(e) {
            return p(e) || (e = v(e)),
            m(this.low ^ e.low, this.high ^ e.high, this.unsigned)
        }
        ,
        x.shiftLeft = function(e) {
            return p(e) && (e = e.toInt()),
            0 == (e &= 63) ? this : e < 32 ? m(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : m(0, this.low << e - 32, this.unsigned)
        }
        ,
        x.shl = x.shiftLeft,
        x.shiftRight = function(e) {
            return p(e) && (e = e.toInt()),
            0 == (e &= 63) ? this : e < 32 ? m(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : m(this.high >> e - 32, 0 <= this.high ? 0 : -1, this.unsigned)
        }
        ,
        x.shr = x.shiftRight,
        x.shiftRightUnsigned = function(e) {
            if (p(e) && (e = e.toInt()),
            0 === (e &= 63))
                return this;
            var t = this.high;
            return e < 32 ? m(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : m(32 === e ? t : t >>> e - 32, 0, this.unsigned)
        }
        ,
        x.shru = x.shiftRightUnsigned,
        x.shr_u = x.shiftRightUnsigned,
        x.toSigned = function() {
            return this.unsigned ? m(this.low, this.high, !1) : this
        }
        ,
        x.toUnsigned = function() {
            return this.unsigned ? this : m(this.low, this.high, !0)
        }
        ,
        x.toBytes = function(e) {
            return e ? this.toBytesLE() : this.toBytesBE()
        }
        ,
        x.toBytesLE = function() {
            var e = this.high
              , t = this.low;
            return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24]
        }
        ,
        x.toBytesBE = function() {
            var e = this.high
              , t = this.low;
            return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t]
        }
        ,
        n.fromBytes = function(e, t, i) {
            return i ? n.fromBytesLE(e, t) : n.fromBytesBE(e, t)
        }
        ,
        n.fromBytesLE = function(e, t) {
            return new n(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24,e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24,t)
        }
        ,
        n.fromBytesBE = function(e, t) {
            return new n(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7],e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3],t)
        }
    }
    , function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__, SO, TO, ZO, hX, oX, GX, HX, IX, JX, T0, h2, i2, w2, P2, B4, M5, a7, o7, G7, _7, L8, l9, q9, S9, _9, Kba, Lba, Rca, Yca, kda, Wda, wea, vfa, _ga, Eka, Xpa, Cqa;
        //! openseadragon-edm 2.4.2
        //! Built on 2019-05-15
        //! Git commit: v2.4.0-82-e0b9b68
        //! http://openseadragon.github.io
        //! License: http://openseadragon.github.io/license/
        /*function OpenSeadragon(e) {
            return new OpenSeadragon.Viewer(e)
        }*/
        window.OpenSeadragon = function(e) {
            return new OpenSeadragon.Viewer(e)
        }
        function pX(e, t) {
            var i, n = e.controls;
            for (i = n.length - 1; 0 <= i; i--)
                if (n[i].element == t)
                    return i;
            return -1
        }
        function KX(e) {
            return e = HX.getElement(e),
            new HX.Point(0 === e.clientWidth ? 1 : e.clientWidth,0 === e.clientHeight ? 1 : e.clientHeight)
        }
        function MX(e, t) {
            if (t instanceof HX.Overlay)
                return t;
            var i = null;
            if (t.element)
                i = HX.getElement(t.element);
            else {
                var n = t.id ? t.id : "openseadragon-overlay-" + Math.floor(1e7 * Math.random());
                (i = HX.getElement(t.id)) || ((i = document.createElement("a")).href = "#/overlay/" + n),
                i.id = n,
                HX.addClass(i, t.className ? t.className : "openseadragon-overlay")
            }
            var r = t.location
              , o = t.width
              , s = t.height;
            if (!r) {
                var a = t.x
                  , l = t.y;
                if (void 0 !== t.px) {
                    var u = e.viewport.imageToViewportRectangle(new HX.Rect(t.px,t.py,o || 0,s || 0));
                    a = u.x,
                    l = u.y,
                    o = void 0 !== o ? u.width : void 0,
                    s = void 0 !== s ? u.height : void 0
                }
                r = new HX.Point(a,l)
            }
            var h = t.placement;
            return h && "string" === HX.type(h) && (h = HX.Placement[t.placement.toUpperCase()]),
            new HX.Overlay({
                element: i,
                location: r,
                placement: h,
                onDraw: t.onDraw,
                checkResize: t.checkResize,
                width: o,
                height: s,
                rotationMode: t.rotationMode
            })
        }
        function NX(e, t) {
            var i;
            for (i = e.length - 1; 0 <= i; i--)
                if (e[i].element === t)
                    return i;
            return -1
        }
        function OX(e, t) {
            return HX.requestAnimationFrame(function() {
                t(e)
            })
        }
        function PX(e) {
            HX.requestAnimationFrame(function() {
                !function(e) {
                    var t, i, n, r;
                    if (e.controlsShouldFade) {
                        for (t = HX.now(),
                        i = t - e.controlsFadeBeginTime,
                        n = 1 - i / e.controlsFadeLength,
                        n = Math.min(1, n),
                        n = Math.max(0, n),
                        r = e.controls.length - 1; 0 <= r; r--)
                            e.controls[r].autoFade && e.controls[r].setOpacity(n);
                        0 < n && PX(e)
                    }
                }(e)
            })
        }
        function QX(e) {
            e.autoHideControls && (e.controlsShouldFade = !0,
            e.controlsFadeBeginTime = HX.now() + e.controlsFadeDelay,
            window.setTimeout(function() {
                PX(e)
            }, e.controlsFadeDelay))
        }
        function SX(e) {
            var t;
            for (e.controlsShouldFade = !1,
            t = e.controls.length - 1; 0 <= t; t--)
                e.controls[t].setOpacity(1)
        }
        function TX() {
            SX(this)
        }
        function UX() {
            QX(this)
        }
        function VX(e) {
            var t = {
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction,
                preventVerticalPan: e.preventVerticalPan,
                preventHorizontalPan: e.preventHorizontalPan
            };
            if (this.raiseEvent("canvas-key", t),
            t.preventDefaultAction || e.ctrl || e.alt || e.meta)
                return !0;
            switch (e.keyCode) {
            case 38:
                return t.preventVerticalPan || (e.shift ? this.viewport.zoomBy(1.1) : this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(0,-this.pixelsPerArrowPress))),
                this.viewport.applyConstraints()),
                !1;
            case 40:
                return t.preventVerticalPan || (e.shift ? this.viewport.zoomBy(.9) : this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(0,this.pixelsPerArrowPress))),
                this.viewport.applyConstraints()),
                !1;
            case 37:
                return t.preventHorizontalPan || (this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(-this.pixelsPerArrowPress,0))),
                this.viewport.applyConstraints()),
                !1;
            case 39:
                return t.preventHorizontalPan || (this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(this.pixelsPerArrowPress,0))),
                this.viewport.applyConstraints()),
                !1;
            default:
                return !0
            }
        }
        function WX(e) {
            var t = {
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction,
                preventVerticalPan: e.preventVerticalPan,
                preventHorizontalPan: e.preventHorizontalPan
            };
            if (this.raiseEvent("canvas-key", t),
            t.preventDefaultAction || e.ctrl || e.alt || e.meta)
                return !0;
            switch (e.keyCode) {
            case 43:
            case 61:
                return this.viewport.zoomBy(1.1),
                this.viewport.applyConstraints(),
                !1;
            case 45:
                return this.viewport.zoomBy(.9),
                this.viewport.applyConstraints(),
                !1;
            case 48:
                return this.viewport.goHome(),
                this.viewport.applyConstraints(),
                !1;
            case 119:
            case 87:
                return t.preventVerticalPan || (e.shift ? this.viewport.zoomBy(1.1) : this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(0,-40))),
                this.viewport.applyConstraints()),
                !1;
            case 115:
            case 83:
                return t.preventVerticalPan || (e.shift ? this.viewport.zoomBy(.9) : this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(0,40))),
                this.viewport.applyConstraints()),
                !1;
            case 97:
                return t.preventHorizontalPan || (this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(-40,0))),
                this.viewport.applyConstraints()),
                !1;
            case 100:
                return t.preventHorizontalPan || (this.viewport.panBy(this.viewport.deltaPointsFromPixels(new HX.Point(40,0))),
                this.viewport.applyConstraints()),
                !1;
            case 114:
                return this.viewport.flipped ? this.viewport.setRotation(HX.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360)) : this.viewport.setRotation(HX.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360)),
                this.viewport.applyConstraints(),
                !1;
            case 82:
                return this.viewport.flipped ? this.viewport.setRotation(HX.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360)) : this.viewport.setRotation(HX.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360)),
                this.viewport.applyConstraints(),
                !1;
            case 102:
                return this.viewport.toggleFlip(),
                !1;
            default:
                return !0
            }
        }
        function XX(e) {
            var t;
            document.activeElement == this.canvas || this.canvas.focus(),
            this.viewport.flipped && (e.position.x = this.viewport.getContainerSize().x - e.position.x);
            var i = {
                tracker: e.eventSource,
                position: e.position,
                quick: e.quick,
                shift: e.shift,
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction
            };
            this.raiseEvent("canvas-click", i),
            !i.preventDefaultAction && this.viewport && e.quick && (t = this.gestureSettingsByDeviceType(e.pointerType)).clickToZoom && (this.viewport.zoomBy(e.shift ? 1 / this.zoomPerClick : this.zoomPerClick, t.zoomToRefPoint ? this.viewport.pointFromPixel(e.position, !0) : null),
            this.viewport.applyConstraints())
        }
        function YX(e) {
            var t, i = {
                tracker: e.eventSource,
                position: e.position,
                shift: e.shift,
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction
            };
            this.raiseEvent("canvas-double-click", i),
            !i.preventDefaultAction && this.viewport && (t = this.gestureSettingsByDeviceType(e.pointerType)).dblClickToZoom && (this.viewport.zoomBy(e.shift ? 1 / this.zoomPerClick : this.zoomPerClick, t.zoomToRefPoint ? this.viewport.pointFromPixel(e.position, !0) : null),
            this.viewport.applyConstraints())
        }
        function ZX(e) {
            var t, i = {
                tracker: e.eventSource,
                position: e.position,
                delta: e.delta,
                speed: e.speed,
                direction: e.direction,
                shift: e.shift,
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction
            };
            if (this.raiseEvent("canvas-drag", i),
            !i.preventDefaultAction && this.viewport) {
                if (t = this.gestureSettingsByDeviceType(e.pointerType),
                this.panHorizontal || (e.delta.x = 0),
                this.panVertical || (e.delta.y = 0),
                this.viewport.flipped && (e.delta.x = -e.delta.x),
                this.constrainDuringPan) {
                    var n = this.viewport.deltaPointsFromPixels(e.delta.negate());
                    this.viewport.centerSpringX.target.value += n.x,
                    this.viewport.centerSpringY.target.value += n.y;
                    var r = this.viewport.getBounds()
                      , o = this.viewport.getConstrainedBounds();
                    this.viewport.centerSpringX.target.value -= n.x,
                    this.viewport.centerSpringY.target.value -= n.y,
                    r.x != o.x && (e.delta.x = 0),
                    r.y != o.y && (e.delta.y = 0)
                }
                this.viewport.panBy(this.viewport.deltaPointsFromPixels(e.delta.negate()), t.flickEnabled && !this.constrainDuringPan)
            }
        }
        function $X(e) {
            if (!e.preventDefaultAction && this.viewport) {
                var t = this.gestureSettingsByDeviceType(e.pointerType);
                if (t.flickEnabled && e.speed >= t.flickMinSpeed) {
                    var i = 0;
                    this.panHorizontal && (i = t.flickMomentum * e.speed * Math.cos(e.direction));
                    var n = 0;
                    this.panVertical && (n = t.flickMomentum * e.speed * Math.sin(e.direction));
                    var r = this.viewport.pixelFromPoint(this.viewport.getCenter(!0))
                      , o = this.viewport.pointFromPixel(new HX.Point(r.x - i,r.y - n));
                    this.viewport.panTo(o, !1)
                }
                this.viewport.applyConstraints()
            }
            this.raiseEvent("canvas-drag-end", {
                tracker: e.eventSource,
                position: e.position,
                speed: e.speed,
                direction: e.direction,
                shift: e.shift,
                originalEvent: e.originalEvent
            })
        }
        function _X(e) {
            this.raiseEvent("canvas-enter", {
                tracker: e.eventSource,
                pointerType: e.pointerType,
                position: e.position,
                buttons: e.buttons,
                pointers: e.pointers,
                insideElementPressed: e.insideElementPressed,
                buttonDownAny: e.buttonDownAny,
                originalEvent: e.originalEvent
            })
        }
        function aY(e) {
            window.location != window.parent.location && HX.MouseTracker.resetAllMouseTrackers(),
            this.raiseEvent("canvas-exit", {
                tracker: e.eventSource,
                pointerType: e.pointerType,
                position: e.position,
                buttons: e.buttons,
                pointers: e.pointers,
                insideElementPressed: e.insideElementPressed,
                buttonDownAny: e.buttonDownAny,
                originalEvent: e.originalEvent
            })
        }
        function bY(e) {
            this.raiseEvent("canvas-press", {
                tracker: e.eventSource,
                pointerType: e.pointerType,
                position: e.position,
                insideElementPressed: e.insideElementPressed,
                insideElementReleased: e.insideElementReleased,
                originalEvent: e.originalEvent
            })
        }
        function cY(e) {
            this.raiseEvent("canvas-release", {
                tracker: e.eventSource,
                pointerType: e.pointerType,
                position: e.position,
                insideElementPressed: e.insideElementPressed,
                insideElementReleased: e.insideElementReleased,
                originalEvent: e.originalEvent
            })
        }
        function dY(e) {
            this.raiseEvent("canvas-nonprimary-press", {
                tracker: e.eventSource,
                position: e.position,
                pointerType: e.pointerType,
                button: e.button,
                buttons: e.buttons,
                originalEvent: e.originalEvent
            })
        }
        function eY(e) {
            this.raiseEvent("canvas-nonprimary-release", {
                tracker: e.eventSource,
                position: e.position,
                pointerType: e.pointerType,
                button: e.button,
                buttons: e.buttons,
                originalEvent: e.originalEvent
            })
        }
        function fY(e) {
            var t, i, n;
            if (!e.preventDefaultAction && this.viewport && ((t = this.gestureSettingsByDeviceType(e.pointerType)).pinchToZoom && (i = this.viewport.pointFromPixel(e.center, !0),
            n = this.viewport.pointFromPixel(e.lastCenter, !0).minus(i),
            this.panHorizontal || (n.x = 0),
            this.panVertical || (n.y = 0),
            this.viewport.zoomBy(e.distance / e.lastDistance, i, !0),
            t.zoomToRefPoint && this.viewport.panBy(n, !0),
            this.viewport.applyConstraints()),
            t.pinchRotate)) {
                var r = Math.atan2(e.gesturePoints[0].currentPos.y - e.gesturePoints[1].currentPos.y, e.gesturePoints[0].currentPos.x - e.gesturePoints[1].currentPos.x)
                  , o = Math.atan2(e.gesturePoints[0].lastPos.y - e.gesturePoints[1].lastPos.y, e.gesturePoints[0].lastPos.x - e.gesturePoints[1].lastPos.x);
                this.viewport.setRotation(this.viewport.getRotation() + (r - o) * (180 / Math.PI))
            }
            return this.raiseEvent("canvas-pinch", {
                tracker: e.eventSource,
                gesturePoints: e.gesturePoints,
                lastCenter: e.lastCenter,
                center: e.center,
                lastDistance: e.lastDistance,
                distance: e.distance,
                shift: e.shift,
                originalEvent: e.originalEvent
            }),
            !1
        }
        function gY(e) {
            var t, i, n;
            if ((n = HX.now()) - this._lastScrollTime > this.minScrollDeltaTime) {
                if (this._lastScrollTime = n,
                this.viewport.flipped && (e.position.x = this.viewport.getContainerSize().x - e.position.x),
                !e.preventDefaultAction && this.viewport && (t = this.gestureSettingsByDeviceType(e.pointerType)).scrollToZoom && (i = Math.pow(this.zoomPerScroll, e.scroll),
                this.viewport.zoomBy(i, t.zoomToRefPoint ? this.viewport.pointFromPixel(e.position, !0) : null),
                this.viewport.applyConstraints()),
                this.raiseEvent("canvas-scroll", {
                    tracker: e.eventSource,
                    position: e.position,
                    scroll: e.scroll,
                    shift: e.shift,
                    originalEvent: e.originalEvent
                }),
                t && t.scrollToZoom)
                    return !1
            } else if ((t = this.gestureSettingsByDeviceType(e.pointerType)) && t.scrollToZoom)
                return !1
        }
        function hY(e) {
            IX[this.hash].mouseInside = !0,
            SX(this),
            this.raiseEvent("container-enter", {
                tracker: e.eventSource,
                position: e.position,
                buttons: e.buttons,
                pointers: e.pointers,
                insideElementPressed: e.insideElementPressed,
                buttonDownAny: e.buttonDownAny,
                originalEvent: e.originalEvent
            })
        }
        function iY(e) {
            e.pointers < 1 && (IX[this.hash].mouseInside = !1,
            IX[this.hash].animating || QX(this)),
            this.raiseEvent("container-exit", {
                tracker: e.eventSource,
                position: e.position,
                buttons: e.buttons,
                pointers: e.pointers,
                insideElementPressed: e.insideElementPressed,
                buttonDownAny: e.buttonDownAny,
                originalEvent: e.originalEvent
            })
        }
        function jY(e) {
            !function(e) {
                if (e._opening)
                    return;
                if (e.autoResize) {
                    var t = KX(e.container)
                      , i = IX[e.hash].prevContainerSize;
                    if (!t.equals(i)) {
                        var n = e.viewport;
                        if (e.preserveImageSizeOnResize) {
                            var r = i.x / t.x
                              , o = n.getZoom() * r
                              , s = n.getCenter();
                            n.resize(t, !1),
                            n.zoomTo(o, null, !0),
                            n.panTo(s, !0)
                        } else {
                            var a = n.getBounds();
                            n.resize(t, !0),
                            n.fitBoundsWithConstraints(a, !0)
                        }
                        IX[e.hash].prevContainerSize = t,
                        IX[e.hash].forceRedraw = !0
                    }
                }
                var l = e.viewport.update()
                  , u = e.world.update() || l;
                l && e.raiseEvent("viewport-change");
                e.referenceStrip && (u = e.referenceStrip.update(e.viewport) || u);
                !IX[e.hash].animating && u && (e.raiseEvent("animation-start"),
                SX(e));
                (u || IX[e.hash].forceRedraw || e.world.needsDraw()) && (function(e) {
                    e.imageLoader.clear(),
                    e.drawer.clear(),
                    e.world.draw(),
                    e.raiseEvent("update-viewport", {})
                }(e),
                e._drawOverlays(),
                e.navigator && e.navigator.update(e.viewport),
                IX[e.hash].forceRedraw = !1,
                u && e.raiseEvent("animation"));
                IX[e.hash].animating && !u && (e.raiseEvent("animation-finish"),
                IX[e.hash].mouseInside || QX(e));
                IX[e.hash].animating = u
            }(e),
            e.isOpen() ? e._updateRequestId = OX(e, jY) : e._updateRequestId = !1
        }
        function mY(e, t) {
            return e ? e + t : t
        }
        function nY() {
            IX[this.hash].lastZoomTime = HX.now(),
            IX[this.hash].zoomFactor = this.zoomPerSecond,
            IX[this.hash].zooming = !0,
            qY(this)
        }
        function oY() {
            IX[this.hash].lastZoomTime = HX.now(),
            IX[this.hash].zoomFactor = 1 / this.zoomPerSecond,
            IX[this.hash].zooming = !0,
            qY(this)
        }
        function pY() {
            IX[this.hash].zooming = !1
        }
        function qY(e) {
            HX.requestAnimationFrame(HX.delegate(e, rY))
        }
        function rY() {
            var e, t, i;
            IX[this.hash].zooming && this.viewport && (t = (e = HX.now()) - IX[this.hash].lastZoomTime,
            i = Math.pow(IX[this.hash].zoomFactor, t / 1e3),
            this.viewport.zoomBy(i),
            this.viewport.applyConstraints(),
            IX[this.hash].lastZoomTime = e,
            qY(this))
        }
        function sY() {
            this.viewport && (IX[this.hash].zooming = !1,
            this.viewport.zoomBy(this.zoomPerClick / 1),
            this.viewport.applyConstraints())
        }
        function tY() {
            this.viewport && (IX[this.hash].zooming = !1,
            this.viewport.zoomBy(1 / this.zoomPerClick),
            this.viewport.applyConstraints())
        }
        function uY() {
            this.buttons.emulateEnter(),
            this.buttons.emulateExit()
        }
        function vY() {
            this.viewport && this.viewport.goHome()
        }
        function wY() {
            this.isFullPage() && !HX.isFullScreen() ? this.setFullPage(!1) : this.setFullScreen(!this.isFullPage()),
            this.buttons && this.buttons.emulateExit(),
            this.fullPageButton.element.focus(),
            this.viewport && this.viewport.applyConstraints()
        }
        function xY() {
            if (this.viewport) {
                var e = this.viewport.getRotation();
                e = this.viewport.flipped ? HX.positiveModulo(e + this.rotationIncrement, 360) : HX.positiveModulo(e - this.rotationIncrement, 360),
                this.viewport.setRotation(e)
            }
        }
        function yY() {
            if (this.viewport) {
                var e = this.viewport.getRotation();
                e = this.viewport.flipped ? HX.positiveModulo(e - this.rotationIncrement, 360) : HX.positiveModulo(e + this.rotationIncrement, 360),
                this.viewport.setRotation(e)
            }
        }
        function zY() {
            this.viewport.toggleFlip()
        }
        function AY() {
            var e = this._sequenceIndex - 1;
            this.navPrevNextWrap && e < 0 && (e += this.tileSources.length),
            this.goToPage(e)
        }
        function BY() {
            var e = this._sequenceIndex + 1;
            this.navPrevNextWrap && e >= this.tileSources.length && (e = 0),
            this.goToPage(e)
        }
        function U0(e) {
            var t = {
                tracker: e.eventSource,
                position: e.position,
                quick: e.quick,
                shift: e.shift,
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction
            };
            if (this.viewer.raiseEvent("navigator-click", t),
            !t.preventDefaultAction && e.quick && this.viewer.viewport && (this.panVertical || this.panHorizontal)) {
                this.viewer.viewport.flipped && (e.position.x = this.viewport.getContainerSize().x - e.position.x);
                var i = this.viewport.pointFromPixel(e.position);
                this.panVertical ? this.panHorizontal || (i.x = this.viewer.viewport.getCenter(!0).x) : i.y = this.viewer.viewport.getCenter(!0).y,
                this.viewer.viewport.panTo(i),
                this.viewer.viewport.applyConstraints()
            }
        }
        function V0(e) {
            var t = {
                tracker: e.eventSource,
                position: e.position,
                delta: e.delta,
                speed: e.speed,
                direction: e.direction,
                shift: e.shift,
                originalEvent: e.originalEvent,
                preventDefaultAction: e.preventDefaultAction
            };
            this.viewer.raiseEvent("navigator-drag", t),
            !t.preventDefaultAction && this.viewer.viewport && (this.panHorizontal || (e.delta.x = 0),
            this.panVertical || (e.delta.y = 0),
            this.viewer.viewport.flipped && (e.delta.x = -e.delta.x),
            this.viewer.viewport.panBy(this.viewport.deltaPointsFromPixels(e.delta)),
            this.viewer.constrainDuringPan && this.viewer.viewport.applyConstraints())
        }
        function W0(e) {
            e.insideElementPressed && this.viewer.viewport && this.viewer.viewport.applyConstraints()
        }
        function X0(e) {
            return this.viewer.raiseEvent("navigator-scroll", {
                tracker: e.eventSource,
                position: e.position,
                scroll: e.scroll,
                shift: e.shift,
                originalEvent: e.originalEvent
            }),
            !1
        }
        function Y0(e, t) {
            Z0(e, "rotate(" + t + "deg)")
        }
        function Z0(e, t) {
            e.style.webkitTransform = t,
            e.style.mozTransform = t,
            e.style.msTransform = t,
            e.style.oTransform = t,
            e.style.transform = t
        }
        function D4(e, t) {
            var i, n, r = t.Image, o = r.Url, s = r.Format, a = r.Size, l = r.DisplayRect || [], u = parseInt(a.Width, 10), h = parseInt(a.Height, 10), c = parseInt(r.TileSize, 10), d = parseInt(r.Overlap, 10), f = [];
            for (n = 0; n < l.length; n++)
                i = l[n].Rect,
                f.push(new B4.DisplayRect(parseInt(i.X, 10),parseInt(i.Y, 10),parseInt(i.Width, 10),parseInt(i.Height, 10),parseInt(i.MinLevel, 10),parseInt(i.MaxLevel, 10)));
            return B4.extend(!0, {
                width: u,
                height: h,
                tileSize: c,
                tileOverlap: d,
                minLevel: null,
                maxLevel: null,
                tilesUrl: o,
                fileFormat: s,
                displayRects: f
            }, t)
        }
        function c8(e, t) {
            return t.levels
        }
        function r9(e) {
            q9.requestAnimationFrame(function() {
                !function(e) {
                    var t, i, n;
                    e.shouldFade && (t = q9.now(),
                    i = t - e.fadeBeginTime,
                    n = 1 - i / e.fadeLength,
                    n = Math.min(1, n),
                    n = Math.max(0, n),
                    e.imgGroup && q9.setElementOpacity(e.imgGroup, n, !0),
                    0 < n && r9(e))
                }(e)
            })
        }
        function v9(e, t) {
            e.element.disabled || (t >= q9.ButtonState.GROUP && e.currentState == q9.ButtonState.REST && (function(e) {
                e.shouldFade = !1,
                e.imgGroup && q9.setElementOpacity(e.imgGroup, 1, !0)
            }(e),
            e.currentState = q9.ButtonState.GROUP),
            t >= q9.ButtonState.HOVER && e.currentState == q9.ButtonState.GROUP && (e.imgHover && (e.imgHover.style.visibility = ""),
            e.currentState = q9.ButtonState.HOVER),
            t >= q9.ButtonState.DOWN && e.currentState == q9.ButtonState.HOVER && (e.imgDown && (e.imgDown.style.visibility = ""),
            e.currentState = q9.ButtonState.DOWN))
        }
        function w9(e, t) {
            e.element.disabled || (t <= q9.ButtonState.HOVER && e.currentState == q9.ButtonState.DOWN && (e.imgDown && (e.imgDown.style.visibility = "hidden"),
            e.currentState = q9.ButtonState.HOVER),
            t <= q9.ButtonState.GROUP && e.currentState == q9.ButtonState.HOVER && (e.imgHover && (e.imgHover.style.visibility = "hidden"),
            e.currentState = q9.ButtonState.GROUP),
            t <= q9.ButtonState.REST && e.currentState == q9.ButtonState.GROUP && (function(e) {
                e.shouldFade = !0,
                e.fadeBeginTime = q9.now() + e.fadeDelay,
                window.setTimeout(function() {
                    r9(e)
                }, e.fadeDelay)
            }(e),
            e.currentState = q9.ButtonState.REST))
        }
        function Mba(e) {
            var t = Number(this.element.style.marginLeft.replace("px", ""))
              , i = Number(this.element.style.marginTop.replace("px", ""))
              , n = Number(this.element.style.width.replace("px", ""))
              , r = Number(this.element.style.height.replace("px", ""))
              , o = Kba.getElementSize(this.viewer.canvas);
            return this.dragging = !0,
            this.element && ("horizontal" == this.scroll ? 0 < -e.delta.x ? t > -(n - o.x) && (this.element.style.marginLeft = t + 2 * e.delta.x + "px",
            Oba(this, o.x, t + 2 * e.delta.x)) : -e.delta.x < 0 && t < 0 && (this.element.style.marginLeft = t + 2 * e.delta.x + "px",
            Oba(this, o.x, t + 2 * e.delta.x)) : 0 < -e.delta.y ? i > -(r - o.y) && (this.element.style.marginTop = i + 2 * e.delta.y + "px",
            Oba(this, o.y, i + 2 * e.delta.y)) : -e.delta.y < 0 && i < 0 && (this.element.style.marginTop = i + 2 * e.delta.y + "px",
            Oba(this, o.y, i + 2 * e.delta.y))),
            !1
        }
        function Nba(e) {
            var t = Number(this.element.style.marginLeft.replace("px", ""))
              , i = Number(this.element.style.marginTop.replace("px", ""))
              , n = Number(this.element.style.width.replace("px", ""))
              , r = Number(this.element.style.height.replace("px", ""))
              , o = Kba.getElementSize(this.viewer.canvas);
            return this.element && ("horizontal" == this.scroll ? 0 < e.scroll ? t > -(n - o.x) && (this.element.style.marginLeft = t - 60 * e.scroll + "px",
            Oba(this, o.x, t - 60 * e.scroll)) : e.scroll < 0 && t < 0 && (this.element.style.marginLeft = t - 60 * e.scroll + "px",
            Oba(this, o.x, t - 60 * e.scroll)) : e.scroll < 0 ? i > o.y - r && (this.element.style.marginTop = i + 60 * e.scroll + "px",
            Oba(this, o.y, i + 60 * e.scroll)) : 0 < e.scroll && i < 0 && (this.element.style.marginTop = i + 60 * e.scroll + "px",
            Oba(this, o.y, i + 60 * e.scroll))),
            !1
        }
        function Oba(e, t, i) {
            var n, r, o, s, a, l, u;
            for (n = "horizontal" == e.scroll ? e.panelWidth : e.panelHeight,
            r = Math.ceil(t / n) + 5,
            l = r = (r = (o = Math.ceil((Math.abs(i) + t) / n) + 1) - r) < 0 ? 0 : r; l < o && l < e.panels.length; l++)
                if (!(u = e.panels[l]).activePanel) {
                    var h, c = e.viewer.tileSources[l];
                    h = c.referenceStripThumbnailUrl ? {
                        type: "image",
                        url: c.referenceStripThumbnailUrl
                    } : c,
                    (s = new Kba.Viewer({
                        id: u.id,
                        tileSources: [h],
                        element: u,
                        navigatorSizeRatio: e.sizeRatio,
                        showNavigator: !1,
                        mouseNavEnabled: !1,
                        showNavigationControl: !1,
                        showSequenceControl: !1,
                        immediateRender: !0,
                        blendTime: 0,
                        animationTime: 0
                    })).displayRegion = Kba.makeNeutralElement("div"),
                    s.displayRegion.id = u.id + "-displayregion",
                    s.displayRegion.className = "displayregion",
                    (a = s.displayRegion.style).position = "relative",
                    a.top = "0px",
                    a.left = "0px",
                    a.fontSize = "0px",
                    a.overflow = "hidden",
                    a.float = "left",
                    a.cssFloat = "left",
                    a.styleFloat = "left",
                    a.zIndex = 999999999,
                    a.cursor = "default",
                    a.width = e.panelWidth - 4 + "px",
                    a.height = e.panelHeight - 4 + "px",
                    s.displayRegion.innerTracker = new Kba.MouseTracker({
                        element: s.displayRegion,
                        startDisabled: !0
                    }),
                    u.getElementsByTagName("div")[0].appendChild(s.displayRegion),
                    e.miniViewers[u.id] = s,
                    u.activePanel = !0
                }
        }
        function Pba(e) {
            var t = e.eventSource.element;
            return "horizontal" == this.scroll ? t.style.marginBottom = "0px" : t.style.marginLeft = "0px",
            !1
        }
        function Qba(e) {
            var t = e.eventSource.element;
            return "horizontal" == this.scroll ? t.style.marginBottom = "-" + Kba.getElementSize(t).y / 2 + "px" : t.style.marginLeft = "-" + Kba.getElementSize(t).x / 2 + "px",
            !1
        }
        function Rba(e) {
            if (e.preventDefaultAction || e.ctrl || e.alt || e.meta)
                return !0;
            switch (e.keyCode) {
            case 38:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: 1,
                    shift: null
                }),
                !1;
            case 40:
            case 37:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: -1,
                    shift: null
                }),
                !1;
            case 39:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: 1,
                    shift: null
                }),
                !1;
            default:
                return !0
            }
        }
        function Sba(e) {
            if (e.preventDefaultAction || e.ctrl || e.alt || e.meta)
                return !0;
            switch (e.keyCode) {
            case 61:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: 1,
                    shift: null
                }),
                !1;
            case 45:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: -1,
                    shift: null
                }),
                !1;
            case 48:
            case 119:
            case 87:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: 1,
                    shift: null
                }),
                !1;
            case 115:
            case 83:
            case 97:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: -1,
                    shift: null
                }),
                !1;
            case 100:
                return Nba.call(this, {
                    eventSource: this.tracker,
                    position: null,
                    scroll: 1,
                    shift: null
                }),
                !1;
            default:
                return !0
            }
        }
        function lda(e) {
            kda.extend(!0, this, {
                timeout: kda.DEFAULT_SETTINGS.timeout,
                jobId: null
            }, e),
            this.image = null
        }
        function Fka(e, t, i, n, r, o, s, a, l) {
            var u = s.getBoundingBox().getTopLeft()
              , h = s.getBoundingBox().getBottomRight();
            e.viewer && e.viewer.raiseEvent("update-level", {
                tiledImage: e,
                havedrawn: t,
                level: n,
                opacity: r,
                visibility: o,
                drawArea: s,
                topleft: u,
                bottomright: h,
                currenttime: a,
                best: l
            }),
            Qka(e.coverage, n),
            Qka(e.loadingCoverage, n);
            for (var c = e._getCornerTiles(n, u, h), d = c.topLeft, f = c.bottomRight, p = e.source.getNumTiles(n), g = e.viewport.pixelFromPoint(e.viewport.getCenter()), m = d.x; m <= f.x; m++)
                for (var v = d.y; v <= f.y; v++) {
                    if (!e.wrapHorizontal && !e.wrapVertical) {
                        var _ = e.source.getTileBounds(n, m, v);
                        if (null === s.intersection(_))
                            continue
                    }
                    l = Gka(e, i, t, m, v, n, r, o, g, p, a, l)
                }
            return l
        }
        function Gka(e, t, i, n, r, o, s, a, l, u, h, c) {
            var d = function(e, t, i, n, r, o, s, a, l, u) {
                var h, c, d, f, p, g, m, v, _;
                o[i] || (o[i] = {});
                o[i][e] || (o[i][e] = {});
                o[i][e][t] || (h = (a.x + e % a.x) % a.x,
                c = (a.y + t % a.y) % a.y,
                d = r.getTileBounds(i, h, c),
                f = r.getTileBounds(i, h, c, !0),
                p = r.tileExists(i, h, c),
                g = r.getTileUrl(i, h, c),
                n.loadTilesWithAjax ? (m = r.getTileAjaxHeaders(i, h, c),
                Eka.isPlainObject(n.ajaxHeaders) && (m = Eka.extend({}, n.ajaxHeaders, m))) : m = null,
                v = r.getContext2D ? r.getContext2D(i, h, c) : void 0,
                d.x += (e - h) / a.x,
                d.y += u / l * ((t - c) / a.y),
                _ = new Eka.Tile(i,e,t,d,p,g,v,n.loadTilesWithAjax,m,f),
                h == a.x - 1 && (_.isRightMost = !0),
                c == a.y - 1 && (_.isBottomMost = !0),
                o[i][e][t] = _);
                return (_ = o[i][e][t]).lastTouchTime = s,
                _
            }(n, r, o, e, e.source, e.tilesMatrix, h, u, e._worldWidthCurrent, e._worldHeightCurrent)
              , f = i;
            e.viewer && e.viewer.raiseEvent("update-tile", {
                tiledImage: e,
                tile: d
            }),
            Pka(e.coverage, o, n, r, !1);
            var p = d.loaded || d.loading || Oka(e.loadingCoverage, o, n, r);
            if (Pka(e.loadingCoverage, o, n, r, p),
            !d.exists)
                return c;
            if (t && !f && (Oka(e.coverage, o, n, r) ? Pka(e.coverage, o, n, r, !0) : f = !0),
            !f)
                return c;
            if (function(e, t, i, n, r, o) {
                var s = e.bounds.getTopLeft();
                s.x *= o._scaleSpring.current.value,
                s.y *= o._scaleSpring.current.value,
                s.x += o._xSpring.current.value,
                s.y += o._ySpring.current.value;
                var a = e.bounds.getSize();
                a.x *= o._scaleSpring.current.value,
                a.y *= o._scaleSpring.current.value;
                var l = i.pixelFromPointNoRotate(s, !0)
                  , u = i.pixelFromPointNoRotate(s, !1)
                  , h = i.deltaPixelsFromPointsNoRotate(a, !0)
                  , c = i.deltaPixelsFromPointsNoRotate(a, !1)
                  , d = u.plus(c.divide(2))
                  , f = n.squaredDistanceTo(d);
                t || (h = h.plus(new Eka.Point(1,1)));
                e.isRightMost && o.wrapHorizontal && (h.x += .75);
                e.isBottomMost && o.wrapVertical && (h.y += .75);
                e.position = l,
                e.size = h,
                e.squaredDistance = f,
                e.visibility = r
            }(d, e.source.tileOverlap, e.viewport, l, a, e),
            !d.loaded)
                if (d.context2D)
                    Kka(e, d);
                else {
                    var g = e._tileCache.getImageRecord(d.cacheKey);
                    if (g)
                        Kka(e, d, g.getImage())
                }
            d.loaded ? function(e, t, i, n, r, o, s) {
                var a, l, u = 1e3 * e.blendTime;
                t.blendStart || (t.blendStart = s);
                a = s - t.blendStart,
                l = u ? Math.min(1, a / u) : 1,
                e.alwaysBlend && (l *= o);
                if (t.opacity = l,
                e.lastDrawn.push(t),
                1 === l)
                    Pka(e.coverage, r, i, n, !0),
                    e._hasOpaqueTile = !0;
                else if (a < u)
                    return !0;
                return !1
            }(e, d, n, r, o, s, h) && (e._needsDraw = !0) : d.loading ? e._tilesLoading++ : p || (c = function(e, t) {
                if (!e)
                    return t;
                {
                    if (t.visibility > e.visibility)
                        return t;
                    if (t.visibility == e.visibility && t.squaredDistance < e.squaredDistance)
                        return t
                }
                return e
            }(c, d));
            return c
        }
        function Kka(e, t, i, n, r) {
            var o = 0;
            function s() {
                return o++,
                a
            }
            function a() {
                0 === --o && (t.loading = !1,
                t.loaded = !0,
                t.context2D || e._tileCache.cacheTile({
                    image: i,
                    tile: t,
                    cutoff: n,
                    tiledImage: e
                }),
                e._needsDraw = !0)
            }
            e.viewer.raiseEvent("tile-loaded", {
                tile: t,
                tiledImage: e,
                tileRequest: r,
                image: i,
                getCompletionCallback: s
            }),
            s()()
        }
        function Nka(e, t, i, n) {
            var r, o, s, a;
            if (!e[t])
                return !1;
            if (void 0 !== i && void 0 !== n)
                return void 0 === e[t][i] || void 0 === e[t][i][n] || !0 === e[t][i][n];
            for (s in r = e[t])
                if (r.hasOwnProperty(s))
                    for (a in o = r[s])
                        if (o.hasOwnProperty(a) && !o[a])
                            return !1;
            return !0
        }
        function Oka(e, t, i, n) {
            return void 0 === i || void 0 === n ? Nka(e, t + 1) : Nka(e, t + 1, 2 * i, 2 * n) && Nka(e, t + 1, 2 * i, 2 * n + 1) && Nka(e, t + 1, 2 * i + 1, 2 * n) && Nka(e, t + 1, 2 * i + 1, 2 * n + 1)
        }
        function Pka(e, t, i, n, r) {
            e[t] ? (e[t][i] || (e[t][i] = {}),
            e[t][i][n] = r) : Eka.console.warn("Setting coverage for a tile before its level's coverage has been reset: %s", t)
        }
        function Qka(e, t) {
            e[t] = {}
        }
        function Ypa(e) {
            Xpa.console.assert(e, "[TileCache.cacheTile] options is required"),
            Xpa.console.assert(e.tile, "[TileCache.cacheTile] options.tile is required"),
            Xpa.console.assert(e.tiledImage, "[TileCache.cacheTile] options.tiledImage is required"),
            this.tile = e.tile,
            this.tiledImage = e.tiledImage
        }
        function Zpa(e) {
            Xpa.console.assert(e, "[ImageRecord] options is required"),
            Xpa.console.assert(e.image, "[ImageRecord] options.image is required"),
            this._image = e.image,
            this._tiles = []
        }       
        !function(n) {
            n.version = {
                versionStr: "2.4.2",
                major: parseInt("2", 10),
                minor: parseInt("4", 10),
                revision: parseInt("2", 10)
            };
            var e, t = {
                "[object Boolean]": "boolean",
                "[object Number]": "number",
                "[object String]": "string",
                "[object Function]": "function",
                "[object Array]": "array",
                "[object Date]": "date",
                "[object RegExp]": "regexp",
                "[object Object]": "object"
            }, i = Object.prototype.toString, r = Object.prototype.hasOwnProperty;
            n.isFunction = function(e) {
                return "function" === n.type(e)
            }
            ,
            n.isArray = Array.isArray || function(e) {
                return "array" === n.type(e)
            }
            ,
            n.isWindow = function(e) {
                return e && "object" == typeof e && "setInterval"in e
            }
            ,
            n.type = function(e) {
                return null == e ? String(e) : t[i.call(e)] || "object"
            }
            ,
            n.isPlainObject = function(e) {
                if (!e || "object" !== OpenSeadragon.type(e) || e.nodeType || n.isWindow(e))
                    return !1;
                if (e.constructor && !r.call(e, "constructor") && !r.call(e.constructor.prototype, "isPrototypeOf"))
                    return !1;
                var t;
                for (var i in e)
                    t = i;
                return void 0 === t || r.call(e, t)
            }
            ,
            n.isEmptyObject = function(e) {
                for (var t in e)
                    return !1;
                return !0
            }
            ,
            n.freezeObject = function(e) {
                return Object.freeze ? n.freezeObject = Object.freeze : n.freezeObject = function(e) {
                    return e
                }
                ,
                n.freezeObject(e)
            }
            ,
            n.supportsCanvas = (e = document.createElement("canvas"),
            !(!n.isFunction(e.getContext) || !e.getContext("2d"))),
            n.isCanvasTainted = function(e) {
                var t = !1;
                try {
                    e.getContext("2d").getImageData(0, 0, 1, 1)
                } catch (e) {
                    t = !0
                }
                return t
            }
            ,
            n.pixelDensityRatio = function() {
                if (n.supportsCanvas) {
                    var e = document.createElement("canvas").getContext("2d")
                      , t = window.devicePixelRatio || 1
                      , i = e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;
                    return Math.max(t, 1) / i
                }
                return 1
            }()
        }(OpenSeadragon),
        function($) {
            $.extend = function() {
                var e, t, i, n, r, o, s = arguments[0] || {}, a = arguments.length, l = !1, u = 1;
                for ("boolean" == typeof s && (l = s,
                s = arguments[1] || {},
                u = 2),
                "object" == typeof s || OpenSeadragon.isFunction(s) || (s = {}),
                a === u && (s = this,
                --u); u < a; u++)
                    if (null !== (e = arguments[u]) || void 0 !== e)
                        for (t in e)
                            i = s[t],
                            s !== (n = e[t]) && (l && n && (OpenSeadragon.isPlainObject(n) || (r = OpenSeadragon.isArray(n))) ? (o = r ? (r = !1,
                            i && OpenSeadragon.isArray(i) ? i : []) : i && OpenSeadragon.isPlainObject(i) ? i : {},
                            s[t] = OpenSeadragon.extend(l, o, n)) : void 0 !== n && (s[t] = n));
                return s
            }
            ;
            var isIOSDevice = function() {
                if ("object" != typeof navigator)
                    return !1;
                var e = navigator.userAgent;
                return "string" == typeof e && (-1 !== e.indexOf("iPhone") || -1 !== e.indexOf("iPad") || -1 !== e.indexOf("iPod"))
            };
            $.extend($, {
                DEFAULT_SETTINGS: {
                    xmlPath: null,
                    tileSources: null,
                    tileHost: null,
                    initialPage: 0,
                    crossOriginPolicy: !1,
                    ajaxWithCredentials: !1,
                    loadTilesWithAjax: !1,
                    ajaxHeaders: {},
                    panHorizontal: !0,
                    panVertical: !0,
                    constrainDuringPan: !1,
                    wrapHorizontal: !1,
                    wrapVertical: !1,
                    visibilityRatio: .5,
                    minPixelRatio: .5,
                    defaultZoomLevel: 0,
                    minZoomLevel: null,
                    maxZoomLevel: null,
                    homeFillsViewer: !1,
                    clickTimeThreshold: 300,
                    clickDistThreshold: 5,
                    dblClickTimeThreshold: 300,
                    dblClickDistThreshold: 20,
                    springStiffness: 6.5,
                    animationTime: 1.2,
                    gestureSettingsMouse: {
                        scrollToZoom: !0,
                        clickToZoom: !0,
                        dblClickToZoom: !1,
                        pinchToZoom: !1,
                        zoomToRefPoint: !0,
                        flickEnabled: !1,
                        flickMinSpeed: 120,
                        flickMomentum: .25,
                        pinchRotate: !1
                    },
                    gestureSettingsTouch: {
                        scrollToZoom: !1,
                        clickToZoom: !1,
                        dblClickToZoom: !0,
                        pinchToZoom: !0,
                        zoomToRefPoint: !0,
                        flickEnabled: !0,
                        flickMinSpeed: 120,
                        flickMomentum: .25,
                        pinchRotate: !1
                    },
                    gestureSettingsPen: {
                        scrollToZoom: !1,
                        clickToZoom: !0,
                        dblClickToZoom: !1,
                        pinchToZoom: !1,
                        zoomToRefPoint: !0,
                        flickEnabled: !1,
                        flickMinSpeed: 120,
                        flickMomentum: .25,
                        pinchRotate: !1
                    },
                    gestureSettingsUnknown: {
                        scrollToZoom: !1,
                        clickToZoom: !1,
                        dblClickToZoom: !0,
                        pinchToZoom: !0,
                        zoomToRefPoint: !0,
                        flickEnabled: !0,
                        flickMinSpeed: 120,
                        flickMomentum: .25,
                        pinchRotate: !1
                    },
                    zoomPerClick: 2,
                    zoomPerScroll: 1.2,
                    zoomPerSecond: 1,
                    blendTime: 0,
                    alwaysBlend: !1,
                    autoHideControls: !0,
                    immediateRender: !1,
                    minZoomImageRatio: .9,
                    maxZoomPixelRatio: 1.1,
                    smoothTileEdgesMinZoom: 1.1,
                    iOSDevice: isIOSDevice(),
                    pixelsPerWheelLine: 40,
                    pixelsPerArrowPress: 40,
                    autoResize: !0,
                    preserveImageSizeOnResize: !1,
                    minScrollDeltaTime: 50,
                    rotationIncrement: 90,
                    showSequenceControl: !0,
                    sequenceControlAnchor: null,
                    preserveViewport: !1,
                    preserveOverlays: !1,
                    navPrevNextWrap: !1,
                    showNavigationControl: !0,
                    navigationControlAnchor: null,
                    showZoomControl: !0,
                    showHomeControl: !0,
                    showFullPageControl: !0,
                    showRotationControl: !1,
                    showFlipControl: !1,
                    controlsFadeDelay: 2e3,
                    controlsFadeLength: 1500,
                    mouseNavEnabled: !0,
                    showNavigator: !1,
                    navigatorId: null,
                    navigatorPosition: null,
                    navigatorSizeRatio: .2,
                    navigatorMaintainSizeRatio: !1,
                    navigatorTop: null,
                    navigatorLeft: null,
                    navigatorHeight: null,
                    navigatorWidth: null,
                    navigatorAutoResize: !0,
                    navigatorAutoFade: !0,
                    navigatorRotate: !0,
                    navigatorBackground: "#000",
                    navigatorOpacity: .8,
                    navigatorBorderColor: "#555",
                    navigatorDisplayRegionColor: "#900",
                    degrees: 0,
                    flipped: !1,
                    opacity: 1,
                    preload: !1,
                    compositeOperation: null,
                    imageSmoothingEnabled: !0,
                    placeholderFillStyle: null,
                    showReferenceStrip: !1,
                    referenceStripScroll: "horizontal",
                    referenceStripElement: null,
                    referenceStripHeight: null,
                    referenceStripWidth: null,
                    referenceStripPosition: "BOTTOM_LEFT",
                    referenceStripSizeRatio: .2,
                    collectionRows: 3,
                    collectionColumns: 0,
                    collectionLayout: "horizontal",
                    collectionMode: !1,
                    collectionTileSize: 800,
                    collectionTileMargin: 80,
                    imageLoaderLimit: 0,
                    maxImageCacheCount: 200,
                    timeout: 3e4,
                    useCanvas: !0,
                    prefixUrl: "/images/",
                    navImages: {
                        zoomIn: {
                            REST: "zoomin_rest.png",
                            GROUP: "zoomin_grouphover.png",
                            HOVER: "zoomin_hover.png",
                            DOWN: "zoomin_pressed.png"
                        },
                        zoomOut: {
                            REST: "zoomout_rest.png",
                            GROUP: "zoomout_grouphover.png",
                            HOVER: "zoomout_hover.png",
                            DOWN: "zoomout_pressed.png"
                        },
                        home: {
                            REST: "home_rest.png",
                            GROUP: "home_grouphover.png",
                            HOVER: "home_hover.png",
                            DOWN: "home_pressed.png"
                        },
                        fullpage: {
                            REST: "fullpage_rest.png",
                            GROUP: "fullpage_grouphover.png",
                            HOVER: "fullpage_hover.png",
                            DOWN: "fullpage_pressed.png"
                        },
                        rotateleft: {
                            REST: "rotateleft_rest.png",
                            GROUP: "rotateleft_grouphover.png",
                            HOVER: "rotateleft_hover.png",
                            DOWN: "rotateleft_pressed.png"
                        },
                        rotateright: {
                            REST: "rotateright_rest.png",
                            GROUP: "rotateright_grouphover.png",
                            HOVER: "rotateright_hover.png",
                            DOWN: "rotateright_pressed.png"
                        },
                        flip: {
                            REST: "flip_rest.png",
                            GROUP: "flip_grouphover.png",
                            HOVER: "flip_hover.png",
                            DOWN: "flip_pressed.png"
                        },
                        previous: {
                            REST: "previous_rest.png",
                            GROUP: "previous_grouphover.png",
                            HOVER: "previous_hover.png",
                            DOWN: "previous_pressed.png"
                        },
                        next: {
                            REST: "next_rest.png",
                            GROUP: "next_grouphover.png",
                            HOVER: "next_hover.png",
                            DOWN: "next_pressed.png"
                        }
                    },
                    debugMode: !1,
                    debugGridColor: ["#437AB2", "#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#66A61E", "#E6AB02", "#A6761D", "#666666"]
                },
                SIGNAL: "----seadragon----",
                delegate: function(t, i) {
                    return function() {
                        var e = arguments;
                        return void 0 === e && (e = []),
                        i.apply(t, e)
                    }
                },
                BROWSERS: {
                    UNKNOWN: 0,
                    IE: 1,
                    FIREFOX: 2,
                    SAFARI: 3,
                    CHROME: 4,
                    OPERA: 5
                },
                getElement: function(e) {
                    return "string" == typeof e && (e = document.getElementById(e)),
                    e
                },
                getElementPosition: function(e) {
                    var t, i, n = new $.Point;
                    for (i = getOffsetParent(e = $.getElement(e), t = "fixed" == $.getElementStyle(e).position); i; )
                        n.x += e.offsetLeft,
                        n.y += e.offsetTop,
                        t && (n = n.plus($.getPageScroll())),
                        i = getOffsetParent(e = i, t = "fixed" == $.getElementStyle(e).position);
                    return n
                },
                getElementOffset: function(e) {
                    var t, i, n = (e = $.getElement(e)) && e.ownerDocument, r = {
                        top: 0,
                        left: 0
                    };
                    return n ? (t = n.documentElement,
                    void 0 !== e.getBoundingClientRect && (r = e.getBoundingClientRect()),
                    i = n == n.window ? n : 9 === n.nodeType && (n.defaultView || n.parentWindow),
                    new $.Point(r.left + (i.pageXOffset || t.scrollLeft) - (t.clientLeft || 0),r.top + (i.pageYOffset || t.scrollTop) - (t.clientTop || 0))) : new $.Point
                },
                getElementSize: function(e) {
                    return e = $.getElement(e),
                    new $.Point(e.clientWidth,e.clientHeight)
                },
                getElementStyle: document.documentElement.currentStyle ? function(e) {
                    return (e = $.getElement(e)).currentStyle
                }
                : function(e) {
                    return e = $.getElement(e),
                    window.getComputedStyle(e, "")
                }
                ,
                getCssPropertyWithVendorPrefix: function(e) {
                    var a = {};
                    return $.getCssPropertyWithVendorPrefix = function(e) {
                        if (void 0 !== a[e])
                            return a[e];
                        var t = document.createElement("div").style
                          , i = null;
                        if (void 0 !== t[e])
                            i = e;
                        else
                            for (var n = ["Webkit", "Moz", "MS", "O", "webkit", "moz", "ms", "o"], r = $.capitalizeFirstLetter(e), o = 0; o < n.length; o++) {
                                var s = n[o] + r;
                                if (void 0 !== t[s]) {
                                    i = s;
                                    break
                                }
                            }
                        return a[e] = i
                    }
                    ,
                    $.getCssPropertyWithVendorPrefix(e)
                },
                capitalizeFirstLetter: function(e) {
                    return e.charAt(0).toUpperCase() + e.slice(1)
                },
                positiveModulo: function(e, t) {
                    var i = e % t;
                    return i < 0 && (i += t),
                    i
                },
                pointInElement: function(e, t) {
                    e = $.getElement(e);
                    var i = $.getElementOffset(e)
                      , n = $.getElementSize(e);
                    return t.x >= i.x && t.x < i.x + n.x && t.y < i.y + n.y && t.y >= i.y
                },
                getEvent: function(e) {
                    return $.getEvent = e ? function(e) {
                        return e
                    }
                    : function() {
                        return window.event
                    }
                    ,
                    $.getEvent(e)
                },
                getMousePosition: function(e) {
                    if ("number" == typeof e.pageX)
                        $.getMousePosition = function(e) {
                            var t = new $.Point;
                            return e = $.getEvent(e),
                            t.x = e.pageX,
                            t.y = e.pageY,
                            t
                        }
                        ;
                    else {
                        if ("number" != typeof e.clientX)
                            throw new Error("Unknown event mouse position, no known technique.");
                        $.getMousePosition = function(e) {
                            var t = new $.Point;
                            return e = $.getEvent(e),
                            t.x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,
                            t.y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop,
                            t
                        }
                    }
                    return $.getMousePosition(e)
                },
                getPageScroll: function() {
                    var e = document.documentElement || {}
                      , t = document.body || {};
                    if ("number" == typeof window.pageXOffset)
                        $.getPageScroll = function() {
                            return new $.Point(window.pageXOffset,window.pageYOffset)
                        }
                        ;
                    else if (t.scrollLeft || t.scrollTop)
                        $.getPageScroll = function() {
                            return new $.Point(document.body.scrollLeft,document.body.scrollTop)
                        }
                        ;
                    else {
                        if (!e.scrollLeft && !e.scrollTop)
                            return new $.Point(0,0);
                        $.getPageScroll = function() {
                            return new $.Point(document.documentElement.scrollLeft,document.documentElement.scrollTop)
                        }
                    }
                    return $.getPageScroll()
                },
                setPageScroll: function(e) {
                    if (void 0 !== window.scrollTo)
                        $.setPageScroll = function(e) {
                            window.scrollTo(e.x, e.y)
                        }
                        ;
                    else {
                        var t = $.getPageScroll();
                        if (t.x === e.x && t.y === e.y)
                            return;
                        document.body.scrollLeft = e.x,
                        document.body.scrollTop = e.y;
                        var i = $.getPageScroll();
                        if (i.x !== t.x && i.y !== t.y)
                            return void ($.setPageScroll = function(e) {
                                document.body.scrollLeft = e.x,
                                document.body.scrollTop = e.y
                            }
                            );
                        if (document.documentElement.scrollLeft = e.x,
                        document.documentElement.scrollTop = e.y,
                        (i = $.getPageScroll()).x !== t.x && i.y !== t.y)
                            return void ($.setPageScroll = function(e) {
                                document.documentElement.scrollLeft = e.x,
                                document.documentElement.scrollTop = e.y
                            }
                            );
                        $.setPageScroll = function(e) {}
                    }
                    return $.setPageScroll(e)
                },
                getWindowSize: function() {
                    var e = document.documentElement || {}
                      , t = document.body || {};
                    if ("number" == typeof window.innerWidth)
                        $.getWindowSize = function() {
                            return new $.Point(window.innerWidth,window.innerHeight)
                        }
                        ;
                    else if (e.clientWidth || e.clientHeight)
                        $.getWindowSize = function() {
                            return new $.Point(document.documentElement.clientWidth,document.documentElement.clientHeight)
                        }
                        ;
                    else {
                        if (!t.clientWidth && !t.clientHeight)
                            throw new Error("Unknown window size, no known technique.");
                        $.getWindowSize = function() {
                            return new $.Point(document.body.clientWidth,document.body.clientHeight)
                        }
                    }
                    return $.getWindowSize()
                },
                makeCenteredNode: function(e) {
                    e = $.getElement(e);
                    var t = [$.makeNeutralElement("div"), $.makeNeutralElement("div"), $.makeNeutralElement("div")];
                    return $.extend(t[0].style, {
                        display: "table",
                        height: "100%",
                        width: "100%"
                    }),
                    $.extend(t[1].style, {
                        display: "table-row"
                    }),
                    $.extend(t[2].style, {
                        display: "table-cell",
                        verticalAlign: "middle",
                        textAlign: "center"
                    }),
                    t[0].appendChild(t[1]),
                    t[1].appendChild(t[2]),
                    t[2].appendChild(e),
                    t[0]
                },
                makeNeutralElement: function(e) {
                    var t = document.createElement(e)
                      , i = t.style;
                    return i.background = "transparent none",
                    i.border = "none",
                    i.margin = "0px",
                    i.padding = "0px",
                    i.position = "static",
                    t
                },
                now: function() {
                    return Date.now ? $.now = Date.now : $.now = function() {
                        return (new Date).getTime()
                    }
                    ,
                    $.now()
                },
                makeTransparentImage: function(e) {
                    return $.makeTransparentImage = function(e) {
                        var t = $.makeNeutralElement("img");
                        return t.src = e,
                        t
                    }
                    ,
                    $.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 7 && ($.makeTransparentImage = function(e) {
                        var t = $.makeNeutralElement("img")
                          , i = null;
                        return (i = $.makeNeutralElement("span")).style.display = "inline-block",
                        t.onload = function() {
                            i.style.width = i.style.width || t.width + "px",
                            i.style.height = i.style.height || t.height + "px",
                            t.onload = null,
                            t = null
                        }
                        ,
                        t.src = e,
                        i.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + e + "', sizingMethod='scale')",
                        i
                    }
                    ),
                    $.makeTransparentImage(e)
                },
                setElementOpacity: function(e, t, i) {
                    var n;
                    e = $.getElement(e),
                    i && !$.Browser.alpha && (t = Math.round(t)),
                    $.Browser.opacity ? e.style.opacity = t < 1 ? t : "" : t < 1 ? (n = "alpha(opacity=" + Math.round(100 * t) + ")",
                    e.style.filter = n) : e.style.filter = ""
                },
                setElementTouchActionNone: function(e) {
                    void 0 !== (e = $.getElement(e)).style.touchAction ? e.style.touchAction = "none" : void 0 !== e.style.msTouchAction && (e.style.msTouchAction = "none")
                },
                addClass: function(e, t) {
                    (e = $.getElement(e)).className ? -1 === (" " + e.className + " ").indexOf(" " + t + " ") && (e.className += " " + t) : e.className = t
                },
                indexOf: function(e, t, i) {
                    return Array.prototype.indexOf ? this.indexOf = function(e, t, i) {
                        return e.indexOf(t, i)
                    }
                    : this.indexOf = function(e, t, i) {
                        var n, r, o = i || 0;
                        if (!e)
                            throw new TypeError;
                        if (0 === (r = e.length) || r <= o)
                            return -1;
                        for (o < 0 && (o = r - Math.abs(o)),
                        n = o; n < r; n++)
                            if (e[n] === t)
                                return n;
                        return -1
                    }
                    ,
                    this.indexOf(e, t, i)
                },
                removeClass: function(e, t) {
                    var i, n, r = [];
                    for (i = (e = $.getElement(e)).className.split(/\s+/),
                    n = 0; n < i.length; n++)
                        i[n] && i[n] !== t && r.push(i[n]);
                    e.className = r.join(" ")
                },
                addEvent: function() {
                    if (window.addEventListener)
                        return function(e, t, i, n) {
                            (e = $.getElement(e)).addEventListener(t, i, n)
                        }
                        ;
                    if (window.attachEvent)
                        return function(e, t, i, n) {
                            (e = $.getElement(e)).attachEvent("on" + t, i)
                        }
                        ;
                    throw new Error("No known event model.")
                }(),
                removeEvent: function() {
                    if (window.removeEventListener)
                        return function(e, t, i, n) {
                            (e = $.getElement(e)).removeEventListener(t, i, n)
                        }
                        ;
                    if (window.detachEvent)
                        return function(e, t, i, n) {
                            (e = $.getElement(e)).detachEvent("on" + t, i)
                        }
                        ;
                    throw new Error("No known event model.")
                }(),
                cancelEvent: function(e) {
                    (e = $.getEvent(e)).preventDefault ? $.cancelEvent = function(e) {
                        e.preventDefault()
                    }
                    : $.cancelEvent = function(e) {
                        (e = $.getEvent(e)).cancel = !0,
                        e.returnValue = !1
                    }
                    ,
                    $.cancelEvent(e)
                },
                stopEvent: function(e) {
                    (e = $.getEvent(e)).stopPropagation ? $.stopEvent = function(e) {
                        e.stopPropagation()
                    }
                    : $.stopEvent = function(e) {
                        (e = $.getEvent(e)).cancelBubble = !0
                    }
                    ,
                    $.stopEvent(e)
                },
                createCallback: function(i, n) {
                    var e, r = [];
                    for (e = 2; e < arguments.length; e++)
                        r.push(arguments[e]);
                    return function() {
                        var e, t = r.concat([]);
                        for (e = 0; e < arguments.length; e++)
                            t.push(arguments[e]);
                        return n.apply(i, t)
                    }
                },
                getUrlParameter: function(e) {
                    var t = URLPARAMS[e];
                    return t || null
                },
                getUrlProtocol: function(e) {
                    var t = e.match(/^([a-z]+:)\/\//i);
                    return null === t ? window.location.protocol : t[1].toLowerCase()
                },
                createAjaxRequest: function(e) {
                    var t;
                    try {
                        t = !!new ActiveXObject("Microsoft.XMLHTTP")
                    } catch (e) {
                        t = !1
                    }
                    if (t)
                        window.XMLHttpRequest ? $.createAjaxRequest = function(e) {
                            return e ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest
                        }
                        : $.createAjaxRequest = function() {
                            return new ActiveXObject("Microsoft.XMLHTTP")
                        }
                        ;
                    else {
                        if (!window.XMLHttpRequest)
                            throw new Error("Browser doesn't support XMLHttpRequest.");
                        $.createAjaxRequest = function() {
                            return new XMLHttpRequest
                        }
                    }
                    return $.createAjaxRequest(e)
                },
                makeAjaxRequest: function(e, i, n) {
                    var t, r, o;
                    $.isPlainObject(e) && (i = e.success,
                    n = e.error,
                    t = e.withCredentials,
                    r = e.headers,
                    o = e.responseType || null,
                    e = e.url);
                    var s = $.getUrlProtocol(e)
                      , a = $.createAjaxRequest("file:" === s);
                    if (!$.isFunction(i))
                        throw new Error("makeAjaxRequest requires a success callback");
                    a.onreadystatechange = function() {
                        4 == a.readyState && (a.onreadystatechange = function() {}
                        ,
                        200 <= a.status && a.status < 300 || 0 === a.status && "http:" !== s && "https:" !== s ? i(a) : ($.console.log("AJAX request returned %d: %s", a.status, e),
                        $.isFunction(n) && n(a)))
                    }
                    ;
                    try {
                        if (a.open("GET", e, !0),
                        o && (a.responseType = o),
                        r)
                            for (var l in r)
                                r.hasOwnProperty(l) && r[l] && a.setRequestHeader(l, r[l]);
                        t && (a.withCredentials = !0),
                        a.send(null)
                    } catch (t) {
                        var u = t.message;
                        if ($.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 10 && void 0 !== t.number && -2147024891 == t.number && (u += "\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain"),
                        $.console.log("%s while making AJAX request: %s", t.name, u),
                        a.onreadystatechange = function() {}
                        ,
                        window.XDomainRequest) {
                            var h = new XDomainRequest;
                            if (h) {
                                h.onload = function(e) {
                                    $.isFunction(i) && i({
                                        responseText: h.responseText,
                                        status: 200,
                                        statusText: "OK"
                                    })
                                }
                                ,
                                h.onerror = function(e) {
                                    $.isFunction(n) && n({
                                        responseText: h.responseText,
                                        status: 444,
                                        statusText: "An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser."
                                    })
                                }
                                ;
                                try {
                                    h.open("GET", e),
                                    h.send()
                                } catch (e) {
                                    $.isFunction(n) && n(a, t)
                                }
                            }
                        } else
                            $.isFunction(n) && n(a, t)
                    }
                    return a
                },
                jsonp: function(e) {
                    var i, t = e.url, n = document.head || document.getElementsByTagName("head")[0] || document.documentElement, r = e.callbackName || "openseadragon" + $.now(), o = window[r], s = "$1" + r + "$2", a = e.param || "callback", l = e.callback;
                    t = t.replace(/(\=)\?(&|$)|\?\?/i, s),
                    t += (/\?/.test(t) ? "&" : "?") + a + "=" + r,
                    window[r] = function(e) {
                        if (o)
                            window[r] = o;
                        else
                            try {
                                delete window[r]
                            } catch (e) {}
                        l && $.isFunction(l) && l(e)
                    }
                    ,
                    i = document.createElement("script"),
                    void 0 === e.async && !1 === e.async || (i.async = "async"),
                    e.scriptCharset && (i.charset = e.scriptCharset),
                    i.src = t,
                    i.onload = i.onreadystatechange = function(e, t) {
                        !t && i.readyState && !/loaded|complete/.test(i.readyState) || (i.onload = i.onreadystatechange = null,
                        n && i.parentNode && n.removeChild(i),
                        i = void 0)
                    }
                    ,
                    n.insertBefore(i, n.firstChild)
                },
                createFromDZI: function() {
                    throw "OpenSeadragon.createFromDZI is deprecated, use Viewer.open."
                },
                parseXml: function(e) {
                    if (window.DOMParser)
                        $.parseXml = function(e) {
                            return (new DOMParser).parseFromString(e, "text/xml")
                        }
                        ;
                    else {
                        if (!window.ActiveXObject)
                            throw new Error("Browser doesn't support XML DOM.");
                        $.parseXml = function(e) {
                            var t = null;
                            return (t = new ActiveXObject("Microsoft.XMLDOM")).async = !1,
                            t.loadXML(e),
                            t
                        }
                    }
                    return $.parseXml(e)
                },
                parseJSON: function(string) {
                    return window.JSON && window.JSON.parse ? $.parseJSON = window.JSON.parse : $.parseJSON = function(string) {
                        return eval("(" + string + ")")
                    }
                    ,
                    $.parseJSON(string)
                },
                imageFormatSupported: function(e) {
                    return !!FILEFORMATS[(e = e || "").toLowerCase()]
                }
            }),
            $.Browser = {
                vendor: $.BROWSERS.UNKNOWN,
                version: 0,
                alpha: !0
            };
            var FILEFORMATS = {
                bmp: !1,
                jpeg: !0,
                jpg: !0,
                png: !0,
                tif: !1,
                wdp: !1
            }
              , URLPARAMS = {};
            !function() {
                var e = navigator.appVersion
                  , t = navigator.userAgent;
                switch (navigator.appName) {
                case "Microsoft Internet Explorer":
                    window.attachEvent && window.ActiveXObject && ($.Browser.vendor = $.BROWSERS.IE,
                    $.Browser.version = parseFloat(t.substring(t.indexOf("MSIE") + 5, t.indexOf(";", t.indexOf("MSIE")))));
                    break;
                case "Netscape":
                    window.addEventListener && (0 <= t.indexOf("Firefox") ? ($.Browser.vendor = $.BROWSERS.FIREFOX,
                    $.Browser.version = parseFloat(t.substring(t.indexOf("Firefox") + 8))) : 0 <= t.indexOf("Safari") ? ($.Browser.vendor = 0 <= t.indexOf("Chrome") ? $.BROWSERS.CHROME : $.BROWSERS.SAFARI,
                    $.Browser.version = parseFloat(t.substring(t.substring(0, t.indexOf("Safari")).lastIndexOf("/") + 1, t.indexOf("Safari")))) : null !== new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})").exec(t) && ($.Browser.vendor = $.BROWSERS.IE,
                    $.Browser.version = parseFloat(RegExp.$1)));
                    break;
                case "Opera":
                    $.Browser.vendor = $.BROWSERS.OPERA,
                    $.Browser.version = parseFloat(e)
                }
                var i, n, r, o = window.location.search.substring(1).split("&");
                for (r = 0; r < o.length; r++)
                    0 < (n = (i = o[r]).indexOf("=")) && (URLPARAMS[i.substring(0, n)] = decodeURIComponent(i.substring(n + 1)));
                $.Browser.alpha = !($.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 9 || $.Browser.vendor == $.BROWSERS.CHROME && $.Browser.version < 2),
                $.Browser.opacity = !($.Browser.vendor == $.BROWSERS.IE && $.Browser.version < 9)
            }();
            var nullfunction = function(e) {};
            function getOffsetParent(e, t) {
                return t && e != document.body ? document.body : e.offsetParent
            }
            $.console = window.console || {
                log: nullfunction,
                debug: nullfunction,
                info: nullfunction,
                warn: nullfunction,
                error: nullfunction,
                assert: nullfunction
            },
            function(e) {
                var t = e.requestAnimationFrame || e.mozRequestAnimationFrame || e.webkitRequestAnimationFrame || e.msRequestAnimationFrame
                  , i = e.cancelAnimationFrame || e.mozCancelAnimationFrame || e.webkitCancelAnimationFrame || e.msCancelAnimationFrame;
                if (t && i)
                    $.requestAnimationFrame = function() {
                        return t.apply(e, arguments)
                    }
                    ,
                    $.cancelAnimationFrame = function() {
                        return i.apply(e, arguments)
                    }
                    ;
                else {
                    var n, r = [], o = [], s = 0;
                    $.requestAnimationFrame = function(e) {
                        return r.push([++s, e]),
                        n || (n = setInterval(function() {
                            if (r.length) {
                                var e = $.now()
                                  , t = o;
                                for (o = r,
                                r = t; o.length; )
                                    o.shift()[1](e)
                            } else
                                clearInterval(n),
                                n = void 0
                        }, 20)),
                        s
                    }
                    ,
                    $.cancelAnimationFrame = function(e) {
                        var t, i;
                        for (t = 0,
                        i = r.length; t < i; t += 1)
                            if (r[t][0] === e)
                                return void r.splice(t, 1);
                        for (t = 0,
                        i = o.length; t < i; t += 1)
                            if (o[t][0] === e)
                                return void o.splice(t, 1)
                    }
                }
            }(window)
        }(OpenSeadragon),
        __WEBPACK_AMD_DEFINE_ARRAY__ = [],
        void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof (__WEBPACK_AMD_DEFINE_FACTORY__ = function() {
            return OpenSeadragon
        }
        ) ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__) || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__),
        SO = OpenSeadragon,
        TO = {
            supportsFullScreen: !1,
            isFullScreen: function() {
                return !1
            },
            getFullScreenElement: function() {
                return null
            },
            requestFullScreen: function() {},
            exitFullScreen: function() {},
            cancelFullScreen: function() {},
            fullScreenEventName: "",
            fullScreenErrorEventName: ""
        },
        document.exitFullscreen ? (TO.supportsFullScreen = !0,
        TO.getFullScreenElement = function() {
            return document.fullscreenElement
        }
        ,
        TO.requestFullScreen = function(e) {
            return e.requestFullscreen()
        }
        ,
        TO.exitFullScreen = function() {
            document.exitFullscreen()
        }
        ,
        TO.fullScreenEventName = "fullscreenchange",
        TO.fullScreenErrorEventName = "fullscreenerror") : document.msExitFullscreen ? (TO.supportsFullScreen = !0,
        TO.getFullScreenElement = function() {
            return document.msFullscreenElement
        }
        ,
        TO.requestFullScreen = function(e) {
            return e.msRequestFullscreen()
        }
        ,
        TO.exitFullScreen = function() {
            document.msExitFullscreen()
        }
        ,
        TO.fullScreenEventName = "MSFullscreenChange",
        TO.fullScreenErrorEventName = "MSFullscreenError") : document.webkitExitFullscreen ? (TO.supportsFullScreen = !0,
        TO.getFullScreenElement = function() {
            return document.webkitFullscreenElement
        }
        ,
        TO.requestFullScreen = function(e) {
            return e.webkitRequestFullscreen()
        }
        ,
        TO.exitFullScreen = function() {
            document.webkitExitFullscreen()
        }
        ,
        TO.fullScreenEventName = "webkitfullscreenchange",
        TO.fullScreenErrorEventName = "webkitfullscreenerror") : document.webkitCancelFullScreen ? (TO.supportsFullScreen = !0,
        TO.getFullScreenElement = function() {
            return document.webkitCurrentFullScreenElement
        }
        ,
        TO.requestFullScreen = function(e) {
            return e.webkitRequestFullScreen()
        }
        ,
        TO.exitFullScreen = function() {
            document.webkitCancelFullScreen()
        }
        ,
        TO.fullScreenEventName = "webkitfullscreenchange",
        TO.fullScreenErrorEventName = "webkitfullscreenerror") : document.mozCancelFullScreen && (TO.supportsFullScreen = !0,
        TO.getFullScreenElement = function() {
            return document.mozFullScreenElement
        }
        ,
        TO.requestFullScreen = function(e) {
            return e.mozRequestFullScreen()
        }
        ,
        TO.exitFullScreen = function() {
            document.mozCancelFullScreen()
        }
        ,
        TO.fullScreenEventName = "mozfullscreenchange",
        TO.fullScreenErrorEventName = "mozfullscreenerror"),
        TO.isFullScreen = function() {
            return null !== TO.getFullScreenElement()
        }
        ,
        TO.cancelFullScreen = function() {
            SO.console.error("cancelFullScreen is deprecated. Use exitFullScreen instead."),
            TO.exitFullScreen()
        }
        ,
        SO.extend(SO, TO),
        ZO = OpenSeadragon,
        ZO.EventSource = function() {
            this.events = {}
        }
        ,
        ZO.EventSource.prototype = {
            addOnceHandler: function(t, i, e, n) {
                var r = this;
                n = n || 1;
                var o = 0
                  , s = function(e) {
                    ++o === n && r.removeHandler(t, s),
                    i(e)
                };
                this.addHandler(t, s, e)
            },
            addHandler: function(e, t, i) {
                var n = this.events[e];
                n || (this.events[e] = n = []),
                t && ZO.isFunction(t) && (n[n.length] = {
                    handler: t,
                    userData: i || null
                })
            },
            removeHandler: function(e, t) {
                var i, n = this.events[e], r = [];
                if (n && ZO.isArray(n)) {
                    for (i = 0; i < n.length; i++)
                        n[i].handler !== t && r.push(n[i]);
                    this.events[e] = r
                }
            },
            removeAllHandlers: function(e) {
                if (e)
                    this.events[e] = [];
                else
                    for (var t in this.events)
                        this.events[t] = []
            },
            getHandler: function(e) {
                var r = this.events[e];
                return r && r.length ? (r = 1 === r.length ? [r[0]] : Array.apply(null, r),
                function(e, t) {
                    var i, n = r.length;
                    for (i = 0; i < n; i++)
                        r[i] && (t.eventSource = e,
                        t.userData = r[i].userData,
                        r[i].handler(t))
                }
                ) : null
            },
            raiseEvent: function(e, t) {
                var i = this.getHandler(e);
                i && (t || (t = {}),
                i(this, t))
            }
        },
        function(m) {
            var l, o, u, e, h = [], v = {};
            function s(e, t) {
                return e.hash.toString() + t.type + t.id.toString()
            }
            function n() {
                var e, t, i, n, r, o, s = l.length, a = m.now();
                for (n = a - u,
                u = a,
                e = 0; e < s; e++)
                    (i = (t = l[e]).gPoint).direction = Math.atan2(i.currentPos.y - t.lastPos.y, i.currentPos.x - t.lastPos.x),
                    r = t.lastPos.distanceTo(i.currentPos),
                    t.lastPos = i.currentPos,
                    o = 1e3 * r / (1 + n),
                    i.speed = .75 * o + .25 * i.speed
            }
            function r(e) {
                var t, i = v[e.hash], n = i.activePointersLists.length;
                for (t = 0; t < n; t++)
                    0 < i.activePointersLists[t].captureCount && (m.removeEvent(m.MouseTracker.captureElement, "mousemove", i.mousemovecaptured, !0),
                    m.removeEvent(m.MouseTracker.captureElement, "mouseup", i.mouseupcaptured, !0),
                    m.removeEvent(m.MouseTracker.captureElement, m.MouseTracker.unprefixedPointerEvents ? "pointermove" : "MSPointerMove", i.pointermovecaptured, !0),
                    m.removeEvent(m.MouseTracker.captureElement, m.MouseTracker.unprefixedPointerEvents ? "pointerup" : "MSPointerUp", i.pointerupcaptured, !0),
                    m.removeEvent(m.MouseTracker.captureElement, "touchmove", i.touchmovecaptured, !0),
                    m.removeEvent(m.MouseTracker.captureElement, "touchend", i.touchendcaptured, !0),
                    i.activePointersLists[t].captureCount = 0);
                for (t = 0; t < n; t++)
                    i.activePointersLists.pop()
            }
            function t(e) {
                var t, i, n = v[e.hash];
                if (n.tracking) {
                    for (i = 0; i < m.MouseTracker.subscribeEvents.length; i++)
                        t = m.MouseTracker.subscribeEvents[i],
                        m.removeEvent(e.element, t, n[t], !1);
                    r(e),
                    n.tracking = !1
                }
            }
            function a(e, t) {
                var i = v[e.hash];
                if ("pointerevent" === t)
                    return {
                        upName: m.MouseTracker.unprefixedPointerEvents ? "pointerup" : "MSPointerUp",
                        upHandler: i.pointerupcaptured,
                        moveName: m.MouseTracker.unprefixedPointerEvents ? "pointermove" : "MSPointerMove",
                        moveHandler: i.pointermovecaptured
                    };
                if ("mouse" === t)
                    return {
                        upName: "mouseup",
                        upHandler: i.mouseupcaptured,
                        moveName: "mousemove",
                        moveHandler: i.mousemovecaptured
                    };
                if ("touch" === t)
                    return {
                        upName: "touchend",
                        upHandler: i.touchendcaptured,
                        moveName: "touchmove",
                        moveHandler: i.touchmovecaptured
                    };
                throw new Error("MouseTracker.getCaptureEventParams: Unknown pointer type.")
            }
            function c(e, t, i) {
                var n, r = e.getActivePointersListByType(t);
                r.captureCount += i || 1,
                1 === r.captureCount && (m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? e.element.setCapture(!0) : (n = a(e, m.MouseTracker.havePointerEvents ? "pointerevent" : t),
                Y && W(window.top) && m.addEvent(window.top, n.upName, n.upHandler, !0),
                m.addEvent(m.MouseTracker.captureElement, n.upName, n.upHandler, !0),
                m.addEvent(m.MouseTracker.captureElement, n.moveName, n.moveHandler, !0)))
            }
            function d(e, t, i) {
                var n, r = e.getActivePointersListByType(t);
                r.captureCount -= i || 1,
                0 === r.captureCount && (m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? e.element.releaseCapture() : (n = a(e, m.MouseTracker.havePointerEvents ? "pointerevent" : t),
                Y && W(window.top) && m.removeEvent(window.top, n.upName, n.upHandler, !0),
                m.removeEvent(m.MouseTracker.captureElement, n.moveName, n.moveHandler, !0),
                m.removeEvent(m.MouseTracker.captureElement, n.upName, n.upHandler, !0)))
            }
            function f(e) {
                var t;
                if (m.MouseTracker.unprefixedPointerEvents)
                    t = e.pointerType;
                else
                    switch (e.pointerType) {
                    case 2:
                        t = "touch";
                        break;
                    case 3:
                        t = "pen";
                        break;
                    case 4:
                        t = "mouse";
                        break;
                    default:
                        t = ""
                    }
                return t
            }
            function p(e) {
                return m.getMousePosition(e)
            }
            function g(e, t) {
                return _(p(e), t)
            }
            function _(e, t) {
                var i = m.getElementOffset(t);
                return e.minus(i)
            }
            function y(e, t) {
                return new m.Point((e.x + t.x) / 2,(e.y + t.y) / 2)
            }
            function w(e, t) {
                var i = {
                    target: (t = m.getEvent(t)).target || t.srcElement,
                    type: "wheel",
                    shiftKey: t.shiftKey || !1,
                    clientX: t.clientX,
                    clientY: t.clientY,
                    pageX: t.pageX ? t.pageX : t.clientX,
                    pageY: t.pageY ? t.pageY : t.clientY,
                    deltaMode: "MozMousePixelScroll" == t.type ? 0 : 1,
                    deltaX: 0,
                    deltaZ: 0
                };
                "mousewheel" == m.MouseTracker.wheelEventName ? i.deltaY = -t.wheelDelta / m.DEFAULT_SETTINGS.pixelsPerWheelLine : i.deltaY = t.detail,
                b(e, i, t)
            }
            function b(e, t, i) {
                var n;
                n = t.deltaY < 0 ? 1 : -1,
                e.scrollHandler && !1 === e.scrollHandler({
                    eventSource: e,
                    pointerType: "mouse",
                    position: g(t, e.element),
                    scroll: n,
                    shift: t.shiftKey,
                    isTouchEvent: !1,
                    originalEvent: i,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(i)
            }
            function S(e, t) {
                if (e === t)
                    return !1;
                for (; t && t !== e; )
                    t = t.parentNode;
                return t === e
            }
            function T(e, t) {
                U(e, t, [{
                    id: m.MouseTracker.mousePointerId,
                    type: "mouse",
                    isPrimary: !0,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function E(e, t) {
                X(e, t, [{
                    id: m.MouseTracker.mousePointerId,
                    type: "mouse",
                    isPrimary: !0,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function x(e) {
                return m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? 1 === e ? 0 : 2 === e ? 2 : 4 === e ? 1 : -1 : e
            }
            function O(e, t) {
                j(e, t = m.getEvent(t), [{
                    id: m.MouseTracker.mousePointerId,
                    type: "mouse",
                    isPrimary: !0,
                    currentPos: p(t),
                    currentTime: m.now()
                }], x(t.button)) && d(e, "mouse")
            }
            function P(e, t) {
                q(e, t = m.getEvent(t), [{
                    id: m.MouseTracker.mousePointerId,
                    type: "mouse",
                    isPrimary: !0,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function B(e, t, i) {
                var n, r = i.getLength(), o = [];
                if ("touch" === i.type || 0 < i.contacts) {
                    for (n = 0; n < r; n++)
                        o.push(i.getByIndex(n));
                    0 < o.length && (j(e, t, o, 0),
                    i.captureCount = 1,
                    d(e, i.type),
                    X(e, t, o))
                }
            }
            function R(e, t) {
                var i, n, r, o, s = t.changedTouches.length, a = [];
                for (i = m.now(),
                n = 0; n < s; n++)
                    a.push({
                        id: t.changedTouches[n].identifier,
                        type: "touch",
                        currentPos: p(t.changedTouches[n]),
                        currentTime: i
                    });
                for (j(e, t, a, 0) && d(e, "touch", s),
                X(e, t, a),
                n = 0; n < h.length; n++)
                    if (h[n] !== e && h[n].isTracking() && S(h[n].element, e.element)) {
                        for (o = [],
                        r = 0; r < s; r++)
                            o.push({
                                id: t.changedTouches[r].identifier,
                                type: "touch",
                                currentPos: p(t.changedTouches[r]),
                                currentTime: i
                            });
                        X(h[n], t, o)
                    }
                m.cancelEvent(t)
            }
            function N(e, t) {
                var i, n = t.changedTouches.length, r = [];
                for (i = 0; i < n; i++)
                    r.push({
                        id: t.changedTouches[i].identifier,
                        type: "touch",
                        currentPos: p(t.changedTouches[i]),
                        currentTime: m.now()
                    });
                q(e, t, r),
                m.cancelEvent(t)
            }
            function I(e, t) {
                t.currentTarget === t.relatedTarget || S(t.currentTarget, t.relatedTarget) || U(e, t, [{
                    id: t.pointerId,
                    type: f(t),
                    isPrimary: t.isPrimary,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function A(e, t) {
                t.currentTarget === t.relatedTarget || S(t.currentTarget, t.relatedTarget) || X(e, t, [{
                    id: t.pointerId,
                    type: f(t),
                    isPrimary: t.isPrimary,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function C(e, t) {
                var i;
                $(e, t, [i = {
                    id: t.pointerId,
                    type: f(t),
                    isPrimary: t.isPrimary,
                    currentPos: p(t),
                    currentTime: m.now()
                }], t.button) && (m.stopEvent(t),
                c(e, i.type)),
                (e.clickHandler || e.dblClickHandler || e.pressHandler || e.dragHandler || e.dragEndHandler || e.pinchHandler) && m.cancelEvent(t)
            }
            function D(e, t) {
                k(e, t)
            }
            function k(e, t) {
                var i;
                j(e, t, [i = {
                    id: t.pointerId,
                    type: f(t),
                    isPrimary: t.isPrimary,
                    currentPos: p(t),
                    currentTime: m.now()
                }], t.button) && d(e, i.type)
            }
            function M(e, t) {
                H(e, t)
            }
            function H(e, t) {
                q(e, t, [{
                    id: t.pointerId,
                    type: f(t),
                    isPrimary: t.isPrimary,
                    currentPos: p(t),
                    currentTime: m.now()
                }])
            }
            function z(e, t) {
                !function(e, t, i) {
                    j(e, t, i, 0),
                    X(e, t, i)
                }(e, t, [{
                    id: t.pointerId,
                    type: f(t)
                }])
            }
            function L(e, t) {
                return t.hasOwnProperty("isPrimary") || (0 === e.getLength() ? t.isPrimary = !0 : t.isPrimary = !1),
                t.speed = 0,
                t.direction = 0,
                t.contactPos = t.currentPos,
                t.contactTime = t.currentTime,
                t.lastPos = t.currentPos,
                t.lastTime = t.currentTime,
                e.add(t)
            }
            function F(e, t) {
                var i, n;
                return e.getById(t.id) ? (i = e.removeById(t.id),
                t.hasOwnProperty("isPrimary") || (n = e.getPrimary()) || (n = e.getByIndex(0)) && (n.isPrimary = !0)) : i = e.getLength(),
                i
            }
            function U(e, t, i) {
                var n, r, o, s = e.getActivePointersListByType(i[0].type), a = i.length;
                for (n = 0; n < a; n++)
                    r = i[n],
                    (o = s.getById(r.id)) ? (o.insideElement = !0,
                    o.lastPos = o.currentPos,
                    o.lastTime = o.currentTime,
                    o.currentPos = r.currentPos,
                    o.currentTime = r.currentTime,
                    r = o) : (r.captured = !1,
                    r.insideElementPressed = !1,
                    r.insideElement = !0,
                    L(s, r)),
                    e.enterHandler && !1 === e.enterHandler({
                        eventSource: e,
                        pointerType: r.type,
                        position: _(r.currentPos, e.element),
                        buttons: s.buttons,
                        pointers: e.getActivePointerCount(),
                        insideElementPressed: r.insideElementPressed,
                        buttonDownAny: 0 !== s.buttons,
                        isTouchEvent: "touch" === r.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t)
            }
            function X(e, t, i) {
                var n, r, o, s = e.getActivePointersListByType(i[0].type), a = i.length;
                for (n = 0; n < a; n++)
                    r = i[n],
                    (o = s.getById(r.id)) && (o.captured ? (o.insideElement = !1,
                    o.lastPos = o.currentPos,
                    o.lastTime = o.currentTime,
                    o.currentPos = r.currentPos,
                    o.currentTime = r.currentTime) : F(s, o),
                    r = o),
                    e.exitHandler && !1 === e.exitHandler({
                        eventSource: e,
                        pointerType: r.type,
                        position: _(r.currentPos, e.element),
                        buttons: s.buttons,
                        pointers: e.getActivePointerCount(),
                        insideElementPressed: !!o && o.insideElementPressed,
                        buttonDownAny: 0 !== s.buttons,
                        isTouchEvent: "touch" === r.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t)
            }
            function $(e, t, i, n) {
                var r, o, s, a = v[e.hash], l = e.getActivePointersListByType(i[0].type), u = i.length;
                void 0 !== t.buttons ? l.buttons = t.buttons : m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? 0 === n ? l.buttons += 1 : 1 === n ? l.buttons += 4 : 2 === n ? l.buttons += 2 : 3 === n ? l.buttons += 8 : 4 === n ? l.buttons += 16 : 5 === n && (l.buttons += 32) : 0 === n ? l.buttons |= 1 : 1 === n ? l.buttons |= 4 : 2 === n ? l.buttons |= 2 : 3 === n ? l.buttons |= 8 : 4 === n ? l.buttons |= 16 : 5 === n && (l.buttons |= 32);
                var h = e.getActivePointersListsExceptType(i[0].type);
                for (r = 0; r < h.length; r++)
                    B(e, t, h[r]);
                if (0 !== n)
                    return e.nonPrimaryPressHandler && !1 === e.nonPrimaryPressHandler({
                        eventSource: e,
                        pointerType: i[0].type,
                        position: _(i[0].currentPos, e.element),
                        button: n,
                        buttons: l.buttons,
                        isTouchEvent: "touch" === i[0].type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t),
                    !1;
                for (r = 0; r < u; r++)
                    o = i[r],
                    (s = l.getById(o.id)) ? (s.captured = !0,
                    s.insideElementPressed = !0,
                    s.insideElement = !0,
                    s.contactPos = o.currentPos,
                    s.contactTime = o.currentTime,
                    s.lastPos = s.currentPos,
                    s.lastTime = s.currentTime,
                    s.currentPos = o.currentPos,
                    s.currentTime = o.currentTime,
                    o = s) : (o.captured = !0,
                    o.insideElementPressed = !0,
                    o.insideElement = !0,
                    L(l, o)),
                    l.addContact(),
                    (e.dragHandler || e.dragEndHandler || e.pinchHandler) && m.MouseTracker.gesturePointVelocityTracker.addPoint(e, o),
                    1 === l.contacts ? e.pressHandler && !1 === e.pressHandler({
                        eventSource: e,
                        pointerType: o.type,
                        position: _(o.contactPos, e.element),
                        buttons: l.buttons,
                        isTouchEvent: "touch" === o.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t) : 2 === l.contacts && e.pinchHandler && "touch" === o.type && (a.pinchGPoints = l.asArray(),
                    a.lastPinchDist = a.currentPinchDist = a.pinchGPoints[0].currentPos.distanceTo(a.pinchGPoints[1].currentPos),
                    a.lastPinchCenter = a.currentPinchCenter = y(a.pinchGPoints[0].currentPos, a.pinchGPoints[1].currentPos));
                return !0
            }
            function j(e, t, i, n) {
                var r, o, s, a, l, u, h = v[e.hash], c = e.getActivePointersListByType(i[0].type), d = i.length, f = !1, p = !1;
                if (void 0 !== t.buttons ? c.buttons = t.buttons : m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? 0 === n ? c.buttons -= 1 : 1 === n ? c.buttons -= 4 : 2 === n ? c.buttons -= 2 : 3 === n ? c.buttons -= 8 : 4 === n ? c.buttons -= 16 : 5 === n && (c.buttons -= 32) : 0 === n ? c.buttons ^= -2 : 1 === n ? c.buttons ^= -5 : 2 === n ? c.buttons ^= -3 : 3 === n ? c.buttons ^= -9 : 4 === n ? c.buttons ^= -17 : 5 === n && (c.buttons ^= -33),
                0 !== n) {
                    e.nonPrimaryReleaseHandler && !1 === e.nonPrimaryReleaseHandler({
                        eventSource: e,
                        pointerType: i[0].type,
                        position: _(i[0].currentPos, e.element),
                        button: n,
                        buttons: c.buttons,
                        isTouchEvent: "touch" === i[0].type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t);
                    var g = e.getActivePointersListByType("mouse");
                    return B(e, t, g),
                    !1
                }
                for (s = 0; s < d; s++)
                    a = i[s],
                    (l = c.getById(a.id)) && (l.captured && (p = f = !(l.captured = !1)),
                    l.lastPos = l.currentPos,
                    l.lastTime = l.currentTime,
                    l.currentPos = a.currentPos,
                    l.currentTime = a.currentTime,
                    l.insideElement || F(c, l),
                    r = l.currentPos,
                    o = l.currentTime,
                    p ? (c.removeContact(),
                    (e.dragHandler || e.dragEndHandler || e.pinchHandler) && m.MouseTracker.gesturePointVelocityTracker.removePoint(e, l),
                    0 === c.contacts ? (e.releaseHandler && !1 === e.releaseHandler({
                        eventSource: e,
                        pointerType: l.type,
                        position: _(r, e.element),
                        buttons: c.buttons,
                        insideElementPressed: l.insideElementPressed,
                        insideElementReleased: l.insideElement,
                        isTouchEvent: "touch" === l.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t),
                    e.dragEndHandler && !l.currentPos.equals(l.contactPos) && !1 === e.dragEndHandler({
                        eventSource: e,
                        pointerType: l.type,
                        position: _(l.currentPos, e.element),
                        speed: l.speed,
                        direction: l.direction,
                        shift: t.shiftKey,
                        isTouchEvent: "touch" === l.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t),
                    (e.clickHandler || e.dblClickHandler) && l.insideElement && (u = o - l.contactTime <= e.clickTimeThreshold && l.contactPos.distanceTo(r) <= e.clickDistThreshold,
                    e.clickHandler && !1 === e.clickHandler({
                        eventSource: e,
                        pointerType: l.type,
                        position: _(l.currentPos, e.element),
                        quick: u,
                        shift: t.shiftKey,
                        isTouchEvent: "touch" === l.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t),
                    e.dblClickHandler && u && (c.clicks++,
                    1 === c.clicks ? (h.lastClickPos = r,
                    h.dblClickTimeOut = setTimeout(function() {
                        c.clicks = 0
                    }, e.dblClickTimeThreshold)) : 2 === c.clicks && (clearTimeout(h.dblClickTimeOut),
                    c.clicks = 0,
                    h.lastClickPos.distanceTo(r) <= e.dblClickDistThreshold && !1 === e.dblClickHandler({
                        eventSource: e,
                        pointerType: l.type,
                        position: _(l.currentPos, e.element),
                        shift: t.shiftKey,
                        isTouchEvent: "touch" === l.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t),
                    h.lastClickPos = null)))) : 2 === c.contacts && e.pinchHandler && "touch" === l.type && (h.pinchGPoints = c.asArray(),
                    h.lastPinchDist = h.currentPinchDist = h.pinchGPoints[0].currentPos.distanceTo(h.pinchGPoints[1].currentPos),
                    h.lastPinchCenter = h.currentPinchCenter = y(h.pinchGPoints[0].currentPos, h.pinchGPoints[1].currentPos))) : e.releaseHandler && !1 === e.releaseHandler({
                        eventSource: e,
                        pointerType: l.type,
                        position: _(r, e.element),
                        buttons: c.buttons,
                        insideElementPressed: l.insideElementPressed,
                        insideElementReleased: l.insideElement,
                        isTouchEvent: "touch" === l.type,
                        originalEvent: t,
                        preventDefaultAction: !1,
                        userData: e.userData
                    }) && m.cancelEvent(t));
                return f
            }
            function q(e, t, i) {
                var n, r, o, s, a, l = v[e.hash], u = e.getActivePointersListByType(i[0].type), h = i.length;
                for (void 0 !== t.buttons && (u.buttons = t.buttons),
                n = 0; n < h; n++)
                    r = i[n],
                    (o = u.getById(r.id)) ? (r.hasOwnProperty("isPrimary") && (o.isPrimary = r.isPrimary),
                    o.lastPos = o.currentPos,
                    o.lastTime = o.currentTime,
                    o.currentPos = r.currentPos,
                    o.currentTime = r.currentTime) : (r.captured = !1,
                    r.insideElementPressed = !1,
                    r.insideElement = !0,
                    L(u, r));
                e.stopHandler && "mouse" === i[0].type && (clearTimeout(e.stopTimeOut),
                e.stopTimeOut = setTimeout(function() {
                    !function(e, t, i) {
                        e.stopHandler && e.stopHandler({
                            eventSource: e,
                            pointerType: i,
                            position: g(t, e.element),
                            buttons: e.getActivePointersListByType(i).buttons,
                            isTouchEvent: "touch" === i,
                            originalEvent: t,
                            preventDefaultAction: !1,
                            userData: e.userData
                        })
                    }(e, t, i[0].type)
                }, e.stopDelay)),
                0 === u.contacts ? e.moveHandler && !1 === e.moveHandler({
                    eventSource: e,
                    pointerType: i[0].type,
                    position: _(i[0].currentPos, e.element),
                    buttons: u.buttons,
                    isTouchEvent: "touch" === i[0].type,
                    originalEvent: t,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(t) : 1 === u.contacts ? (e.moveHandler && (o = u.asArray()[0],
                !1 === e.moveHandler({
                    eventSource: e,
                    pointerType: o.type,
                    position: _(o.currentPos, e.element),
                    buttons: u.buttons,
                    isTouchEvent: "touch" === o.type,
                    originalEvent: t,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(t)),
                e.dragHandler && (a = (o = u.asArray()[0]).currentPos.minus(o.lastPos),
                !1 === e.dragHandler({
                    eventSource: e,
                    pointerType: o.type,
                    position: _(o.currentPos, e.element),
                    buttons: u.buttons,
                    delta: a,
                    speed: o.speed,
                    direction: o.direction,
                    shift: t.shiftKey,
                    isTouchEvent: "touch" === o.type,
                    originalEvent: t,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(t))) : 2 === u.contacts && (e.moveHandler && (s = u.asArray(),
                !1 === e.moveHandler({
                    eventSource: e,
                    pointerType: s[0].type,
                    position: _(y(s[0].currentPos, s[1].currentPos), e.element),
                    buttons: u.buttons,
                    isTouchEvent: "touch" === s[0].type,
                    originalEvent: t,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(t)),
                e.pinchHandler && "touch" === i[0].type && (a = l.pinchGPoints[0].currentPos.distanceTo(l.pinchGPoints[1].currentPos)) != l.currentPinchDist && (l.lastPinchDist = l.currentPinchDist,
                l.currentPinchDist = a,
                l.lastPinchCenter = l.currentPinchCenter,
                l.currentPinchCenter = y(l.pinchGPoints[0].currentPos, l.pinchGPoints[1].currentPos),
                !1 === e.pinchHandler({
                    eventSource: e,
                    pointerType: "touch",
                    gesturePoints: l.pinchGPoints,
                    lastCenter: _(l.lastPinchCenter, e.element),
                    center: _(l.currentPinchCenter, e.element),
                    lastDistance: l.lastPinchDist,
                    distance: l.currentPinchDist,
                    shift: t.shiftKey,
                    originalEvent: t,
                    preventDefaultAction: !1,
                    userData: e.userData
                }) && m.cancelEvent(t)))
            }
            m.MouseTracker = function(e) {
                h.push(this);
                var t = arguments;
                m.isPlainObject(e) || (e = {
                    element: t[0],
                    clickTimeThreshold: t[1],
                    clickDistThreshold: t[2]
                }),
                this.hash = Math.random(),
                this.element = m.getElement(e.element),
                this.clickTimeThreshold = e.clickTimeThreshold || m.DEFAULT_SETTINGS.clickTimeThreshold,
                this.clickDistThreshold = e.clickDistThreshold || m.DEFAULT_SETTINGS.clickDistThreshold,
                this.dblClickTimeThreshold = e.dblClickTimeThreshold || m.DEFAULT_SETTINGS.dblClickTimeThreshold,
                this.dblClickDistThreshold = e.dblClickDistThreshold || m.DEFAULT_SETTINGS.dblClickDistThreshold,
                this.userData = e.userData || null,
                this.stopDelay = e.stopDelay || 50,
                this.enterHandler = e.enterHandler || null,
                this.exitHandler = e.exitHandler || null,
                this.pressHandler = e.pressHandler || null,
                this.nonPrimaryPressHandler = e.nonPrimaryPressHandler || null,
                this.releaseHandler = e.releaseHandler || null,
                this.nonPrimaryReleaseHandler = e.nonPrimaryReleaseHandler || null,
                this.moveHandler = e.moveHandler || null,
                this.scrollHandler = e.scrollHandler || null,
                this.clickHandler = e.clickHandler || null,
                this.dblClickHandler = e.dblClickHandler || null,
                this.dragHandler = e.dragHandler || null,
                this.dragEndHandler = e.dragEndHandler || null,
                this.pinchHandler = e.pinchHandler || null,
                this.stopHandler = e.stopHandler || null,
                this.keyDownHandler = e.keyDownHandler || null,
                this.keyUpHandler = e.keyUpHandler || null,
                this.keyHandler = e.keyHandler || null,
                this.focusHandler = e.focusHandler || null,
                this.blurHandler = e.blurHandler || null;
                var i = this;
                v[this.hash] = {
                    click: function(e) {
                        !function(e, t) {
                            e.clickHandler && m.cancelEvent(t)
                        }(i, e)
                    },
                    dblclick: function(e) {
                        !function(e, t) {
                            e.dblClickHandler && m.cancelEvent(t)
                        }(i, e)
                    },
                    keydown: function(e) {
                        !function(e, t) {
                            e.keyDownHandler && (t = m.getEvent(t),
                            e.keyDownHandler({
                                eventSource: e,
                                keyCode: t.keyCode ? t.keyCode : t.charCode,
                                ctrl: t.ctrlKey,
                                shift: t.shiftKey,
                                alt: t.altKey,
                                meta: t.metaKey,
                                originalEvent: t,
                                preventDefaultAction: !1,
                                userData: e.userData
                            }) || m.cancelEvent(t))
                        }(i, e)
                    },
                    keyup: function(e) {
                        !function(e, t) {
                            e.keyUpHandler && (t = m.getEvent(t),
                            e.keyUpHandler({
                                eventSource: e,
                                keyCode: t.keyCode ? t.keyCode : t.charCode,
                                ctrl: t.ctrlKey,
                                shift: t.shiftKey,
                                alt: t.altKey,
                                meta: t.metaKey,
                                originalEvent: t,
                                preventDefaultAction: !1,
                                userData: e.userData
                            }) || m.cancelEvent(t))
                        }(i, e)
                    },
                    keypress: function(e) {
                        !function(e, t) {
                            e.keyHandler && (t = m.getEvent(t),
                            e.keyHandler({
                                eventSource: e,
                                keyCode: t.keyCode ? t.keyCode : t.charCode,
                                ctrl: t.ctrlKey,
                                shift: t.shiftKey,
                                alt: t.altKey,
                                meta: t.metaKey,
                                originalEvent: t,
                                preventDefaultAction: !1,
                                userData: e.userData
                            }) || m.cancelEvent(t))
                        }(i, e)
                    },
                    focus: function(e) {
                        !function(e, t) {
                            e.focusHandler && (t = m.getEvent(t),
                            !1 === e.focusHandler({
                                eventSource: e,
                                originalEvent: t,
                                preventDefaultAction: !1,
                                userData: e.userData
                            }) && m.cancelEvent(t))
                        }(i, e)
                    },
                    blur: function(e) {
                        !function(e, t) {
                            e.blurHandler && (t = m.getEvent(t),
                            !1 === e.blurHandler({
                                eventSource: e,
                                originalEvent: t,
                                preventDefaultAction: !1,
                                userData: e.userData
                            }) && m.cancelEvent(t))
                        }(i, e)
                    },
                    wheel: function(e) {
                        !function(e, t) {
                            b(e, t, t)
                        }(i, e)
                    },
                    mousewheel: function(e) {
                        w(i, e)
                    },
                    DOMMouseScroll: function(e) {
                        w(i, e)
                    },
                    MozMousePixelScroll: function(e) {
                        w(i, e)
                    },
                    mouseenter: function(e) {
                        !function(e, t) {
                            t = m.getEvent(t),
                            T(e, t)
                        }(i, e)
                    },
                    mouseleave: function(e) {
                        !function(e, t) {
                            t = m.getEvent(t),
                            E(e, t)
                        }(i, e)
                    },
                    mouseover: function(e) {
                        !function(e, t) {
                            if ((t = m.getEvent(t)).currentTarget === t.relatedTarget || S(t.currentTarget, t.relatedTarget))
                                return;
                            T(e, t)
                        }(i, e)
                    },
                    mouseout: function(e) {
                        !function(e, t) {
                            if ((t = m.getEvent(t)).currentTarget === t.relatedTarget || S(t.currentTarget, t.relatedTarget))
                                return;
                            E(e, t)
                        }(i, e)
                    },
                    mousedown: function(e) {
                        !function(e, t) {
                            var i;
                            t = m.getEvent(t),
                            i = {
                                id: m.MouseTracker.mousePointerId,
                                type: "mouse",
                                isPrimary: !0,
                                currentPos: p(t),
                                currentTime: m.now()
                            },
                            $(e, t, [i], x(t.button)) && (m.stopEvent(t),
                            c(e, "mouse"));
                            (e.clickHandler || e.dblClickHandler || e.pressHandler || e.dragHandler || e.dragEndHandler) && m.cancelEvent(t)
                        }(i, e)
                    },
                    mouseup: function(e) {
                        !function(e, t) {
                            O(e, t)
                        }(i, e)
                    },
                    mouseupcaptured: function(e) {
                        !function(e, t) {
                            O(e, t),
                            m.stopEvent(t)
                        }(i, e)
                    },
                    mousemove: function(e) {
                        !function(e, t) {
                            P(e, t)
                        }(i, e)
                    },
                    mousemovecaptured: function(e) {
                        !function(e, t) {
                            P(e, t),
                            m.stopEvent(t)
                        }(i, e)
                    },
                    touchstart: function(e) {
                        !function(e, t) {
                            var i, n, r, o, s = t.changedTouches.length, a = [], l = e.getActivePointersListByType("touch");
                            i = m.now(),
                            l.getLength() > t.touches.length - s && (m.console.warn("Tracked touch contact count doesn't match event.touches.length. Removing all tracked touch pointers."),
                            B(e, t, l));
                            for (n = 0; n < s; n++)
                                a.push({
                                    id: t.changedTouches[n].identifier,
                                    type: "touch",
                                    currentPos: p(t.changedTouches[n]),
                                    currentTime: i
                                });
                            for (U(e, t, a),
                            n = 0; n < h.length; n++)
                                if (h[n] !== e && h[n].isTracking() && S(h[n].element, e.element)) {
                                    for (o = [],
                                    r = 0; r < s; r++)
                                        o.push({
                                            id: t.changedTouches[r].identifier,
                                            type: "touch",
                                            currentPos: p(t.changedTouches[r]),
                                            currentTime: i
                                        });
                                    U(h[n], t, o)
                                }
                            $(e, t, a, 0) && (m.stopEvent(t),
                            c(e, "touch", s));
                            m.cancelEvent(t)
                        }(i, e)
                    },
                    touchend: function(e) {
                        !function(e, t) {
                            R(e, t)
                        }(i, e)
                    },
                    touchendcaptured: function(e) {
                        !function(e, t) {
                            R(e, t),
                            m.stopEvent(t)
                        }(i, e)
                    },
                    touchmove: function(e) {
                        !function(e, t) {
                            N(e, t)
                        }(i, e)
                    },
                    touchmovecaptured: function(e) {
                        !function(e, t) {
                            N(e, t),
                            m.stopEvent(t)
                        }(i, e)
                    },
                    touchcancel: function(e) {
                        !function(e, t) {
                            var i = e.getActivePointersListByType("touch");
                            B(e, t, i)
                        }(i, e)
                    },
                    gesturestart: function(e) {
                        !function(e, t) {
                            t.stopPropagation(),
                            t.preventDefault()
                        }(0, e)
                    },
                    gesturechange: function(e) {
                        !function(e, t) {
                            t.stopPropagation(),
                            t.preventDefault()
                        }(0, e)
                    },
                    pointerover: function(e) {
                        I(i, e)
                    },
                    MSPointerOver: function(e) {
                        I(i, e)
                    },
                    pointerout: function(e) {
                        A(i, e)
                    },
                    MSPointerOut: function(e) {
                        A(i, e)
                    },
                    pointerdown: function(e) {
                        C(i, e)
                    },
                    MSPointerDown: function(e) {
                        C(i, e)
                    },
                    pointerup: function(e) {
                        D(i, e)
                    },
                    MSPointerUp: function(e) {
                        D(i, e)
                    },
                    pointermove: function(e) {
                        M(i, e)
                    },
                    MSPointerMove: function(e) {
                        M(i, e)
                    },
                    pointercancel: function(e) {
                        z(i, e)
                    },
                    MSPointerCancel: function(e) {
                        z(i, e)
                    },
                    pointerupcaptured: function(e) {
                        !function(e, t) {
                            e.getActivePointersListByType(f(t)).getById(t.pointerId) && k(e, t);
                            m.stopEvent(t)
                        }(i, e)
                    },
                    pointermovecaptured: function(e) {
                        !function(e, t) {
                            e.getActivePointersListByType(f(t)).getById(t.pointerId) && H(e, t);
                            m.stopEvent(t)
                        }(i, e)
                    },
                    tracking: !1,
                    activePointersLists: [],
                    lastClickPos: null,
                    dblClickTimeOut: null,
                    pinchGPoints: [],
                    lastPinchDist: 0,
                    currentPinchDist: 0,
                    lastPinchCenter: null,
                    currentPinchCenter: null
                },
                e.startDisabled || this.setTracking(!0)
            }
            ,
            m.MouseTracker.prototype = {
                destroy: function() {
                    var e;
                    for (t(this),
                    this.element = null,
                    e = 0; e < h.length; e++)
                        if (h[e] === this) {
                            h.splice(e, 1);
                            break
                        }
                    v[this.hash] = null,
                    delete v[this.hash]
                },
                isTracking: function() {
                    return v[this.hash].tracking
                },
                setTracking: function(e) {
                    return e ? function(e) {
                        var t, i, n = v[e.hash];
                        if (!n.tracking) {
                            for (i = 0; i < m.MouseTracker.subscribeEvents.length; i++)
                                t = m.MouseTracker.subscribeEvents[i],
                                m.addEvent(e.element, t, n[t], !1);
                            r(e),
                            n.tracking = !0
                        }
                    }(this) : t(this),
                    this
                },
                getActivePointersListsExceptType: function(e) {
                    for (var t = v[this.hash], i = [], n = 0; n < t.activePointersLists.length; ++n)
                        t.activePointersLists[n].type !== e && i.push(t.activePointersLists[n]);
                    return i
                },
                getActivePointersListByType: function(e) {
                    var t, i, n = v[this.hash], r = n.activePointersLists.length;
                    for (t = 0; t < r; t++)
                        if (n.activePointersLists[t].type === e)
                            return n.activePointersLists[t];
                    return i = new m.MouseTracker.GesturePointList(e),
                    n.activePointersLists.push(i),
                    i
                },
                getActivePointerCount: function() {
                    var e, t = v[this.hash], i = t.activePointersLists.length, n = 0;
                    for (e = 0; e < i; e++)
                        n += t.activePointersLists[e].getLength();
                    return n
                },
                enterHandler: function() {},
                exitHandler: function() {},
                pressHandler: function() {},
                nonPrimaryPressHandler: function() {},
                releaseHandler: function() {},
                nonPrimaryReleaseHandler: function() {},
                moveHandler: function() {},
                scrollHandler: function() {},
                clickHandler: function() {},
                dblClickHandler: function() {},
                dragHandler: function() {},
                dragEndHandler: function() {},
                pinchHandler: function() {},
                stopHandler: function() {},
                keyDownHandler: function() {},
                keyUpHandler: function() {},
                keyHandler: function() {},
                focusHandler: function() {},
                blurHandler: function() {}
            },
            m.MouseTracker.resetAllMouseTrackers = function() {
                for (var e = 0; e < h.length; e++)
                    h[e].isTracking() && (h[e].setTracking(!1),
                    h[e].setTracking(!0))
            }
            ,
            m.MouseTracker.gesturePointVelocityTracker = (l = [],
            u = o = 0,
            {
                addPoint: function(e, t) {
                    var i = s(e, t);
                    l.push({
                        guid: i,
                        gPoint: t,
                        lastPos: t.currentPos
                    }),
                    1 === l.length && (u = m.now(),
                    o = window.setInterval(n, 50))
                },
                removePoint: function(e, t) {
                    var i, n = s(e, t), r = l.length;
                    for (i = 0; i < r; i++)
                        if (l[i].guid === n) {
                            l.splice(i, 1),
                            0 == --r && window.clearInterval(o);
                            break
                        }
                }
            }),
            m.MouseTracker.captureElement = document,
            m.MouseTracker.wheelEventName = m.Browser.vendor == m.BROWSERS.IE && 8 < m.Browser.version || "onwheel"in document.createElement("div") ? "wheel" : void 0 !== document.onmousewheel ? "mousewheel" : "DOMMouseScroll",
            m.MouseTracker.supportsMouseCapture = (e = document.createElement("div"),
            m.isFunction(e.setCapture) && m.isFunction(e.releaseCapture)),
            m.MouseTracker.subscribeEvents = ["click", "dblclick", "keydown", "keyup", "keypress", "focus", "blur", m.MouseTracker.wheelEventName],
            "DOMMouseScroll" == m.MouseTracker.wheelEventName && m.MouseTracker.subscribeEvents.push("MozMousePixelScroll"),
            window.PointerEvent && (window.navigator.pointerEnabled || m.Browser.vendor !== m.BROWSERS.IE) ? (m.MouseTracker.havePointerEvents = !0,
            m.MouseTracker.subscribeEvents.push("pointerover", "pointerout", "pointerdown", "pointerup", "pointermove", "pointercancel"),
            m.MouseTracker.unprefixedPointerEvents = !0,
            navigator.maxTouchPoints ? m.MouseTracker.maxTouchPoints = navigator.maxTouchPoints : m.MouseTracker.maxTouchPoints = 0,
            m.MouseTracker.haveMouseEnter = !1) : window.MSPointerEvent && window.navigator.msPointerEnabled ? (m.MouseTracker.havePointerEvents = !0,
            m.MouseTracker.subscribeEvents.push("MSPointerOver", "MSPointerOut", "MSPointerDown", "MSPointerUp", "MSPointerMove", "MSPointerCancel"),
            m.MouseTracker.unprefixedPointerEvents = !1,
            navigator.msMaxTouchPoints ? m.MouseTracker.maxTouchPoints = navigator.msMaxTouchPoints : m.MouseTracker.maxTouchPoints = 0,
            m.MouseTracker.haveMouseEnter = !1) : (m.MouseTracker.havePointerEvents = !1,
            m.Browser.vendor === m.BROWSERS.IE && m.Browser.version < 9 ? (m.MouseTracker.subscribeEvents.push("mouseenter", "mouseleave"),
            m.MouseTracker.haveMouseEnter = !0) : (m.MouseTracker.subscribeEvents.push("mouseover", "mouseout"),
            m.MouseTracker.haveMouseEnter = !1),
            m.MouseTracker.subscribeEvents.push("mousedown", "mouseup", "mousemove"),
            "ontouchstart"in window && m.MouseTracker.subscribeEvents.push("touchstart", "touchend", "touchmove", "touchcancel"),
            "ongesturestart"in window && m.MouseTracker.subscribeEvents.push("gesturestart", "gesturechange"),
            m.MouseTracker.mousePointerId = "legacy-mouse",
            m.MouseTracker.maxTouchPoints = 10),
            m.MouseTracker.GesturePointList = function(e) {
                this._gPoints = [],
                this.type = e,
                this.buttons = 0,
                this.contacts = 0,
                this.clicks = 0,
                this.captureCount = 0
            }
            ,
            m.MouseTracker.GesturePointList.prototype = {
                getLength: function() {
                    return this._gPoints.length
                },
                asArray: function() {
                    return this._gPoints
                },
                add: function(e) {
                    return this._gPoints.push(e)
                },
                removeById: function(e) {
                    var t, i = this._gPoints.length;
                    for (t = 0; t < i; t++)
                        if (this._gPoints[t].id === e) {
                            this._gPoints.splice(t, 1);
                            break
                        }
                    return this._gPoints.length
                },
                getByIndex: function(e) {
                    return e < this._gPoints.length ? this._gPoints[e] : null
                },
                getById: function(e) {
                    var t, i = this._gPoints.length;
                    for (t = 0; t < i; t++)
                        if (this._gPoints[t].id === e)
                            return this._gPoints[t];
                    return null
                },
                getPrimary: function(e) {
                    var t, i = this._gPoints.length;
                    for (t = 0; t < i; t++)
                        if (this._gPoints[t].isPrimary)
                            return this._gPoints[t];
                    return null
                },
                addContact: function() {
                    ++this.contacts,
                    1 < this.contacts && ("mouse" === this.type || "pen" === this.type) && (this.contacts = 1)
                },
                removeContact: function() {
                    --this.contacts,
                    this.contacts < 0 && (this.contacts = 0)
                }
            };
            var Y = function() {
                try {
                    return window.self !== window.top
                } catch (e) {
                    return !0
                }
            }();
            function W(e) {
                try {
                    return e.addEventListener && e.removeEventListener
                } catch (e) {
                    return !1
                }
            }
        }(OpenSeadragon),
        hX = OpenSeadragon,
        hX.ControlAnchor = {
            NONE: 0,
            TOP_LEFT: 1,
            TOP_RIGHT: 2,
            BOTTOM_RIGHT: 3,
            BOTTOM_LEFT: 4,
            ABSOLUTE: 5
        },
        hX.Control = function(e, t, i) {
            var n = e.parentNode;
            "number" == typeof t && (hX.console.error("Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; please use an options object instead.  Support for this deprecated variant is scheduled for removal in December 2013"),
            t = {
                anchor: t
            }),
            t.attachToViewer = void 0 === t.attachToViewer || t.attachToViewer,
            this.autoFade = void 0 === t.autoFade || t.autoFade,
            this.element = e,
            this.anchor = t.anchor,
            this.container = i,
            this.anchor == hX.ControlAnchor.ABSOLUTE ? (this.wrapper = hX.makeNeutralElement("div"),
            this.wrapper.style.position = "absolute",
            this.wrapper.style.top = "number" == typeof t.top ? t.top + "px" : t.top,
            this.wrapper.style.left = "number" == typeof t.left ? t.left + "px" : t.left,
            this.wrapper.style.height = "number" == typeof t.height ? t.height + "px" : t.height,
            this.wrapper.style.width = "number" == typeof t.width ? t.width + "px" : t.width,
            this.wrapper.style.margin = "0px",
            this.wrapper.style.padding = "0px",
            this.element.style.position = "relative",
            this.element.style.top = "0px",
            this.element.style.left = "0px",
            this.element.style.height = "100%",
            this.element.style.width = "100%") : (this.wrapper = hX.makeNeutralElement("div"),
            this.wrapper.style.display = "inline-block",
            this.anchor == hX.ControlAnchor.NONE && (this.wrapper.style.width = this.wrapper.style.height = "100%")),
            this.wrapper.appendChild(this.element),
            t.attachToViewer ? this.anchor == hX.ControlAnchor.TOP_RIGHT || this.anchor == hX.ControlAnchor.BOTTOM_RIGHT ? this.container.insertBefore(this.wrapper, this.container.firstChild) : this.container.appendChild(this.wrapper) : n.appendChild(this.wrapper)
        }
        ,
        hX.Control.prototype = {
            destroy: function() {
                this.wrapper.removeChild(this.element),
                this.container.removeChild(this.wrapper)
            },
            isVisible: function() {
                return "none" != this.wrapper.style.display
            },
            setVisible: function(e) {
                this.wrapper.style.display = e ? this.anchor == hX.ControlAnchor.ABSOLUTE ? "block" : "inline-block" : "none"
            },
            setOpacity: function(e) {
                this.element[hX.SIGNAL] && hX.Browser.vendor == hX.BROWSERS.IE ? hX.setElementOpacity(this.element, e, !0) : hX.setElementOpacity(this.wrapper, e, !0)
            }
        },
        oX = OpenSeadragon,
        oX.ControlDock = function(e) {
            var t, i, n = ["topleft", "topright", "bottomright", "bottomleft"];
            for (oX.extend(!0, this, {
                id: "controldock-" + oX.now() + "-" + Math.floor(1e6 * Math.random()),
                container: oX.makeNeutralElement("div"),
                controls: []
            }, e),
            this.container.onsubmit = function() {
                return !1
            }
            ,
            this.element && (this.element = oX.getElement(this.element),
            this.element.appendChild(this.container),
            this.element.style.position = "relative",
            this.container.style.width = "100%",
            this.container.style.height = "100%"),
            i = 0; i < n.length; i++)
                t = n[i],
                this.controls[t] = oX.makeNeutralElement("div"),
                this.controls[t].style.position = "absolute",
                t.match("left") && (this.controls[t].style.left = "0px"),
                t.match("right") && (this.controls[t].style.right = "0px"),
                t.match("top") && (this.controls[t].style.top = "0px"),
                t.match("bottom") && (this.controls[t].style.bottom = "0px");
            this.container.appendChild(this.controls.topleft),
            this.container.appendChild(this.controls.topright),
            this.container.appendChild(this.controls.bottomright),
            this.container.appendChild(this.controls.bottomleft)
        }
        ,
        oX.ControlDock.prototype = {
            addControl: function(e, t) {
                var i = null;
                if (!(0 <= pX(this, e = oX.getElement(e)))) {
                    switch (t.anchor) {
                    case oX.ControlAnchor.TOP_RIGHT:
                        i = this.controls.topright,
                        e.style.position = "relative",
                        e.style.paddingRight = "0px",
                        e.style.paddingTop = "0px";
                        break;
                    case oX.ControlAnchor.BOTTOM_RIGHT:
                        i = this.controls.bottomright,
                        e.style.position = "relative",
                        e.style.paddingRight = "0px",
                        e.style.paddingBottom = "0px";
                        break;
                    case oX.ControlAnchor.BOTTOM_LEFT:
                        i = this.controls.bottomleft,
                        e.style.position = "relative",
                        e.style.paddingLeft = "0px",
                        e.style.paddingBottom = "0px";
                        break;
                    case oX.ControlAnchor.TOP_LEFT:
                        i = this.controls.topleft,
                        e.style.position = "relative",
                        e.style.paddingLeft = "0px",
                        e.style.paddingTop = "0px";
                        break;
                    case oX.ControlAnchor.ABSOLUTE:
                        i = this.container,
                        e.style.margin = "0px",
                        e.style.padding = "0px";
                        break;
                    default:
                    case oX.ControlAnchor.NONE:
                        i = this.container,
                        e.style.margin = "0px",
                        e.style.padding = "0px"
                    }
                    this.controls.push(new oX.Control(e,t,i)),
                    e.style.display = "inline-block"
                }
            },
            removeControl: function(e) {
                var t = pX(this, e = oX.getElement(e));
                return 0 <= t && (this.controls[t].destroy(),
                this.controls.splice(t, 1)),
                this
            },
            clearControls: function() {
                for (; 0 < this.controls.length; )
                    this.controls.pop().destroy();
                return this
            },
            areControlsEnabled: function() {
                var e;
                for (e = this.controls.length - 1; 0 <= e; e--)
                    if (this.controls[e].isVisible())
                        return !0;
                return !1
            },
            setControlsEnabled: function(e) {
                var t;
                for (t = this.controls.length - 1; 0 <= t; t--)
                    this.controls[t].setVisible(e);
                return this
            }
        },
        GX = OpenSeadragon,
        GX.Placement = GX.freezeObject({
            CENTER: 0,
            TOP_LEFT: 1,
            TOP: 2,
            TOP_RIGHT: 3,
            RIGHT: 4,
            BOTTOM_RIGHT: 5,
            BOTTOM: 6,
            BOTTOM_LEFT: 7,
            LEFT: 8,
            properties: {
                0: {
                    isLeft: !1,
                    isHorizontallyCentered: !0,
                    isRight: !1,
                    isTop: !1,
                    isVerticallyCentered: !0,
                    isBottom: !1
                },
                1: {
                    isLeft: !0,
                    isHorizontallyCentered: !1,
                    isRight: !1,
                    isTop: !0,
                    isVerticallyCentered: !1,
                    isBottom: !1
                },
                2: {
                    isLeft: !1,
                    isHorizontallyCentered: !0,
                    isRight: !1,
                    isTop: !0,
                    isVerticallyCentered: !1,
                    isBottom: !1
                },
                3: {
                    isLeft: !1,
                    isHorizontallyCentered: !1,
                    isRight: !0,
                    isTop: !0,
                    isVerticallyCentered: !1,
                    isBottom: !1
                },
                4: {
                    isLeft: !1,
                    isHorizontallyCentered: !1,
                    isRight: !0,
                    isTop: !1,
                    isVerticallyCentered: !0,
                    isBottom: !1
                },
                5: {
                    isLeft: !1,
                    isHorizontallyCentered: !1,
                    isRight: !0,
                    isTop: !1,
                    isVerticallyCentered: !1,
                    isBottom: !0
                },
                6: {
                    isLeft: !1,
                    isHorizontallyCentered: !0,
                    isRight: !1,
                    isTop: !1,
                    isVerticallyCentered: !1,
                    isBottom: !0
                },
                7: {
                    isLeft: !0,
                    isHorizontallyCentered: !1,
                    isRight: !1,
                    isTop: !1,
                    isVerticallyCentered: !1,
                    isBottom: !0
                },
                8: {
                    isLeft: !0,
                    isHorizontallyCentered: !1,
                    isRight: !1,
                    isTop: !1,
                    isVerticallyCentered: !0,
                    isBottom: !1
                }
            }
        }),
        HX = OpenSeadragon,
        IX = {},
        JX = 1,
        HX.Viewer = function(e) {
            var t, i, n, r = arguments, o = this;
            if (HX.isPlainObject(e) || (e = {
                id: r[0],
                xmlPath: 1 < r.length ? r[1] : void 0,
                prefixUrl: 2 < r.length ? r[2] : void 0,
                controls: 3 < r.length ? r[3] : void 0,
                overlays: 4 < r.length ? r[4] : void 0
            }),
            e.config && (HX.extend(!0, e, e.config),
            delete e.config),
            HX.extend(!0, this, {
                id: e.id,
                hash: e.hash || JX++,
                initialPage: 0,
                element: null,
                container: null,
                canvas: null,
                overlays: [],
                overlaysContainer: null,
                previousBody: [],
                customControls: [],
                source: null,
                drawer: null,
                world: null,
                viewport: null,
                navigator: null,
                collectionViewport: null,
                collectionDrawer: null,
                navImages: null,
                buttons: null,
                profiler: null
            }, HX.DEFAULT_SETTINGS, e),
            void 0 === this.hash)
                throw new Error("A hash must be defined, either by specifying options.id or options.hash.");
            for (void 0 !== IX[this.hash] && HX.console.warn("Hash " + this.hash + " has already been used."),
            IX[this.hash] = {
                fsBoundsDelta: new HX.Point(1,1),
                prevContainerSize: null,
                animating: !1,
                forceRedraw: !1,
                mouseInside: !1,
                group: null,
                zooming: !1,
                zoomFactor: null,
                lastZoomTime: null,
                fullPage: !1,
                onfullscreenchange: null
            },
            this._sequenceIndex = 0,
            this._firstOpen = !0,
            this._updateRequestId = null,
            this._loadQueue = [],
            this.currentOverlays = [],
            this._lastScrollTime = HX.now(),
            HX.EventSource.call(this),
            this.addHandler("open-failed", function(e) {
                var t = HX.getString("Errors.OpenFailed", e.eventSource, e.message);
                o._showMessage(t)
            }),
            HX.ControlDock.call(this, e),
            this.xmlPath && (this.tileSources = [this.xmlPath]),
            this.element = this.element || document.getElementById(this.id),
            this.canvas = HX.makeNeutralElement("div"),
            this.canvas.className = "openseadragon-canvas",
            (i = this.canvas.style).width = "100%",
            i.height = "100%",
            i.overflow = "hidden",
            i.position = "absolute",
            i.top = "0px",
            i.left = "0px",
            HX.setElementTouchActionNone(this.canvas),
            "" !== e.tabIndex && (this.canvas.tabIndex = void 0 === e.tabIndex ? 0 : e.tabIndex),
            this.container.className = "openseadragon-container",
            (n = this.container.style).width = "100%",
            n.height = "100%",
            n.position = "relative",
            n.overflow = "hidden",
            n.left = "0px",
            n.top = "0px",
            n.textAlign = "left",
            this.container.insertBefore(this.canvas, this.container.firstChild),
            this.element.appendChild(this.container),
            this.bodyWidth = document.body.style.width,
            this.bodyHeight = document.body.style.height,
            this.bodyOverflow = document.body.style.overflow,
            this.docOverflow = document.documentElement.style.overflow,
            this.innerTracker = new HX.MouseTracker({
                element: this.canvas,
                startDisabled: !this.mouseNavEnabled,
                clickTimeThreshold: this.clickTimeThreshold,
                clickDistThreshold: this.clickDistThreshold,
                dblClickTimeThreshold: this.dblClickTimeThreshold,
                dblClickDistThreshold: this.dblClickDistThreshold,
                keyDownHandler: HX.delegate(this, VX),
                keyHandler: HX.delegate(this, WX),
                clickHandler: HX.delegate(this, XX),
                dblClickHandler: HX.delegate(this, YX),
                dragHandler: HX.delegate(this, ZX),
                dragEndHandler: HX.delegate(this, $X),
                enterHandler: HX.delegate(this, _X),
                exitHandler: HX.delegate(this, aY),
                pressHandler: HX.delegate(this, bY),
                releaseHandler: HX.delegate(this, cY),
                nonPrimaryPressHandler: HX.delegate(this, dY),
                nonPrimaryReleaseHandler: HX.delegate(this, eY),
                scrollHandler: HX.delegate(this, gY),
                pinchHandler: HX.delegate(this, fY)
            }),
            this.outerTracker = new HX.MouseTracker({
                element: this.container,
                startDisabled: !this.mouseNavEnabled,
                clickTimeThreshold: this.clickTimeThreshold,
                clickDistThreshold: this.clickDistThreshold,
                dblClickTimeThreshold: this.dblClickTimeThreshold,
                dblClickDistThreshold: this.dblClickDistThreshold,
                enterHandler: HX.delegate(this, hY),
                exitHandler: HX.delegate(this, iY)
            }),
            this.toolbar && (this.toolbar = new HX.ControlDock({
                element: this.toolbar
            })),
            this.bindStandardControls(),
            IX[this.hash].prevContainerSize = KX(this.container),
            this.world = new HX.World({
                viewer: this
            }),
            this.world.addHandler("add-item", function(e) {
                o.source = o.world.getItemAt(0).source,
                IX[o.hash].forceRedraw = !0,
                o._updateRequestId || (o._updateRequestId = OX(o, jY))
            }),
            this.world.addHandler("remove-item", function(e) {
                o.world.getItemCount() ? o.source = o.world.getItemAt(0).source : o.source = null,
                IX[o.hash].forceRedraw = !0
            }),
            this.world.addHandler("metrics-change", function(e) {
                o.viewport && o.viewport._setContentBounds(o.world.getHomeBounds(), o.world.getContentFactor())
            }),
            this.world.addHandler("item-index-change", function(e) {
                o.source = o.world.getItemAt(0).source
            }),
            this.viewport = new HX.Viewport({
                containerSize: IX[this.hash].prevContainerSize,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime,
                minZoomImageRatio: this.minZoomImageRatio,
                maxZoomPixelRatio: this.maxZoomPixelRatio,
                visibilityRatio: this.visibilityRatio,
                wrapHorizontal: this.wrapHorizontal,
                wrapVertical: this.wrapVertical,
                defaultZoomLevel: this.defaultZoomLevel,
                minZoomLevel: this.minZoomLevel,
                maxZoomLevel: this.maxZoomLevel,
                viewer: this,
                degrees: this.degrees,
                flipped: this.flipped,
                navigatorRotate: this.navigatorRotate,
                homeFillsViewer: this.homeFillsViewer,
                margins: this.viewportMargins
            }),
            this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor()),
            this.imageLoader = new HX.ImageLoader({
                jobLimit: this.imageLoaderLimit,
                timeout: e.timeout
            }),
            this.tileCache = new HX.TileCache({
                maxImageCacheCount: this.maxImageCacheCount
            }),
            this.drawer = new HX.Drawer({
                viewer: this,
                viewport: this.viewport,
                element: this.canvas,
                debugGridColor: this.debugGridColor
            }),
            this.overlaysContainer = HX.makeNeutralElement("div"),
            this.canvas.appendChild(this.overlaysContainer),
            this.drawer.canRotate() || (this.rotateLeft && (t = this.buttons.buttons.indexOf(this.rotateLeft),
            this.buttons.buttons.splice(t, 1),
            this.buttons.element.removeChild(this.rotateLeft.element)),
            this.rotateRight && (t = this.buttons.buttons.indexOf(this.rotateRight),
            this.buttons.buttons.splice(t, 1),
            this.buttons.element.removeChild(this.rotateRight.element))),
            this.showNavigator && (this.navigator = new HX.Navigator({
                id: this.navigatorId,
                position: this.navigatorPosition,
                sizeRatio: this.navigatorSizeRatio,
                maintainSizeRatio: this.navigatorMaintainSizeRatio,
                top: this.navigatorTop,
                left: this.navigatorLeft,
                width: this.navigatorWidth,
                height: this.navigatorHeight,
                autoResize: this.navigatorAutoResize,
                autoFade: this.navigatorAutoFade,
                prefixUrl: this.prefixUrl,
                viewer: this,
                navigatorRotate: this.navigatorRotate,
                background: this.navigatorBackground,
                opacity: this.navigatorOpacity,
                borderColor: this.navigatorBorderColor,
                displayRegionColor: this.navigatorDisplayRegionColor,
                crossOriginPolicy: this.crossOriginPolicy
            })),
            this.sequenceMode && this.bindSequenceControls(),
            this.tileSources && this.open(this.tileSources),
            t = 0; t < this.customControls.length; t++)
                this.addControl(this.customControls[t].id, {
                    anchor: this.customControls[t].anchor
                });
            HX.requestAnimationFrame(function() {
                QX(o)
            }),
            void 0 === this.imageSmoothingEnabled || this.imageSmoothingEnabled || this.drawer.setImageSmoothingEnabled(this.imageSmoothingEnabled)
        }
        ,
        HX.extend(HX.Viewer.prototype, HX.EventSource.prototype, HX.ControlDock.prototype, {
            isOpen: function() {
                return !!this.world.getItemCount()
            },
            openDzi: function(e) {
                return HX.console.error("[Viewer.openDzi] this function is deprecated; use Viewer.open() instead."),
                this.open(e)
            },
            openTileSource: function(e) {
                return HX.console.error("[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead."),
                this.open(e)
            },
            open: function(i, e) {
                var r = this;
                if (this.close(),
                i) {
                    if (this.sequenceMode && HX.isArray(i))
                        return this.referenceStrip && (this.referenceStrip.destroy(),
                        this.referenceStrip = null),
                        void 0 === e || isNaN(e) || (this.initialPage = e),
                        this.tileSources = i,
                        this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage)),
                        this.tileSources.length && (this.open(this.tileSources[this._sequenceIndex]),
                        this.showReferenceStrip && this.addReferenceStrip()),
                        void this._updateSequenceButtons(this._sequenceIndex);
                    if (HX.isArray(i) || (i = [i]),
                    i.length) {
                        function o() {
                            if (a + l === n)
                                if (a) {
                                    !r._firstOpen && r.preserveViewport || (r.viewport.goHome(!0),
                                    r.viewport.update()),
                                    r._firstOpen = !1;
                                    var e = i[0];
                                    if (e.tileSource && (e = e.tileSource),
                                    r.overlays && !r.preserveOverlays)
                                        for (var t = 0; t < r.overlays.length; t++)
                                            r.currentOverlays[t] = MX(r, r.overlays[t]);
                                    r._drawOverlays(),
                                    r._opening = !1,
                                    r.raiseEvent("open", {
                                        source: e
                                    })
                                } else
                                    r._opening = !1,
                                    r.raiseEvent("open-failed", s)
                        }
                        function t(i) {
                            HX.isPlainObject(i) && i.tileSource || (i = {
                                tileSource: i
                            }),
                            void 0 !== i.index && (HX.console.error("[Viewer.open] setting indexes here is not supported; use addTiledImage instead"),
                            delete i.index),
                            void 0 === i.collectionImmediately && (i.collectionImmediately = !0);
                            var n = i.success;
                            i.success = function(e) {
                                if (a++,
                                i.tileSource.overlays)
                                    for (var t = 0; t < i.tileSource.overlays.length; t++)
                                        r.addOverlay(i.tileSource.overlays[t]);
                                n && n(e),
                                o()
                            }
                            ;
                            var t = i.error;
                            i.error = function(e) {
                                l++,
                                s || (s = e),
                                t && t(e),
                                o()
                            }
                            ,
                            r.addTiledImage(i)
                        }
                        this._opening = !0;
                        for (var s, n = i.length, a = 0, l = 0, u = 0; u < i.length; u++)
                            t(i[u]);
                        return this
                    }
                }
            },
            close: function() {
                return IX[this.hash] && (this._opening = !1,
                this.navigator && this.navigator.close(),
                this.preserveOverlays || (this.clearOverlays(),
                this.overlaysContainer.innerHTML = ""),
                IX[this.hash].animating = !1,
                this.world.removeAll(),
                this.imageLoader.clear(),
                this.raiseEvent("close")),
                this
            },
            destroy: function() {
                if (IX[this.hash]) {
                    if (this.close(),
                    this.clearOverlays(),
                    this.overlaysContainer.innerHTML = "",
                    this.referenceStrip && (this.referenceStrip.destroy(),
                    this.referenceStrip = null),
                    null !== this._updateRequestId && (HX.cancelAnimationFrame(this._updateRequestId),
                    this._updateRequestId = null),
                    this.drawer && this.drawer.destroy(),
                    this.removeAllHandlers(),
                    this.element)
                        for (; this.element.firstChild; )
                            this.element.removeChild(this.element.firstChild);
                    this.innerTracker && this.innerTracker.destroy(),
                    this.outerTracker && this.outerTracker.destroy(),
                    IX[this.hash] = null,
                    delete IX[this.hash],
                    this.canvas = null,
                    this.container = null,
                    this.element = null
                }
            },
            isMouseNavEnabled: function() {
                return this.innerTracker.isTracking()
            },
            setMouseNavEnabled: function(e) {
                return this.innerTracker.setTracking(e),
                this.outerTracker.setTracking(e),
                this.raiseEvent("mouse-enabled", {
                    enabled: e
                }),
                this
            },
            areControlsEnabled: function() {
                var e, t = this.controls.length;
                for (e = 0; e < this.controls.length; e++)
                    t = t && this.controls[e].isVisible();
                return t
            },
            setControlsEnabled: function(e) {
                return e ? SX(this) : QX(this),
                this.raiseEvent("controls-enabled", {
                    enabled: e
                }),
                this
            },
            setDebugMode: function(e) {
                for (var t = 0; t < this.world.getItemCount(); t++)
                    this.world.getItemAt(t).debugMode = e;
                this.debugMode = e,
                this.forceRedraw()
            },
            isFullPage: function() {
                return IX[this.hash].fullPage
            },
            setFullPage: function(e) {
                var t, i, n = document.body, r = n.style, o = document.documentElement.style, s = this;
                if (e == this.isFullPage())
                    return this;
                var a = {
                    fullPage: e,
                    preventDefaultAction: !1
                };
                if (this.raiseEvent("pre-full-page", a),
                a.preventDefaultAction)
                    return this;
                if (e) {
                    for (this.elementSize = HX.getElementSize(this.element),
                    this.pageScroll = HX.getPageScroll(),
                    this.elementMargin = this.element.style.margin,
                    this.element.style.margin = "0",
                    this.elementPadding = this.element.style.padding,
                    this.element.style.padding = "0",
                    this.bodyMargin = r.margin,
                    this.docMargin = o.margin,
                    r.margin = "0",
                    o.margin = "0",
                    this.bodyPadding = r.padding,
                    this.docPadding = o.padding,
                    r.padding = "0",
                    o.padding = "0",
                    this.bodyWidth = r.width,
                    this.docWidth = o.width,
                    r.width = "100%",
                    o.width = "100%",
                    this.bodyHeight = r.height,
                    this.docHeight = o.height,
                    r.height = "100%",
                    o.height = "100%",
                    this.previousBody = [],
                    IX[this.hash].prevElementParent = this.element.parentNode,
                    IX[this.hash].prevNextSibling = this.element.nextSibling,
                    IX[this.hash].prevElementWidth = this.element.style.width,
                    IX[this.hash].prevElementHeight = this.element.style.height,
                    t = n.childNodes.length,
                    i = 0; i < t; i++)
                        this.previousBody.push(n.childNodes[0]),
                        n.removeChild(n.childNodes[0]);
                    this.toolbar && this.toolbar.element && (this.toolbar.parentNode = this.toolbar.element.parentNode,
                    this.toolbar.nextSibling = this.toolbar.element.nextSibling,
                    n.appendChild(this.toolbar.element),
                    HX.addClass(this.toolbar.element, "fullpage")),
                    HX.addClass(this.element, "fullpage"),
                    n.appendChild(this.element),
                    this.element.style.height = HX.getWindowSize().y + "px",
                    this.element.style.width = HX.getWindowSize().x + "px",
                    this.toolbar && this.toolbar.element && (this.element.style.height = HX.getElementSize(this.element).y - HX.getElementSize(this.toolbar.element).y + "px"),
                    IX[this.hash].fullPage = !0,
                    HX.delegate(this, hY)({})
                } else {
                    for (this.element.style.margin = this.elementMargin,
                    this.element.style.padding = this.elementPadding,
                    r.margin = this.bodyMargin,
                    o.margin = this.docMargin,
                    r.padding = this.bodyPadding,
                    o.padding = this.docPadding,
                    r.width = this.bodyWidth,
                    o.width = this.docWidth,
                    r.height = this.bodyHeight,
                    o.height = this.docHeight,
                    n.removeChild(this.element),
                    t = this.previousBody.length,
                    i = 0; i < t; i++)
                        n.appendChild(this.previousBody.shift());
                    HX.removeClass(this.element, "fullpage"),
                    IX[this.hash].prevElementParent.insertBefore(this.element, IX[this.hash].prevNextSibling),
                    this.toolbar && this.toolbar.element && (n.removeChild(this.toolbar.element),
                    HX.removeClass(this.toolbar.element, "fullpage"),
                    this.toolbar.parentNode.insertBefore(this.toolbar.element, this.toolbar.nextSibling),
                    delete this.toolbar.parentNode,
                    delete this.toolbar.nextSibling),
                    this.element.style.width = IX[this.hash].prevElementWidth,
                    this.element.style.height = IX[this.hash].prevElementHeight;
                    var l = 0
                      , u = function() {
                        HX.setPageScroll(s.pageScroll);
                        var e = HX.getPageScroll();
                        ++l < 10 && (e.x !== s.pageScroll.x || e.y !== s.pageScroll.y) && HX.requestAnimationFrame(u)
                    };
                    HX.requestAnimationFrame(u),
                    IX[this.hash].fullPage = !1,
                    HX.delegate(this, iY)({})
                }
                return this.navigator && this.viewport && this.navigator.update(this.viewport),
                this.raiseEvent("full-page", {
                    fullPage: e
                }),
                this
            },
            setFullScreen: function(e) {
                var t = this;
                if (!HX.supportsFullScreen)
                    return this.setFullPage(e);
                if (HX.isFullScreen() === e)
                    return this;
                var i = {
                    fullScreen: e,
                    preventDefaultAction: !1
                };
                if (this.raiseEvent("pre-full-screen", i),
                i.preventDefaultAction)
                    return this;
                if (e) {
                    if (this.setFullPage(!0),
                    !this.isFullPage())
                        return this;
                    this.fullPageStyleWidth = this.element.style.width,
                    this.fullPageStyleHeight = this.element.style.height,
                    this.element.style.width = "100%",
                    this.element.style.height = "100%";
                    var n = function() {
                        var e = HX.isFullScreen();
                        e || (HX.removeEvent(document, HX.fullScreenEventName, n),
                        HX.removeEvent(document, HX.fullScreenErrorEventName, n),
                        t.setFullPage(!1),
                        t.isFullPage() && (t.element.style.width = t.fullPageStyleWidth,
                        t.element.style.height = t.fullPageStyleHeight)),
                        t.navigator && t.viewport && setTimeout(function() {
                            t.navigator.update(t.viewport)
                        }),
                        t.raiseEvent("full-screen", {
                            fullScreen: e
                        })
                    };
                    HX.addEvent(document, HX.fullScreenEventName, n),
                    HX.addEvent(document, HX.fullScreenErrorEventName, n),
                    HX.requestFullScreen(document.body)
                } else
                    HX.exitFullScreen();
                return this
            },
            isVisible: function() {
                return "hidden" != this.container.style.visibility
            },
            setVisible: function(e) {
                return this.container.style.visibility = e ? "" : "hidden",
                this.raiseEvent("visible", {
                    visible: e
                }),
                this
            },
            addTiledImage: function(i) {
                HX.console.assert(i, "[Viewer.addTiledImage] options is required"),
                HX.console.assert(i.tileSource, "[Viewer.addTiledImage] options.tileSource is required"),
                HX.console.assert(!i.replace || -1 < i.index && i.index < this.world.getItemCount(), "[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world");
                var r = this;
                i.replace && (i.replaceItem = r.world.getItemAt(i.index)),
                this._hideMessage(),
                void 0 === i.placeholderFillStyle && (i.placeholderFillStyle = this.placeholderFillStyle),
                void 0 === i.opacity && (i.opacity = this.opacity),
                void 0 === i.preload && (i.preload = this.preload),
                void 0 === i.compositeOperation && (i.compositeOperation = this.compositeOperation),
                void 0 === i.crossOriginPolicy && (i.crossOriginPolicy = void 0 !== i.tileSource.crossOriginPolicy ? i.tileSource.crossOriginPolicy : this.crossOriginPolicy),
                void 0 === i.ajaxWithCredentials && (i.ajaxWithCredentials = this.ajaxWithCredentials),
                void 0 === i.loadTilesWithAjax && (i.loadTilesWithAjax = this.loadTilesWithAjax),
                void 0 === i.ajaxHeaders || null === i.ajaxHeaders ? i.ajaxHeaders = this.ajaxHeaders : HX.isPlainObject(i.ajaxHeaders) && HX.isPlainObject(this.ajaxHeaders) && (i.ajaxHeaders = HX.extend({}, this.ajaxHeaders, i.ajaxHeaders));
                var n = {
                    options: i
                };
                function t(e) {
                    for (var t = 0; t < r._loadQueue.length; t++)
                        if (r._loadQueue[t] === n) {
                            r._loadQueue.splice(t, 1);
                            break
                        }
                    0 === r._loadQueue.length && o(n),
                    r.raiseEvent("add-item-failed", e),
                    i.error && i.error(e)
                }
                function o(e) {
                    r.collectionMode && (r.world.arrange({
                        immediately: e.options.collectionImmediately,
                        rows: r.collectionRows,
                        columns: r.collectionColumns,
                        layout: r.collectionLayout,
                        tileSize: r.collectionTileSize,
                        tileMargin: r.collectionTileMargin
                    }),
                    r.world.setAutoRefigureSizes(!0))
                }
                function s() {
                    for (var e, t, i; r._loadQueue.length && (e = r._loadQueue[0]).tileSource; ) {
                        if (r._loadQueue.splice(0, 1),
                        e.options.replace) {
                            var n = r.world.getIndexOfItem(e.options.replaceItem);
                            -1 != n && (e.options.index = n),
                            r.world.removeItem(e.options.replaceItem)
                        }
                        t = new HX.TiledImage({
                            viewer: r,
                            source: e.tileSource,
                            viewport: r.viewport,
                            drawer: r.drawer,
                            tileCache: r.tileCache,
                            imageLoader: r.imageLoader,
                            x: e.options.x,
                            y: e.options.y,
                            width: e.options.width,
                            height: e.options.height,
                            fitBounds: e.options.fitBounds,
                            fitBoundsPlacement: e.options.fitBoundsPlacement,
                            clip: e.options.clip,
                            placeholderFillStyle: e.options.placeholderFillStyle,
                            opacity: e.options.opacity,
                            preload: e.options.preload,
                            degrees: e.options.degrees,
                            compositeOperation: e.options.compositeOperation,
                            springStiffness: r.springStiffness,
                            animationTime: r.animationTime,
                            minZoomImageRatio: r.minZoomImageRatio,
                            wrapHorizontal: r.wrapHorizontal,
                            wrapVertical: r.wrapVertical,
                            immediateRender: r.immediateRender,
                            blendTime: r.blendTime,
                            alwaysBlend: r.alwaysBlend,
                            minPixelRatio: r.minPixelRatio,
                            smoothTileEdgesMinZoom: r.smoothTileEdgesMinZoom,
                            iOSDevice: r.iOSDevice,
                            crossOriginPolicy: e.options.crossOriginPolicy,
                            ajaxWithCredentials: e.options.ajaxWithCredentials,
                            loadTilesWithAjax: e.options.loadTilesWithAjax,
                            ajaxHeaders: e.options.ajaxHeaders,
                            debugMode: r.debugMode
                        }),
                        r.collectionMode && r.world.setAutoRefigureSizes(!1),
                        r.world.addItem(t, {
                            index: e.options.index
                        }),
                        0 === r._loadQueue.length && o(e),
                        1 !== r.world.getItemCount() || r.preserveViewport || r.viewport.goHome(!0),
                        r.navigator && (i = HX.extend({}, e.options, {
                            replace: !1,
                            originalTiledImage: t,
                            tileSource: e.tileSource
                        }),
                        r.navigator.addTiledImage(i)),
                        e.options.success && e.options.success({
                            item: t
                        })
                    }
                }
                HX.isArray(i.tileSource) ? setTimeout(function() {
                    t({
                        message: "[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.",
                        source: i.tileSource,
                        options: i
                    })
                }) : (this._loadQueue.push(n),
                function(i, n, r, o, s) {
                    var a = i;
                    if ("string" == HX.type(n))
                        if (n.match(/^\s*<.*>\s*$/))
                            n = HX.parseXml(n);
                        else if (n.match(/^\s*[\{\[].*[\}\]]\s*$/))
                            try {
                                var e = HX.parseJSON(n);
                                n = e
                            } catch (e) {}
                    function l(e, t) {
                        e.ready ? o(e) : (e.addHandler("ready", function() {
                            o(e)
                        }),
                        e.addHandler("open-failed", function(e) {
                            s({
                                message: e.message,
                                source: t
                            })
                        }))
                    }
                    setTimeout(function() {
                        if ("string" == HX.type(n))
                            (n = new HX.TileSource({
                                url: n,
                                crossOriginPolicy: void 0 !== r.crossOriginPolicy ? r.crossOriginPolicy : i.crossOriginPolicy,
                                ajaxWithCredentials: i.ajaxWithCredentials,
                                ajaxHeaders: i.ajaxHeaders,
                                useCanvas: i.useCanvas,
                                success: function(e) {
                                    o(e.tileSource)
                                }
                            })).addHandler("open-failed", function(e) {
                                s(e)
                            });
                        else if (HX.isPlainObject(n) || n.nodeType)
                            if (void 0 !== n.crossOriginPolicy || void 0 === r.crossOriginPolicy && void 0 === i.crossOriginPolicy || (n.crossOriginPolicy = void 0 !== r.crossOriginPolicy ? r.crossOriginPolicy : i.crossOriginPolicy),
                            void 0 === n.ajaxWithCredentials && (n.ajaxWithCredentials = i.ajaxWithCredentials),
                            void 0 === n.useCanvas && (n.useCanvas = i.useCanvas),
                            HX.isFunction(n.getTileUrl)) {
                                var e = new HX.TileSource(n);
                                e.getTileUrl = n.getTileUrl,
                                o(e)
                            } else {
                                var t = HX.TileSource.determineType(a, n);
                                if (!t)
                                    return void s({
                                        message: "Unable to load TileSource",
                                        source: n
                                    });
                                l(new t(t.prototype.configure.apply(a, [n])), n)
                            }
                        else
                            l(n, n)
                    })
                }(this, i.tileSource, i, function(e) {
                    n.tileSource = e,
                    s()
                }, function(e) {
                    e.options = i,
                    t(e),
                    s()
                }))
            },
            addSimpleImage: function(e) {
                HX.console.assert(e, "[Viewer.addSimpleImage] options is required"),
                HX.console.assert(e.url, "[Viewer.addSimpleImage] options.url is required");
                var t = HX.extend({}, e, {
                    tileSource: {
                        type: "image",
                        url: e.url
                    }
                });
                delete t.url,
                this.addTiledImage(t)
            },
            addLayer: function(t) {
                var i = this;
                HX.console.error("[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.");
                var e = HX.extend({}, t, {
                    success: function(e) {
                        i.raiseEvent("add-layer", {
                            options: t,
                            drawer: e.item
                        })
                    },
                    error: function(e) {
                        i.raiseEvent("add-layer-failed", e)
                    }
                });
                return this.addTiledImage(e),
                this
            },
            getLayerAtLevel: function(e) {
                return HX.console.error("[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead."),
                this.world.getItemAt(e)
            },
            getLevelOfLayer: function(e) {
                return HX.console.error("[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead."),
                this.world.getIndexOfItem(e)
            },
            getLayersCount: function() {
                return HX.console.error("[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead."),
                this.world.getItemCount()
            },
            setLayerLevel: function(e, t) {
                return HX.console.error("[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead."),
                this.world.setItemIndex(e, t)
            },
            removeLayer: function(e) {
                return HX.console.error("[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead."),
                this.world.removeItem(e)
            },
            forceRedraw: function() {
                return IX[this.hash].forceRedraw = !0,
                this
            },
            bindSequenceControls: function() {
                var e = HX.delegate(this, TX)
                  , t = HX.delegate(this, UX)
                  , i = HX.delegate(this, BY)
                  , n = HX.delegate(this, AY)
                  , r = this.navImages
                  , o = !0;
                return this.showSequenceControl && ((this.previousButton || this.nextButton) && (o = !1),
                this.previousButton = new HX.Button({
                    element: this.previousButton ? HX.getElement(this.previousButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.PreviousPage"),
                    srcRest: mY(this.prefixUrl, r.previous.REST),
                    srcGroup: mY(this.prefixUrl, r.previous.GROUP),
                    srcHover: mY(this.prefixUrl, r.previous.HOVER),
                    srcDown: mY(this.prefixUrl, r.previous.DOWN),
                    onRelease: n,
                    onFocus: e,
                    onBlur: t
                }),
                this.nextButton = new HX.Button({
                    element: this.nextButton ? HX.getElement(this.nextButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.NextPage"),
                    srcRest: mY(this.prefixUrl, r.next.REST),
                    srcGroup: mY(this.prefixUrl, r.next.GROUP),
                    srcHover: mY(this.prefixUrl, r.next.HOVER),
                    srcDown: mY(this.prefixUrl, r.next.DOWN),
                    onRelease: i,
                    onFocus: e,
                    onBlur: t
                }),
                this.navPrevNextWrap || this.previousButton.disable(),
                this.tileSources && this.tileSources.length || this.nextButton.disable(),
                o && (this.paging = new HX.ButtonGroup({
                    buttons: [this.previousButton, this.nextButton],
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold
                }),
                this.pagingControl = this.paging.element,
                this.toolbar ? this.toolbar.addControl(this.pagingControl, {
                    anchor: HX.ControlAnchor.BOTTOM_RIGHT
                }) : this.addControl(this.pagingControl, {
                    anchor: this.sequenceControlAnchor || HX.ControlAnchor.TOP_LEFT
                }))),
                this
            },
            bindStandardControls: function() {
                var e = HX.delegate(this, nY)
                  , t = HX.delegate(this, pY)
                  , i = HX.delegate(this, sY)
                  , n = HX.delegate(this, oY)
                  , r = HX.delegate(this, tY)
                  , o = HX.delegate(this, vY)
                  , s = HX.delegate(this, wY)
                  , a = HX.delegate(this, xY)
                  , l = HX.delegate(this, yY)
                  , u = HX.delegate(this, zY)
                  , h = HX.delegate(this, TX)
                  , c = HX.delegate(this, UX)
                  , d = this.navImages
                  , f = []
                  , p = !0;
                return this.showNavigationControl && ((this.zoomInButton || this.zoomOutButton || this.homeButton || this.fullPageButton || this.rotateLeftButton || this.rotateRightButton || this.flipButton) && (p = !1),
                this.showZoomControl && (f.push(this.zoomInButton = new HX.Button({
                    element: this.zoomInButton ? HX.getElement(this.zoomInButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.ZoomIn"),
                    srcRest: mY(this.prefixUrl, d.zoomIn.REST),
                    srcGroup: mY(this.prefixUrl, d.zoomIn.GROUP),
                    srcHover: mY(this.prefixUrl, d.zoomIn.HOVER),
                    srcDown: mY(this.prefixUrl, d.zoomIn.DOWN),
                    onPress: e,
                    onRelease: t,
                    onClick: i,
                    onEnter: e,
                    onExit: t,
                    onFocus: h,
                    onBlur: c
                })),
                f.push(this.zoomOutButton = new HX.Button({
                    element: this.zoomOutButton ? HX.getElement(this.zoomOutButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.ZoomOut"),
                    srcRest: mY(this.prefixUrl, d.zoomOut.REST),
                    srcGroup: mY(this.prefixUrl, d.zoomOut.GROUP),
                    srcHover: mY(this.prefixUrl, d.zoomOut.HOVER),
                    srcDown: mY(this.prefixUrl, d.zoomOut.DOWN),
                    onPress: n,
                    onRelease: t,
                    onClick: r,
                    onEnter: n,
                    onExit: t,
                    onFocus: h,
                    onBlur: c
                }))),
                this.showHomeControl && f.push(this.homeButton = new HX.Button({
                    element: this.homeButton ? HX.getElement(this.homeButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.Home"),
                    srcRest: mY(this.prefixUrl, d.home.REST),
                    srcGroup: mY(this.prefixUrl, d.home.GROUP),
                    srcHover: mY(this.prefixUrl, d.home.HOVER),
                    srcDown: mY(this.prefixUrl, d.home.DOWN),
                    onRelease: o,
                    onFocus: h,
                    onBlur: c
                })),
                this.showFullPageControl && f.push(this.fullPageButton = new HX.Button({
                    element: this.fullPageButton ? HX.getElement(this.fullPageButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.FullPage"),
                    srcRest: mY(this.prefixUrl, d.fullpage.REST),
                    srcGroup: mY(this.prefixUrl, d.fullpage.GROUP),
                    srcHover: mY(this.prefixUrl, d.fullpage.HOVER),
                    srcDown: mY(this.prefixUrl, d.fullpage.DOWN),
                    onRelease: s,
                    onFocus: h,
                    onBlur: c
                })),
                this.showRotationControl && (f.push(this.rotateLeftButton = new HX.Button({
                    element: this.rotateLeftButton ? HX.getElement(this.rotateLeftButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.RotateLeft"),
                    srcRest: mY(this.prefixUrl, d.rotateleft.REST),
                    srcGroup: mY(this.prefixUrl, d.rotateleft.GROUP),
                    srcHover: mY(this.prefixUrl, d.rotateleft.HOVER),
                    srcDown: mY(this.prefixUrl, d.rotateleft.DOWN),
                    onRelease: a,
                    onFocus: h,
                    onBlur: c
                })),
                f.push(this.rotateRightButton = new HX.Button({
                    element: this.rotateRightButton ? HX.getElement(this.rotateRightButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.RotateRight"),
                    srcRest: mY(this.prefixUrl, d.rotateright.REST),
                    srcGroup: mY(this.prefixUrl, d.rotateright.GROUP),
                    srcHover: mY(this.prefixUrl, d.rotateright.HOVER),
                    srcDown: mY(this.prefixUrl, d.rotateright.DOWN),
                    onRelease: l,
                    onFocus: h,
                    onBlur: c
                }))),
                this.showFlipControl && f.push(this.flipButton = new HX.Button({
                    element: this.flipButton ? HX.getElement(this.flipButton) : null,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    tooltip: HX.getString("Tooltips.Flip"),
                    srcRest: mY(this.prefixUrl, d.flip.REST),
                    srcGroup: mY(this.prefixUrl, d.flip.GROUP),
                    srcHover: mY(this.prefixUrl, d.flip.HOVER),
                    srcDown: mY(this.prefixUrl, d.flip.DOWN),
                    onRelease: u,
                    onFocus: h,
                    onBlur: c
                })),
                p && (this.buttons = new HX.ButtonGroup({
                    buttons: f,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold
                }),
                this.navControl = this.buttons.element,
                this.addHandler("open", HX.delegate(this, uY)),
                this.toolbar ? this.toolbar.addControl(this.navControl, {
                    anchor: this.navigationControlAnchor || HX.ControlAnchor.TOP_LEFT
                }) : this.addControl(this.navControl, {
                    anchor: this.navigationControlAnchor || HX.ControlAnchor.TOP_LEFT
                }))),
                this
            },
            currentPage: function() {
                return this._sequenceIndex
            },
            goToPage: function(e) {
                return this.tileSources && 0 <= e && e < this.tileSources.length && (this._sequenceIndex = e,
                this._updateSequenceButtons(e),
                this.open(this.tileSources[e]),
                this.referenceStrip && this.referenceStrip.setFocus(e),
                this.raiseEvent("page", {
                    page: e
                })),
                this
            },
            addOverlay: function(e, t, i, n) {
                var r;
                if (r = HX.isPlainObject(e) ? e : {
                    element: e,
                    location: t,
                    placement: i,
                    onDraw: n
                },
                e = HX.getElement(r.element),
                0 <= NX(this.currentOverlays, e))
                    return this;
                var o = MX(this, r);
                return this.currentOverlays.push(o),
                o.drawHTML(this.overlaysContainer, this.viewport),
                this.raiseEvent("add-overlay", {
                    element: e,
                    location: r.location,
                    placement: r.placement
                }),
                this
            },
            updateOverlay: function(e, t, i) {
                var n;
                return e = HX.getElement(e),
                0 <= (n = NX(this.currentOverlays, e)) && (this.currentOverlays[n].update(t, i),
                IX[this.hash].forceRedraw = !0,
                this.raiseEvent("update-overlay", {
                    element: e,
                    location: t,
                    placement: i
                })),
                this
            },
            removeOverlay: function(e) {
                var t;
                return e = HX.getElement(e),
                0 <= (t = NX(this.currentOverlays, e)) && (this.currentOverlays[t].destroy(),
                this.currentOverlays.splice(t, 1),
                IX[this.hash].forceRedraw = !0,
                this.raiseEvent("remove-overlay", {
                    element: e
                })),
                this
            },
            clearOverlays: function() {
                for (; 0 < this.currentOverlays.length; )
                    this.currentOverlays.pop().destroy();
                return IX[this.hash].forceRedraw = !0,
                this.raiseEvent("clear-overlay", {}),
                this
            },
            getOverlayById: function(e) {
                var t;
                return e = HX.getElement(e),
                0 <= (t = NX(this.currentOverlays, e)) ? this.currentOverlays[t] : null
            },
            _updateSequenceButtons: function(e) {
                this.nextButton && (this.tileSources && this.tileSources.length - 1 !== e ? this.nextButton.enable() : this.navPrevNextWrap || this.nextButton.disable()),
                this.previousButton && (0 < e ? this.previousButton.enable() : this.navPrevNextWrap || this.previousButton.disable())
            },
            _showMessage: function(e) {
                this._hideMessage();
                var t = HX.makeNeutralElement("div");
                t.appendChild(document.createTextNode(e)),
                this.messageDiv = HX.makeCenteredNode(t),
                HX.addClass(this.messageDiv, "openseadragon-message"),
                this.container.appendChild(this.messageDiv)
            },
            _hideMessage: function() {
                var e = this.messageDiv;
                e && (e.parentNode.removeChild(e),
                delete this.messageDiv)
            },
            gestureSettingsByDeviceType: function(e) {
                switch (e) {
                case "mouse":
                    return this.gestureSettingsMouse;
                case "touch":
                    return this.gestureSettingsTouch;
                case "pen":
                    return this.gestureSettingsPen;
                default:
                    return this.gestureSettingsUnknown
                }
            },
            _drawOverlays: function() {
                var e, t = this.currentOverlays.length;
                for (e = 0; e < t; e++)
                    this.currentOverlays[e].drawHTML(this.overlaysContainer, this.viewport)
            },
            _cancelPendingImages: function() {
                this._loadQueue = []
            },
            removeReferenceStrip: function() {
                this.showReferenceStrip = !1,
                this.referenceStrip && (this.referenceStrip.destroy(),
                this.referenceStrip = null)
            },
            addReferenceStrip: function() {
                if (this.showReferenceStrip = !0,
                this.sequenceMode) {
                    if (this.referenceStrip)
                        return;
                    this.tileSources.length && 1 < this.tileSources.length && (this.referenceStrip = new HX.ReferenceStrip({
                        id: this.referenceStripElement,
                        position: this.referenceStripPosition,
                        sizeRatio: this.referenceStripSizeRatio,
                        scroll: this.referenceStripScroll,
                        height: this.referenceStripHeight,
                        width: this.referenceStripWidth,
                        tileSources: this.tileSources,
                        prefixUrl: this.prefixUrl,
                        viewer: this
                    }),
                    this.referenceStrip.setFocus(this._sequenceIndex))
                } else
                    HX.console.warn('Attempting to display a reference strip while "sequenceMode" is off.')
            }
        }),
        T0 = OpenSeadragon,
        T0.Navigator = function(e) {
            var t, i, n, r, o, s, a = e.viewer, l = this;
            function u(e) {
                Y0(l.displayRegionContainer, e),
                Y0(l.displayRegion, -e),
                l.viewport.setRotation(e)
            }
            e.id ? (this.element = document.getElementById(e.id),
            e.controlOptions = {
                anchor: T0.ControlAnchor.NONE,
                attachToViewer: !1,
                autoFade: !1
            }) : (e.id = "navigator-" + T0.now(),
            this.element = T0.makeNeutralElement("div"),
            e.controlOptions = {
                anchor: T0.ControlAnchor.TOP_RIGHT,
                attachToViewer: !0,
                autoFade: e.autoFade
            },
            e.position && ("BOTTOM_RIGHT" == e.position ? e.controlOptions.anchor = T0.ControlAnchor.BOTTOM_RIGHT : "BOTTOM_LEFT" == e.position ? e.controlOptions.anchor = T0.ControlAnchor.BOTTOM_LEFT : "TOP_RIGHT" == e.position ? e.controlOptions.anchor = T0.ControlAnchor.TOP_RIGHT : "TOP_LEFT" == e.position ? e.controlOptions.anchor = T0.ControlAnchor.TOP_LEFT : "ABSOLUTE" == e.position && (e.controlOptions.anchor = T0.ControlAnchor.ABSOLUTE,
            e.controlOptions.top = e.top,
            e.controlOptions.left = e.left,
            e.controlOptions.height = e.height,
            e.controlOptions.width = e.width))),
            this.element.id = e.id,
            this.element.className += " navigator",
            (e = T0.extend(!0, {
                sizeRatio: T0.DEFAULT_SETTINGS.navigatorSizeRatio
            }, e, {
                element: this.element,
                tabIndex: -1,
                showNavigator: !1,
                mouseNavEnabled: !1,
                showNavigationControl: !1,
                showSequenceControl: !1,
                immediateRender: !0,
                blendTime: 0,
                animationTime: 0,
                autoResize: e.autoResize,
                minZoomImageRatio: 1,
                background: e.background,
                opacity: e.opacity,
                borderColor: e.borderColor,
                displayRegionColor: e.displayRegionColor
            })).minPixelRatio = this.minPixelRatio = a.minPixelRatio,
            T0.setElementTouchActionNone(this.element),
            this.borderWidth = 2,
            this.fudge = new T0.Point(1,1),
            this.totalBorderWidths = new T0.Point(2 * this.borderWidth,2 * this.borderWidth).minus(this.fudge),
            e.controlOptions.anchor != T0.ControlAnchor.NONE && (n = this.element.style,
            r = this.borderWidth,
            n.margin = "0px",
            n.border = r + "px solid " + e.borderColor,
            n.padding = "0px",
            n.background = e.background,
            n.opacity = e.opacity,
            n.overflow = "hidden"),
            this.displayRegion = T0.makeNeutralElement("div"),
            this.displayRegion.id = this.element.id + "-displayregion",
            this.displayRegion.className = "displayregion",
            o = this.displayRegion.style,
            s = this.borderWidth,
            o.position = "relative",
            o.top = "0px",
            o.left = "0px",
            o.fontSize = "0px",
            o.overflow = "hidden",
            o.border = s + "px solid " + e.displayRegionColor,
            o.margin = "0px",
            o.padding = "0px",
            o.background = "transparent",
            o.float = "left",
            o.cssFloat = "left",
            o.styleFloat = "left",
            o.zIndex = 999999999,
            o.cursor = "default",
            this.displayRegionContainer = T0.makeNeutralElement("div"),
            this.displayRegionContainer.id = this.element.id + "-displayregioncontainer",
            this.displayRegionContainer.className = "displayregioncontainer",
            this.displayRegionContainer.style.width = "100%",
            this.displayRegionContainer.style.height = "100%",
            a.addControl(this.element, e.controlOptions),
            this._resizeWithViewer = e.controlOptions.anchor != T0.ControlAnchor.ABSOLUTE && e.controlOptions.anchor != T0.ControlAnchor.NONE,
            this._resizeWithViewer && (e.width && e.height ? (this.element.style.height = "number" == typeof e.height ? e.height + "px" : e.height,
            this.element.style.width = "number" == typeof e.width ? e.width + "px" : e.width) : (t = T0.getElementSize(a.element),
            this.element.style.height = Math.round(t.y * e.sizeRatio) + "px",
            this.element.style.width = Math.round(t.x * e.sizeRatio) + "px",
            this.oldViewerSize = t),
            i = T0.getElementSize(this.element),
            this.elementArea = i.x * i.y),
            this.oldContainerSize = new T0.Point(0,0),
            T0.Viewer.apply(this, [e]),
            this.displayRegionContainer.appendChild(this.displayRegion),
            this.element.getElementsByTagName("div")[0].appendChild(this.displayRegionContainer),
            e.navigatorRotate && (u(e.viewer.viewport ? e.viewer.viewport.getRotation() : e.viewer.degrees || 0),
            e.viewer.addHandler("rotate", function(e) {
                u(e.degrees)
            })),
            this.innerTracker.destroy(),
            this.innerTracker = new T0.MouseTracker({
                element: this.element,
                dragHandler: T0.delegate(this, V0),
                clickHandler: T0.delegate(this, U0),
                releaseHandler: T0.delegate(this, W0),
                scrollHandler: T0.delegate(this, X0)
            }),
            this.addHandler("reset-size", function() {
                l.viewport && l.viewport.goHome(!0)
            }),
            a.world.addHandler("item-index-change", function(t) {
                window.setTimeout(function() {
                    var e = l.world.getItemAt(t.previousIndex);
                    l.world.setItemIndex(e, t.newIndex)
                }, 1)
            }),
            a.world.addHandler("remove-item", function(e) {
                var t = e.item
                  , i = l._getMatchingItem(t);
                i && l.world.removeItem(i)
            }),
            this.update(a.viewport)
        }
        ,
        T0.extend(T0.Navigator.prototype, T0.EventSource.prototype, T0.Viewer.prototype, {
            updateSize: function() {
                if (this.viewport) {
                    var e = new T0.Point(0 === this.container.clientWidth ? 1 : this.container.clientWidth,0 === this.container.clientHeight ? 1 : this.container.clientHeight);
                    e.equals(this.oldContainerSize) || (this.viewport.resize(e, !0),
                    this.viewport.goHome(!0),
                    this.oldContainerSize = e,
                    this.drawer.clear(),
                    this.world.draw())
                }
            },
            setFlip: function(e) {
                return this.viewport.setFlip(e),
                this.setDisplayTransform(this.viewer.viewport.getFlip() ? "scale(-1,1)" : "scale(1,1)"),
                this
            },
            setDisplayTransform: function(e) {
                Z0(this.displayRegion, e),
                Z0(this.canvas, e),
                Z0(this.element, e)
            },
            update: function(e) {
                var t, i, n, r, o, s;
                if (t = T0.getElementSize(this.viewer.element),
                this._resizeWithViewer && t.x && t.y && !t.equals(this.oldViewerSize) && (this.oldViewerSize = t,
                n = this.maintainSizeRatio || !this.elementArea ? (i = t.x * this.sizeRatio,
                t.y * this.sizeRatio) : (i = Math.sqrt(this.elementArea * (t.x / t.y)),
                this.elementArea / i),
                this.element.style.width = Math.round(i) + "px",
                this.element.style.height = Math.round(n) + "px",
                this.elementArea || (this.elementArea = i * n),
                this.updateSize()),
                e && this.viewport) {
                    r = e.getBoundsNoRotate(!0),
                    o = this.viewport.pixelFromPointNoRotate(r.getTopLeft(), !1),
                    s = this.viewport.pixelFromPointNoRotate(r.getBottomRight(), !1).minus(this.totalBorderWidths);
                    var a = this.displayRegion.style;
                    a.display = this.world.getItemCount() ? "block" : "none",
                    a.top = Math.round(o.y) + "px",
                    a.left = Math.round(o.x) + "px";
                    var l = Math.abs(o.x - s.x)
                      , u = Math.abs(o.y - s.y);
                    a.width = Math.round(Math.max(l, 0)) + "px",
                    a.height = Math.round(Math.max(u, 0)) + "px"
                }
            },
            addTiledImage: function(e) {
                var n = this
                  , r = e.originalTiledImage;
                delete e.original;
                var t = T0.extend({}, e, {
                    success: function(e) {
                        var t = e.item;
                        function i() {
                            n._matchBounds(t, r)
                        }
                        t._originalForNavigator = r,
                        n._matchBounds(t, r, !0),
                        r.addHandler("bounds-change", i),
                        r.addHandler("clip-change", i),
                        r.addHandler("opacity-change", function() {
                            n._matchOpacity(t, r)
                        }),
                        r.addHandler("composite-operation-change", function() {
                            n._matchCompositeOperation(t, r)
                        })
                    }
                });
                return T0.Viewer.prototype.addTiledImage.apply(this, [t])
            },
            _getMatchingItem: function(e) {
                for (var t, i = this.world.getItemCount(), n = 0; n < i; n++)
                    if ((t = this.world.getItemAt(n))._originalForNavigator === e)
                        return t;
                return null
            },
            _matchBounds: function(e, t, i) {
                var n = t.getBoundsNoRotate();
                e.setPosition(n.getTopLeft(), i),
                e.setWidth(n.width, i),
                e.setRotation(t.getRotation(), i),
                e.setClip(t.getClip())
            },
            _matchOpacity: function(e, t) {
                e.setOpacity(t.opacity)
            },
            _matchCompositeOperation: function(e, t) {
                e.setCompositeOperation(t.compositeOperation)
            }
        }),
        h2 = OpenSeadragon,
        i2 = {
            Errors: {
                Dzc: "Sorry, we don't support Deep Zoom Collections!",
                Dzi: "Hmm, this doesn't appear to be a valid Deep Zoom Image.",
                Xml: "Hmm, this doesn't appear to be a valid Deep Zoom Image.",
                ImageFormat: "Sorry, we don't support {0}-based Deep Zoom Images.",
                Security: "It looks like a security restriction stopped us from loading this Deep Zoom Image.",
                Status: "This space unintentionally left blank ({0} {1}).",
                OpenFailed: "Unable to open {0}: {1}"
            },
            Tooltips: {
                FullPage: "Toggle full page",
                Home: "Go home",
                ZoomIn: "Zoom in",
                ZoomOut: "Zoom out",
                NextPage: "Next page",
                PreviousPage: "Previous page",
                RotateLeft: "Rotate left",
                RotateRight: "Rotate right",
                Flip: "Flip Horizontally"
            }
        },
        h2.extend(h2, {
            getString: function(e) {
                var t, i = e.split("."), n = null, r = arguments, o = i2;
                for (t = 0; t < i.length - 1; t++)
                    o = o[i[t]] || {};
                return "string" != typeof (n = o[i[t]]) && (h2.console.log("Untranslated source string:", e),
                n = ""),
                n.replace(/\{\d+\}/g, function(e) {
                    var t = parseInt(e.match(/\d+/), 10) + 1;
                    return t < r.length ? r[t] : ""
                })
            },
            setString: function(e, t) {
                var i, n = e.split("."), r = i2;
                for (i = 0; i < n.length - 1; i++)
                    r[n[i]] || (r[n[i]] = {}),
                    r = r[n[i]];
                r[n[i]] = t
            }
        }),
        w2 = OpenSeadragon,
        w2.Point = function(e, t) {
            this.x = "number" == typeof e ? e : 0,
            this.y = "number" == typeof t ? t : 0
        }
        ,
        w2.Point.prototype = {
            clone: function() {
                return new w2.Point(this.x,this.y)
            },
            plus: function(e) {
                return new w2.Point(this.x + e.x,this.y + e.y)
            },
            minus: function(e) {
                return new w2.Point(this.x - e.x,this.y - e.y)
            },
            times: function(e) {
                return new w2.Point(this.x * e,this.y * e)
            },
            divide: function(e) {
                return new w2.Point(this.x / e,this.y / e)
            },
            negate: function() {
                return new w2.Point(-this.x,-this.y)
            },
            distanceTo: function(e) {
                return Math.sqrt(Math.pow(this.x - e.x, 2) + Math.pow(this.y - e.y, 2))
            },
            squaredDistanceTo: function(e) {
                return Math.pow(this.x - e.x, 2) + Math.pow(this.y - e.y, 2)
            },
            apply: function(e) {
                return new w2.Point(e(this.x),e(this.y))
            },
            equals: function(e) {
                return e instanceof w2.Point && this.x === e.x && this.y === e.y
            },
            rotate: function(e, t) {
                var i, n;
                if (t = t || new w2.Point(0,0),
                e % 90 == 0)
                    switch (w2.positiveModulo(e, 360)) {
                    case 0:
                        i = 1,
                        n = 0;
                        break;
                    case 90:
                        i = 0,
                        n = 1;
                        break;
                    case 180:
                        i = -1,
                        n = 0;
                        break;
                    case 270:
                        i = 0,
                        n = -1
                    }
                else {
                    var r = e * Math.PI / 180;
                    i = Math.cos(r),
                    n = Math.sin(r)
                }
                var o = i * (this.x - t.x) - n * (this.y - t.y) + t.x
                  , s = n * (this.x - t.x) + i * (this.y - t.y) + t.y;
                return new w2.Point(o,s)
            },
            toString: function() {
                return "(" + Math.round(100 * this.x) / 100 + "," + Math.round(100 * this.y) / 100 + ")"
            }
        },
        P2 = OpenSeadragon,
        P2.TileSource = function(e, t, i, n, r, o) {
            var s, a, l = this, u = arguments;
            if (s = P2.isPlainObject(e) ? e : {
                width: u[0],
                height: u[1],
                tileSize: u[2],
                tileOverlap: u[3],
                minLevel: u[4],
                maxLevel: u[5]
            },
            P2.EventSource.call(this),
            P2.extend(!0, this, s),
            !this.success)
                for (a = 0; a < arguments.length; a++)
                    if (P2.isFunction(arguments[a])) {
                        this.success = arguments[a];
                        break
                    }
            this.success && this.addHandler("ready", function(e) {
                l.success(e)
            }),
            "string" == P2.type(e) && (this.url = e),
            this.url ? (this.aspectRatio = 1,
            this.dimensions = new P2.Point(10,10),
            this._tileWidth = 0,
            this._tileHeight = 0,
            this.tileOverlap = 0,
            this.minLevel = 0,
            this.maxLevel = 0,
            this.ready = !1,
            this.getImageInfo(this.url)) : (this.ready = !0,
            this.aspectRatio = s.width && s.height ? s.width / s.height : 1,
            this.dimensions = new P2.Point(s.width,s.height),
            this.tileSize ? (this._tileWidth = this._tileHeight = this.tileSize,
            delete this.tileSize) : (this.tileWidth ? (this._tileWidth = this.tileWidth,
            delete this.tileWidth) : this._tileWidth = 0,
            this.tileHeight ? (this._tileHeight = this.tileHeight,
            delete this.tileHeight) : this._tileHeight = 0),
            this.tileOverlap = s.tileOverlap ? s.tileOverlap : 0,
            this.minLevel = s.minLevel ? s.minLevel : 0,
            this.maxLevel = void 0 !== s.maxLevel && null !== s.maxLevel ? s.maxLevel : s.width && s.height ? Math.ceil(Math.log(Math.max(s.width, s.height)) / Math.log(2)) : 0,
            this.success && P2.isFunction(this.success) && this.success(this))
        }
        ,
        P2.TileSource.prototype = {
            getTileSize: function(e) {
                return P2.console.error("[TileSource.getTileSize] is deprecated. Use TileSource.getTileWidth() and TileSource.getTileHeight() instead"),
                this._tileWidth
            },
            getTileWidth: function(e) {
                return this._tileWidth ? this._tileWidth : this.getTileSize(e)
            },
            getTileHeight: function(e) {
                return this._tileHeight ? this._tileHeight : this.getTileSize(e)
            },
            getLevelScale: function(e) {
                var t, i = {};
                for (t = 0; t <= this.maxLevel; t++)
                    i[t] = 1 / Math.pow(2, this.maxLevel - t);
                return this.getLevelScale = function(e) {
                    return i[e]
                }
                ,
                this.getLevelScale(e)
            },
            getNumTiles: function(e) {
                var t = this.getLevelScale(e)
                  , i = Math.ceil(t * this.dimensions.x / this.getTileWidth(e))
                  , n = Math.ceil(t * this.dimensions.y / this.getTileHeight(e));
                return new P2.Point(i,n)
            },
            getPixelRatio: function(e) {
                var t = this.dimensions.times(this.getLevelScale(e))
                  , i = 1 / t.x
                  , n = 1 / t.y;
                return new P2.Point(i,n)
            },
            getClosestLevel: function() {
                var e, t;
                for (e = this.minLevel + 1; e <= this.maxLevel && !(1 < (t = this.getNumTiles(e)).x || 1 < t.y); e++)
                    ;
                return e - 1
            },
            getTileAtPoint: function(e, t) {
                var i = 0 <= t.x && t.x <= 1 && 0 <= t.y && t.y <= 1 / this.aspectRatio;
                P2.console.assert(i, "[TileSource.getTileAtPoint] must be called with a valid point.");
                var n = this.dimensions.x * this.getLevelScale(e)
                  , r = t.x * n
                  , o = t.y * n
                  , s = Math.floor(r / this.getTileWidth(e))
                  , a = Math.floor(o / this.getTileHeight(e));
                return 1 <= t.x && (s = this.getNumTiles(e).x - 1),
                t.y >= 1 / this.aspectRatio - 1e-15 && (a = this.getNumTiles(e).y - 1),
                new P2.Point(s,a)
            },
            getTileBounds: function(e, t, i, n) {
                var r = this.dimensions.times(this.getLevelScale(e))
                  , o = this.getTileWidth(e)
                  , s = this.getTileHeight(e)
                  , a = 0 === t ? 0 : o * t - this.tileOverlap
                  , l = 0 === i ? 0 : s * i - this.tileOverlap
                  , u = o + (0 === t ? 1 : 2) * this.tileOverlap
                  , h = s + (0 === i ? 1 : 2) * this.tileOverlap
                  , c = 1 / r.x;
                return u = Math.min(u, r.x - a),
                h = Math.min(h, r.y - l),
                n ? new P2.Rect(0,0,u,h) : new P2.Rect(a * c,l * c,u * c,h * c)
            },
            getImageInfo: function(n) {
                var e, i, r, o, t, s, a, l = this;
                n && -1 < (a = (s = (t = n.split("/"))[t.length - 1]).lastIndexOf(".")) && (t[t.length - 1] = s.slice(0, a)),
                i = function(e) {
                    "string" == typeof e && (e = P2.parseXml(e));
                    var t = P2.TileSource.determineType(l, e, n);
                    t ? (void 0 === (o = t.prototype.configure.apply(l, [e, n])).ajaxWithCredentials && (o.ajaxWithCredentials = l.ajaxWithCredentials),
                    r = new t(o),
                    l.ready = !0,
                    l.raiseEvent("ready", {
                        tileSource: r
                    })) : l.raiseEvent("open-failed", {
                        message: "Unable to load TileSource",
                        source: n
                    })
                }
                ,
                n.match(/\.js$/) ? (e = n.split("/").pop().replace(".js", ""),
                P2.jsonp({
                    url: n,
                    async: !1,
                    callbackName: e,
                    callback: i
                })) : P2.makeAjaxRequest({
                    url: n,
                    withCredentials: this.ajaxWithCredentials,
                    headers: this.ajaxHeaders,
                    success: function(e) {
                        var t = function(t) {
                            var e, i, n = t.responseText, r = t.status;
                            if (!t)
                                throw new Error(P2.getString("Errors.Security"));
                            if (200 !== t.status && 0 !== t.status)
                                throw r = t.status,
                                e = 404 == r ? "Not Found" : t.statusText,
                                new Error(P2.getString("Errors.Status", r, e));
                            if (n.match(/\s*<.*/))
                                try {
                                    i = t.responseXML && t.responseXML.documentElement ? t.responseXML : P2.parseXml(n)
                                } catch (e) {
                                    i = t.responseText
                                }
                            else if (n.match(/\s*[\{\[].*/))
                                try {
                                    i = P2.parseJSON(n)
                                } catch (e) {
                                    i = n
                                }
                            else
                                i = n;
                            return i
                        }(e);
                        i(t)
                    },
                    error: function(e, t) {
                        var i;
                        try {
                            i = "HTTP " + e.status + " attempting to load TileSource"
                        } catch (e) {
                            i = (void 0 !== t && t.toString ? t.toString() : "Unknown error") + " attempting to load TileSource"
                        }
                        l.raiseEvent("open-failed", {
                            message: i,
                            source: n
                        })
                    }
                })
            },
            supports: function(e, t) {
                return !1
            },
            configure: function(e, t) {
                throw new Error("Method not implemented.")
            },
            getTileUrl: function(e, t, i) {
                throw new Error("Method not implemented.")
            },
            getTileAjaxHeaders: function(e, t, i) {
                return {}
            },
            tileExists: function(e, t, i) {
                var n = this.getNumTiles(e);
                return e >= this.minLevel && e <= this.maxLevel && 0 <= t && 0 <= i && t < n.x && i < n.y
            }
        },
        P2.extend(!0, P2.TileSource.prototype, P2.EventSource.prototype),
        P2.TileSource.determineType = function(e, t, i) {
            var n;
            for (n in OpenSeadragon)
                if (n.match(/.+TileSource$/) && P2.isFunction(OpenSeadragon[n]) && P2.isFunction(OpenSeadragon[n].prototype.supports) && OpenSeadragon[n].prototype.supports.call(e, t, i))
                    return OpenSeadragon[n];
            P2.console.error("No TileSource was able to open %s %s", i, t)
        }
        ,
        B4 = OpenSeadragon,
        B4.DziTileSource = function(e, t, i, n, r, o, s, a, l) {
            var u, h, c, d;
            if (d = B4.isPlainObject(e) ? e : {
                width: e,
                height: t,
                tileSize: i,
                tileOverlap: n,
                tilesUrl: r,
                fileFormat: o,
                displayRects: s,
                minLevel: a,
                maxLevel: l
            },
            this._levelRects = {},
            this.tilesUrl = d.tilesUrl,
            this.fileFormat = d.fileFormat,
            this.displayRects = d.displayRects,
            this.displayRects)
                for (u = this.displayRects.length - 1; 0 <= u; u--)
                    for (c = (h = this.displayRects[u]).minLevel; c <= h.maxLevel; c++)
                        this._levelRects[c] || (this._levelRects[c] = []),
                        this._levelRects[c].push(h);
            B4.TileSource.apply(this, [d])
        }
        ,
        B4.extend(B4.DziTileSource.prototype, B4.TileSource.prototype, {
            supports: function(e, t) {
                var i;
                return e.Image ? i = e.Image.xmlns : e.documentElement && ("Image" != e.documentElement.localName && "Image" != e.documentElement.tagName || (i = e.documentElement.namespaceURI)),
                -1 !== (i = (i || "").toLowerCase()).indexOf("schemas.microsoft.com/deepzoom/2008") || -1 !== i.indexOf("schemas.microsoft.com/deepzoom/2009")
            },
            configure: function(e, t) {
                var i;
                return i = B4.isPlainObject(e) ? D4(0, e) : function(e, t) {
                    if (!t || !t.documentElement)
                        throw new Error(B4.getString("Errors.Xml"));
                    var i, n, r, o, s, a = t.documentElement, l = a.localName || a.tagName, u = t.documentElement.namespaceURI, h = null, c = [];
                    if ("Image" == l)
                        try {
                            if (void 0 === (o = a.getElementsByTagName("Size")[0]) && (o = a.getElementsByTagNameNS(u, "Size")[0]),
                            h = {
                                Image: {
                                    xmlns: "http://schemas.microsoft.com/deepzoom/2008",
                                    Url: a.getAttribute("Url"),
                                    Format: a.getAttribute("Format"),
                                    DisplayRect: null,
                                    Overlap: parseInt(a.getAttribute("Overlap"), 10),
                                    TileSize: parseInt(a.getAttribute("TileSize"), 10),
                                    Size: {
                                        Height: parseInt(o.getAttribute("Height"), 10),
                                        Width: parseInt(o.getAttribute("Width"), 10)
                                    }
                                }
                            },
                            !B4.imageFormatSupported(h.Image.Format))
                                throw new Error(B4.getString("Errors.ImageFormat", h.Image.Format.toUpperCase()));
                            for (void 0 === (i = a.getElementsByTagName("DisplayRect")) && (i = a.getElementsByTagNameNS(u, "DisplayRect")[0]),
                            s = 0; s < i.length; s++)
                                n = i[s],
                                void 0 === (r = n.getElementsByTagName("Rect")[0]) && (r = n.getElementsByTagNameNS(u, "Rect")[0]),
                                c.push({
                                    Rect: {
                                        X: parseInt(r.getAttribute("X"), 10),
                                        Y: parseInt(r.getAttribute("Y"), 10),
                                        Width: parseInt(r.getAttribute("Width"), 10),
                                        Height: parseInt(r.getAttribute("Height"), 10),
                                        MinLevel: parseInt(n.getAttribute("MinLevel"), 10),
                                        MaxLevel: parseInt(n.getAttribute("MaxLevel"), 10)
                                    }
                                });
                            return c.length && (h.Image.DisplayRect = c),
                            D4(0, h)
                        } catch (e) {
                            throw e instanceof Error ? e : new Error(B4.getString("Errors.Dzi"))
                        }
                    else {
                        if ("Collection" == l)
                            throw new Error(B4.getString("Errors.Dzc"));
                        if ("Error" == l) {
                            var d = a.getElementsByTagName("Message")[0].firstChild.nodeValue;
                            throw new Error(d)
                        }
                    }
                    throw new Error(B4.getString("Errors.Dzi"))
                }(0, e),
                t && !i.tilesUrl && (i.tilesUrl = t.replace(/([^\/]+?)(\.(dzi|xml|js)?(\?[^\/]*)?)?\/?$/, "$1_files/"),
                -1 != t.search(/\.(dzi|xml|js)\?/) ? i.queryParams = t.match(/\?.*/) : i.queryParams = ""),
                i
            },
            getTileUrl: function(e, t, i) {
                return [this.tilesUrl, e, "/", t, "_", i, ".", this.fileFormat, this.queryParams].join("")
            },
            tileExists: function(e, t, i) {
                var n, r, o, s, a, l, u, h = this._levelRects[e];
                if (this.minLevel && e < this.minLevel || this.maxLevel && e > this.maxLevel)
                    return !1;
                if (!h || !h.length)
                    return !0;
                for (u = h.length - 1; 0 <= u; u--)
                    if (!(e < (n = h[u]).minLevel || e > n.maxLevel) && (r = this.getLevelScale(e),
                    o = n.x * r,
                    s = n.y * r,
                    a = o + n.width * r,
                    l = s + n.height * r,
                    o = Math.floor(o / this._tileWidth),
                    s = Math.floor(s / this._tileWidth),
                    a = Math.ceil(a / this._tileWidth),
                    l = Math.ceil(l / this._tileWidth),
                    o <= t && t < a && s <= i && i < l))
                        return !0;
                return !1
            }
        }),
        M5 = OpenSeadragon,
        M5.IIIFTileSource = function(e) {
            if (M5.extend(!0, this, e),
            !(this.height && this.width && this["@id"]))
                throw new Error("IIIF required parameters not provided.");
            if (e.tileSizePerScaleFactor = {},
            this.tileFormat = this.tileFormat || "jpg",
            this.tile_width && this.tile_height)
                e.tileWidth = this.tile_width,
                e.tileHeight = this.tile_height;
            else if (this.tile_width)
                e.tileSize = this.tile_width;
            else if (this.tile_height)
                e.tileSize = this.tile_height;
            else if (this.tiles)
                if (1 == this.tiles.length)
                    e.tileWidth = this.tiles[0].width,
                    e.tileHeight = this.tiles[0].height || this.tiles[0].width,
                    this.scale_factors = this.tiles[0].scaleFactors;
                else {
                    this.scale_factors = [];
                    for (var t = 0; t < this.tiles.length; t++)
                        for (var i = 0; i < this.tiles[t].scaleFactors.length; i++) {
                            var n = this.tiles[t].scaleFactors[i];
                            this.scale_factors.push(n),
                            e.tileSizePerScaleFactor[n] = {
                                width: this.tiles[t].width,
                                height: this.tiles[t].height || this.tiles[t].width
                            }
                        }
                }
            else if (function(e) {
                var t = -1 !== ["http://library.stanford.edu/iiif/image-api/compliance.html#level0", "http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0", "http://iiif.io/api/image/2/level0.json"].indexOf(e[0])
                  , i = !1;
                return 1 < e.length && e[1].supports && (i = -1 !== e[1].supports.indexOf("sizeByW")),
                !t || i
            }(e.profile)) {
                for (var r = Math.min(this.height, this.width), o = [256, 512, 1024], s = [], a = 0; a < o.length; a++)
                    o[a] <= r && s.push(o[a]);
                0 < s.length ? e.tileSize = Math.max.apply(null, s) : e.tileSize = r
            } else
                this.sizes && 0 < this.sizes.length ? (this.emulateLegacyImagePyramid = !0,
                e.levels = function(e) {
                    for (var t = [], i = 0; i < e.sizes.length; i++)
                        t.push({
                            url: e["@id"] + "/full/" + e.sizes[i].width + ",/0/default." + e.tileFormat,
                            width: e.sizes[i].width,
                            height: e.sizes[i].height
                        });
                    return t.sort(function(e, t) {
                        return e.width - t.width
                    })
                }(this),
                M5.extend(!0, e, {
                    width: e.levels[e.levels.length - 1].width,
                    height: e.levels[e.levels.length - 1].height,
                    tileSize: Math.max(e.height, e.width),
                    tileOverlap: 0,
                    minLevel: 0,
                    maxLevel: e.levels.length - 1
                }),
                this.levels = e.levels) : M5.console.error("Nothing in the info.json to construct image pyramids from");
            if (!e.maxLevel && !this.emulateLegacyImagePyramid)
                if (this.scale_factors) {
                    var l = Math.max.apply(null, this.scale_factors);
                    e.maxLevel = Math.round(Math.log(l) * Math.LOG2E)
                } else
                    e.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));
            M5.TileSource.apply(this, [e])
        }
        ,
        M5.extend(M5.IIIFTileSource.prototype, M5.TileSource.prototype, {
            supports: function(e, t) {
                return !!(e.protocol && "http://iiif.io/api/image" == e.protocol || e["@context"] && ("http://library.stanford.edu/iiif/image-api/1.1/context.json" == e["@context"] || "http://iiif.io/api/image/1/context.json" == e["@context"]) || e.profile && 0 === e.profile.indexOf("http://library.stanford.edu/iiif/image-api/compliance.html") || e.identifier && e.width && e.height || e.documentElement && "info" == e.documentElement.tagName && "http://library.stanford.edu/iiif/image-api/ns/" == e.documentElement.namespaceURI)
            },
            configure: function(e, t) {
                if (M5.isPlainObject(e))
                    return e["@context"] || (e["@context"] = "http://iiif.io/api/image/1.0/context.json",
                    e["@id"] = t.replace("/info.json", "")),
                    e;
                var i = function(e) {
                    if (!e || !e.documentElement)
                        throw new Error(M5.getString("Errors.Xml"));
                    var t = e.documentElement
                      , i = t.tagName
                      , n = null;
                    if ("info" == i)
                        try {
                            return function e(t, i, n) {
                                var r, o;
                                if (3 == t.nodeType && n)
                                    (o = t.nodeValue.trim()).match(/^\d*$/) && (o = Number(o)),
                                    i[n] ? (M5.isArray(i[n]) || (i[n] = [i[n]]),
                                    i[n].push(o)) : i[n] = o;
                                else if (1 == t.nodeType)
                                    for (r = 0; r < t.childNodes.length; r++)
                                        e(t.childNodes[r], i, t.nodeName)
                            }(t, n = {}),
                            n
                        } catch (e) {
                            throw e instanceof Error ? e : new Error(M5.getString("Errors.IIIF"))
                        }
                    throw new Error(M5.getString("Errors.IIIF"))
                }(e);
                return i["@context"] = "http://iiif.io/api/image/1.0/context.json",
                i["@id"] = t.replace("/info.xml", ""),
                i
            },
            getTileWidth: function(e) {
                if (this.emulateLegacyImagePyramid)
                    return M5.TileSource.prototype.getTileWidth.call(this, e);
                var t = Math.pow(2, this.maxLevel - e);
                return this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[t] ? this.tileSizePerScaleFactor[t].width : this._tileWidth
            },
            getTileHeight: function(e) {
                if (this.emulateLegacyImagePyramid)
                    return M5.TileSource.prototype.getTileHeight.call(this, e);
                var t = Math.pow(2, this.maxLevel - e);
                return this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[t] ? this.tileSizePerScaleFactor[t].height : this._tileHeight
            },
            getLevelScale: function(e) {
                if (this.emulateLegacyImagePyramid) {
                    var t = NaN;
                    return 0 < this.levels.length && e >= this.minLevel && e <= this.maxLevel && (t = this.levels[e].width / this.levels[this.maxLevel].width),
                    t
                }
                return M5.TileSource.prototype.getLevelScale.call(this, e)
            },
            getNumTiles: function(e) {
                return this.emulateLegacyImagePyramid ? this.getLevelScale(e) ? new M5.Point(1,1) : new M5.Point(0,0) : M5.TileSource.prototype.getNumTiles.call(this, e)
            },
            getTileAtPoint: function(e, t) {
                return this.emulateLegacyImagePyramid ? new M5.Point(0,0) : M5.TileSource.prototype.getTileAtPoint.call(this, e, t)
            },
            getTileUrl: function(e, t, i) {
                if (this.emulateLegacyImagePyramid) {
                    var n = null;
                    return 0 < this.levels.length && e >= this.minLevel && e <= this.maxLevel && (n = this.levels[e].url),
                    n
                }
                var r, o, s, a, l, u, h, c, d, f, p, g, m, v = Math.pow(.5, this.maxLevel - e), _ = Math.ceil(this.width * v), y = Math.ceil(this.height * v);
                return r = this.getTileWidth(e),
                o = this.getTileHeight(e),
                s = Math.ceil(r / v),
                a = Math.ceil(o / v),
                g = (m = -1 < this["@context"].indexOf("/1.0/context.json") || -1 < this["@context"].indexOf("/1.1/context.json") || -1 < this["@context"].indexOf("/1/context.json")) ? "native." + this.tileFormat : "default." + this.tileFormat,
                _ < r && y < o ? (f = m || _ !== this.width ? _ + "," : "max",
                l = "full") : (u = t * s,
                h = i * a,
                c = Math.min(s, this.width - u),
                d = Math.min(a, this.height - h),
                l = 0 === t && 0 === i && c === this.width && d === this.height ? "full" : [u, h, c, d].join(","),
                p = Math.ceil(c * v),
                f = m || p !== this.width ? p + "," : "max"),
                [this["@id"], l, f, "0", g].join("/")
            }
        }),
        a7 = OpenSeadragon,
        a7.OsmTileSource = function(e, t, i, n, r) {
            var o;
            (o = a7.isPlainObject(e) ? e : {
                width: e,
                height: t,
                tileSize: i,
                tileOverlap: n,
                tilesUrl: r
            }).width && o.height || (o.width = 65572864,
            o.height = 65572864),
            o.tileSize || (o.tileSize = 256,
            o.tileOverlap = 0),
            o.tilesUrl || (o.tilesUrl = "http://tile.openstreetmap.org/"),
            o.minLevel = 8,
            a7.TileSource.apply(this, [o])
        }
        ,
        a7.extend(a7.OsmTileSource.prototype, a7.TileSource.prototype, {
            supports: function(e, t) {
                return e.type && "openstreetmaps" == e.type
            },
            configure: function(e, t) {
                return e
            },
            getTileUrl: function(e, t, i) {
                return this.tilesUrl + (e - 8) + "/" + t + "/" + i + ".png"
            }
        }),
        o7 = OpenSeadragon,
        o7.TmsTileSource = function(e, t, i, n, r) {
            var o;
            o = o7.isPlainObject(e) ? e : {
                width: e,
                height: t,
                tileSize: i,
                tileOverlap: n,
                tilesUrl: r
            };
            var s, a = 256 * Math.ceil(o.width / 256), l = 256 * Math.ceil(o.height / 256);
            s = l < a ? a / 256 : l / 256,
            o.maxLevel = Math.ceil(Math.log(s) / Math.log(2)) - 1,
            o.tileSize = 256,
            o.width = a,
            o.height = l,
            o7.TileSource.apply(this, [o])
        }
        ,
        o7.extend(o7.TmsTileSource.prototype, o7.TileSource.prototype, {
            supports: function(e, t) {
                return e.type && "tiledmapservice" == e.type
            },
            configure: function(e, t) {
                return e
            },
            getTileUrl: function(e, t, i) {
                var n = this.getNumTiles(e).y - 1;
                return this.tilesUrl + e + "/" + t + "/" + (n - i) + ".png"
            }
        }),
        G7 = OpenSeadragon,
        G7.ZoomifyTileSource = function(e) {
            e.tileSize = 256;
            var t = {
                x: e.width,
                y: e.height
            };
            for (e.imageSizes = [{
                x: e.width,
                y: e.height
            }],
            e.gridSize = [this._getGridSize(e.width, e.height, e.tileSize)]; parseInt(t.x, 10) > e.tileSize || parseInt(t.y, 10) > e.tileSize; )
                t.x = Math.floor(t.x / 2),
                t.y = Math.floor(t.y / 2),
                e.imageSizes.push({
                    x: t.x,
                    y: t.y
                }),
                e.gridSize.push(this._getGridSize(t.x, t.y, e.tileSize));
            e.imageSizes.reverse(),
            e.gridSize.reverse(),
            e.minLevel = 0,
            e.maxLevel = e.gridSize.length - 1,
            OpenSeadragon.TileSource.apply(this, [e])
        }
        ,
        G7.extend(G7.ZoomifyTileSource.prototype, G7.TileSource.prototype, {
            _getGridSize: function(e, t, i) {
                return {
                    x: Math.ceil(e / i),
                    y: Math.ceil(t / i)
                }
            },
            _calculateAbsoluteTileNumber: function(e, t, i) {
                for (var n = 0, r = {}, o = 0; o < e; o++)
                    n += (r = this.gridSize[o]).x * r.y;
                return n += (r = this.gridSize[e]).x * i + t
            },
            supports: function(e, t) {
                return e.type && "zoomifytileservice" == e.type
            },
            configure: function(e, t) {
                return e
            },
            getTileUrl: function(e, t, i) {
                var n, r = this._calculateAbsoluteTileNumber(e, t, i);
                return n = Math.floor(r / 256),
                this.tilesUrl + "TileGroup" + n + "/" + e + "-" + t + "-" + i + ".jpg"
            }
        }),
        _7 = OpenSeadragon,
        _7.LegacyTileSource = function(e) {
            var t, i, n;
            _7.isArray(e) && (t = {
                type: "legacy-image-pyramid",
                levels: e
            }),
            t.levels = function(e) {
                var t, i, n = [];
                for (i = 0; i < e.length; i++)
                    (t = e[i]).height && t.width && t.url ? n.push({
                        url: t.url,
                        width: Number(t.width),
                        height: Number(t.height)
                    }) : _7.console.error("Unsupported image format: %s", t.url ? t.url : "<no URL>");
                return n.sort(function(e, t) {
                    return e.height - t.height
                })
            }(t.levels),
            0 < t.levels.length ? (i = t.levels[t.levels.length - 1].width,
            n = t.levels[t.levels.length - 1].height) : (n = i = 0,
            _7.console.error("No supported image formats found")),
            _7.extend(!0, t, {
                width: i,
                height: n,
                tileSize: Math.max(n, i),
                tileOverlap: 0,
                minLevel: 0,
                maxLevel: 0 < t.levels.length ? t.levels.length - 1 : 0
            }),
            _7.TileSource.apply(this, [t]),
            this.levels = t.levels
        }
        ,
        _7.extend(_7.LegacyTileSource.prototype, _7.TileSource.prototype, {
            supports: function(e, t) {
                return e.type && "legacy-image-pyramid" == e.type || e.documentElement && "legacy-image-pyramid" == e.documentElement.getAttribute("type")
            },
            configure: function(e, t) {
                return _7.isPlainObject(e) ? c8(0, e) : function(e, t) {
                    if (!t || !t.documentElement)
                        throw new Error(_7.getString("Errors.Xml"));
                    var i, n, r = t.documentElement, o = r.tagName, s = null, a = [];
                    if ("image" == o)
                        try {
                            for (s = {
                                type: r.getAttribute("type"),
                                levels: []
                            },
                            a = r.getElementsByTagName("level"),
                            n = 0; n < a.length; n++)
                                i = a[n],
                                s.levels.push({
                                    url: i.getAttribute("url"),
                                    width: parseInt(i.getAttribute("width"), 10),
                                    height: parseInt(i.getAttribute("height"), 10)
                                });
                            return c8(0, s)
                        } catch (e) {
                            throw e instanceof Error ? e : new Error("Unknown error parsing Legacy Image Pyramid XML.")
                        }
                    else {
                        if ("collection" == o)
                            throw new Error("Legacy Image Pyramid Collections not yet supported.");
                        if ("error" == o)
                            throw new Error("Error: " + t)
                    }
                    throw new Error("Unknown element " + o)
                }(0, e)
            },
            getLevelScale: function(e) {
                var t = NaN;
                return 0 < this.levels.length && e >= this.minLevel && e <= this.maxLevel && (t = this.levels[e].width / this.levels[this.maxLevel].width),
                t
            },
            getNumTiles: function(e) {
                return this.getLevelScale(e) ? new _7.Point(1,1) : new _7.Point(0,0)
            },
            getTileUrl: function(e, t, i) {
                var n = null;
                return 0 < this.levels.length && e >= this.minLevel && e <= this.maxLevel && (n = this.levels[e].url),
                n
            }
        }),
        L8 = OpenSeadragon,
        L8.ImageTileSource = function(e) {
            e = L8.extend({
                buildPyramid: !0,
                crossOriginPolicy: !1,
                ajaxWithCredentials: !1,
                useCanvas: !0
            }, e),
            L8.TileSource.apply(this, [e])
        }
        ,
        L8.extend(L8.ImageTileSource.prototype, L8.TileSource.prototype, {
            supports: function(e, t) {
                return e.type && "image" === e.type
            },
            configure: function(e, t) {
                return e
            },
            getImageInfo: function(e) {
                var t = this._image = new Image
                  , i = this;
                this.crossOriginPolicy && (t.crossOrigin = this.crossOriginPolicy),
                this.ajaxWithCredentials && (t.useCredentials = this.ajaxWithCredentials),
                L8.addEvent(t, "load", function() {
                    i.width = Object.prototype.hasOwnProperty.call(t, "naturalWidth") ? t.naturalWidth : t.width,
                    i.height = Object.prototype.hasOwnProperty.call(t, "naturalHeight") ? t.naturalHeight : t.height,
                    i.aspectRatio = i.width / i.height,
                    i.dimensions = new L8.Point(i.width,i.height),
                    i._tileWidth = i.width,
                    i._tileHeight = i.height,
                    i.tileOverlap = 0,
                    i.minLevel = 0,
                    i.levels = i._buildLevels(),
                    i.maxLevel = i.levels.length - 1,
                    i.ready = !0,
                    i.raiseEvent("ready", {
                        tileSource: i
                    })
                }),
                L8.addEvent(t, "error", function() {
                    i.raiseEvent("open-failed", {
                        message: "Error loading image at " + e,
                        source: e
                    })
                }),
                t.src = e
            },
            getLevelScale: function(e) {
                var t = NaN;
                return e >= this.minLevel && e <= this.maxLevel && (t = this.levels[e].width / this.levels[this.maxLevel].width),
                t
            },
            getNumTiles: function(e) {
                return this.getLevelScale(e) ? new L8.Point(1,1) : new L8.Point(0,0)
            },
            getTileUrl: function(e, t, i) {
                var n = null;
                return e >= this.minLevel && e <= this.maxLevel && (n = this.levels[e].url),
                n
            },
            getContext2D: function(e, t, i) {
                var n = null;
                return e >= this.minLevel && e <= this.maxLevel && (n = this.levels[e].context2D),
                n
            },
            _buildLevels: function() {
                var e = [{
                    url: this._image.src,
                    width: Object.prototype.hasOwnProperty.call(this._image, "naturalWidth") ? this._image.naturalWidth : this._image.width,
                    height: Object.prototype.hasOwnProperty.call(this._image, "naturalHeight") ? this._image.naturalHeight : this._image.height
                }];
                if (!this.buildPyramid || !L8.supportsCanvas || !this.useCanvas)
                    return delete this._image,
                    e;
                var t = Object.prototype.hasOwnProperty.call(this._image, "naturalWidth") ? this._image.naturalWidth : this._image.width
                  , i = Object.prototype.hasOwnProperty.call(this._image, "naturalHeight") ? this._image.naturalHeight : this._image.height
                  , n = document.createElement("canvas")
                  , r = n.getContext("2d");
                if (n.width = t,
                n.height = i,
                r.drawImage(this._image, 0, 0, t, i),
                e[0].context2D = r,
                delete this._image,
                L8.isCanvasTainted(n))
                    return e;
                for (; 2 <= t && 2 <= i; ) {
                    t = Math.floor(t / 2),
                    i = Math.floor(i / 2);
                    var o = document.createElement("canvas")
                      , s = o.getContext("2d");
                    o.width = t,
                    o.height = i,
                    s.drawImage(n, 0, 0, t, i),
                    e.splice(0, 0, {
                        context2D: s,
                        width: t,
                        height: i
                    }),
                    n = o,
                    r = s
                }
                return e
            }
        }),
        l9 = OpenSeadragon,
        l9.TileSourceCollection = function(e, t, i, n) {
            l9.console.error("TileSourceCollection is deprecated; use World instead")
        }
        ,
        q9 = OpenSeadragon,
        q9.ButtonState = {
            REST: 0,
            GROUP: 1,
            HOVER: 2,
            DOWN: 3
        },
        q9.Button = function(e) {
            var t = this;
            q9.EventSource.call(this),
            q9.extend(!0, this, {
                tooltip: null,
                srcRest: null,
                srcGroup: null,
                srcHover: null,
                srcDown: null,
                clickTimeThreshold: q9.DEFAULT_SETTINGS.clickTimeThreshold,
                clickDistThreshold: q9.DEFAULT_SETTINGS.clickDistThreshold,
                fadeDelay: 0,
                fadeLength: 2e3,
                onPress: null,
                onRelease: null,
                onClick: null,
                onEnter: null,
                onExit: null,
                onFocus: null,
                onBlur: null
            }, e),
            this.element = e.element || q9.makeNeutralElement("div"),
            e.element || (this.imgRest = q9.makeTransparentImage(this.srcRest),
            this.imgGroup = q9.makeTransparentImage(this.srcGroup),
            this.imgHover = q9.makeTransparentImage(this.srcHover),
            this.imgDown = q9.makeTransparentImage(this.srcDown),
            this.imgRest.alt = this.imgGroup.alt = this.imgHover.alt = this.imgDown.alt = this.tooltip,
            this.element.style.position = "relative",
            q9.setElementTouchActionNone(this.element),
            this.imgGroup.style.position = this.imgHover.style.position = this.imgDown.style.position = "absolute",
            this.imgGroup.style.top = this.imgHover.style.top = this.imgDown.style.top = "0px",
            this.imgGroup.style.left = this.imgHover.style.left = this.imgDown.style.left = "0px",
            this.imgHover.style.visibility = this.imgDown.style.visibility = "hidden",
            q9.Browser.vendor == q9.BROWSERS.FIREFOX && q9.Browser.version < 3 && (this.imgGroup.style.top = this.imgHover.style.top = this.imgDown.style.top = ""),
            this.element.appendChild(this.imgRest),
            this.element.appendChild(this.imgGroup),
            this.element.appendChild(this.imgHover),
            this.element.appendChild(this.imgDown)),
            this.addHandler("press", this.onPress),
            this.addHandler("release", this.onRelease),
            this.addHandler("click", this.onClick),
            this.addHandler("enter", this.onEnter),
            this.addHandler("exit", this.onExit),
            this.addHandler("focus", this.onFocus),
            this.addHandler("blur", this.onBlur),
            this.currentState = q9.ButtonState.GROUP,
            this.fadeBeginTime = null,
            this.shouldFade = !1,
            this.element.style.display = "inline-block",
            this.element.style.position = "relative",
            this.element.title = this.tooltip,
            this.tracker = new q9.MouseTracker({
                element: this.element,
                clickTimeThreshold: this.clickTimeThreshold,
                clickDistThreshold: this.clickDistThreshold,
                enterHandler: function(e) {
                    e.insideElementPressed ? (v9(t, q9.ButtonState.DOWN),
                    t.raiseEvent("enter", {
                        originalEvent: e.originalEvent
                    })) : e.buttonDownAny || v9(t, q9.ButtonState.HOVER)
                },
                focusHandler: function(e) {
                    this.enterHandler(e),
                    t.raiseEvent("focus", {
                        originalEvent: e.originalEvent
                    })
                },
                exitHandler: function(e) {
                    w9(t, q9.ButtonState.GROUP),
                    e.insideElementPressed && t.raiseEvent("exit", {
                        originalEvent: e.originalEvent
                    })
                },
                blurHandler: function(e) {
                    this.exitHandler(e),
                    t.raiseEvent("blur", {
                        originalEvent: e.originalEvent
                    })
                },
                pressHandler: function(e) {
                    v9(t, q9.ButtonState.DOWN),
                    t.raiseEvent("press", {
                        originalEvent: e.originalEvent
                    })
                },
                releaseHandler: function(e) {
                    e.insideElementPressed && e.insideElementReleased ? (w9(t, q9.ButtonState.HOVER),
                    t.raiseEvent("release", {
                        originalEvent: e.originalEvent
                    })) : e.insideElementPressed ? w9(t, q9.ButtonState.GROUP) : v9(t, q9.ButtonState.HOVER)
                },
                clickHandler: function(e) {
                    e.quick && t.raiseEvent("click", {
                        originalEvent: e.originalEvent
                    })
                },
                keyHandler: function(e) {
                    return 13 !== e.keyCode || (t.raiseEvent("click", {
                        originalEvent: e.originalEvent
                    }),
                    t.raiseEvent("release", {
                        originalEvent: e.originalEvent
                    }),
                    !1)
                }
            }),
            w9(this, q9.ButtonState.REST)
        }
        ,
        q9.extend(q9.Button.prototype, q9.EventSource.prototype, {
            notifyGroupEnter: function() {
                v9(this, q9.ButtonState.GROUP)
            },
            notifyGroupExit: function() {
                w9(this, q9.ButtonState.REST)
            },
            disable: function() {
                this.notifyGroupExit(),
                this.element.disabled = !0,
                q9.setElementOpacity(this.element, .2, !0)
            },
            enable: function() {
                this.element.disabled = !1,
                q9.setElementOpacity(this.element, 1, !0),
                this.notifyGroupEnter()
            }
        }),
        S9 = OpenSeadragon,
        S9.ButtonGroup = function(e) {
            S9.extend(!0, this, {
                buttons: [],
                clickTimeThreshold: S9.DEFAULT_SETTINGS.clickTimeThreshold,
                clickDistThreshold: S9.DEFAULT_SETTINGS.clickDistThreshold,
                labelText: ""
            }, e);
            var t, i = this.buttons.concat([]), n = this;
            if (this.element = e.element || S9.makeNeutralElement("div"),
            !e.group)
                for (this.element.style.display = "inline-block",
                t = 0; t < i.length; t++)
                    this.element.appendChild(i[t].element);
            S9.setElementTouchActionNone(this.element),
            this.tracker = new S9.MouseTracker({
                element: this.element,
                clickTimeThreshold: this.clickTimeThreshold,
                clickDistThreshold: this.clickDistThreshold,
                enterHandler: function(e) {
                    var t;
                    for (t = 0; t < n.buttons.length; t++)
                        n.buttons[t].notifyGroupEnter()
                },
                exitHandler: function(e) {
                    var t;
                    if (!e.insideElementPressed)
                        for (t = 0; t < n.buttons.length; t++)
                            n.buttons[t].notifyGroupExit()
                }
            })
        }
        ,
        S9.ButtonGroup.prototype = {
            emulateEnter: function() {
                this.tracker.enterHandler({
                    eventSource: this.tracker
                })
            },
            emulateExit: function() {
                this.tracker.exitHandler({
                    eventSource: this.tracker
                })
            }
        },
        _9 = OpenSeadragon,
        _9.Rect = function(e, t, i, n, r) {
            var o, s;
            this.x = "number" == typeof e ? e : 0,
            this.y = "number" == typeof t ? t : 0,
            this.width = "number" == typeof i ? i : 0,
            this.height = "number" == typeof n ? n : 0,
            this.degrees = "number" == typeof r ? r : 0,
            this.degrees = _9.positiveModulo(this.degrees, 360),
            270 <= this.degrees ? (o = this.getTopRight(),
            this.x = o.x,
            this.y = o.y,
            s = this.height,
            this.height = this.width,
            this.width = s,
            this.degrees -= 270) : 180 <= this.degrees ? (o = this.getBottomRight(),
            this.x = o.x,
            this.y = o.y,
            this.degrees -= 180) : 90 <= this.degrees && (o = this.getBottomLeft(),
            this.x = o.x,
            this.y = o.y,
            s = this.height,
            this.height = this.width,
            this.width = s,
            this.degrees -= 90)
        }
        ,
        _9.Rect.fromSummits = function(e, t, i) {
            var n = e.distanceTo(t)
              , r = e.distanceTo(i)
              , o = t.minus(e)
              , s = Math.atan(o.y / o.x);
            return o.x < 0 ? s += Math.PI : o.y < 0 && (s += 2 * Math.PI),
            new _9.Rect(e.x,e.y,n,r,s / Math.PI * 180)
        }
        ,
        _9.Rect.prototype = {
            clone: function() {
                return new _9.Rect(this.x,this.y,this.width,this.height,this.degrees)
            },
            getAspectRatio: function() {
                return this.width / this.height
            },
            getTopLeft: function() {
                return new _9.Point(this.x,this.y)
            },
            getBottomRight: function() {
                return new _9.Point(this.x + this.width,this.y + this.height).rotate(this.degrees, this.getTopLeft())
            },
            getTopRight: function() {
                return new _9.Point(this.x + this.width,this.y).rotate(this.degrees, this.getTopLeft())
            },
            getBottomLeft: function() {
                return new _9.Point(this.x,this.y + this.height).rotate(this.degrees, this.getTopLeft())
            },
            getCenter: function() {
                return new _9.Point(this.x + this.width / 2,this.y + this.height / 2).rotate(this.degrees, this.getTopLeft())
            },
            getSize: function() {
                return new _9.Point(this.width,this.height)
            },
            equals: function(e) {
                return e instanceof _9.Rect && this.x === e.x && this.y === e.y && this.width === e.width && this.height === e.height && this.degrees === e.degrees
            },
            times: function(e) {
                return new _9.Rect(this.x * e,this.y * e,this.width * e,this.height * e,this.degrees)
            },
            translate: function(e) {
                return new _9.Rect(this.x + e.x,this.y + e.y,this.width,this.height,this.degrees)
            },
            union: function(e) {
                var t = this.getBoundingBox()
                  , i = e.getBoundingBox()
                  , n = Math.min(t.x, i.x)
                  , r = Math.min(t.y, i.y)
                  , o = Math.max(t.x + t.width, i.x + i.width)
                  , s = Math.max(t.y + t.height, i.y + i.height);
                return new _9.Rect(n,r,o - n,s - r)
            },
            intersection: function(e) {
                var u = 1e-10
                  , t = []
                  , i = this.getTopLeft();
                e.containsPoint(i, u) && t.push(i);
                var n = this.getTopRight();
                e.containsPoint(n, u) && t.push(n);
                var r = this.getBottomLeft();
                e.containsPoint(r, u) && t.push(r);
                var o = this.getBottomRight();
                e.containsPoint(o, u) && t.push(o);
                var s = e.getTopLeft();
                this.containsPoint(s, u) && t.push(s);
                var a = e.getTopRight();
                this.containsPoint(a, u) && t.push(a);
                var l = e.getBottomLeft();
                this.containsPoint(l, u) && t.push(l);
                var h = e.getBottomRight();
                this.containsPoint(h, u) && t.push(h);
                for (var c = this._getSegments(), d = e._getSegments(), f = 0; f < c.length; f++)
                    for (var p = c[f], g = 0; g < d.length; g++) {
                        var m = d[g]
                          , v = _(p[0], p[1], m[0], m[1]);
                        v && t.push(v)
                    }
                function _(e, t, i, n) {
                    var r = t.minus(e)
                      , o = n.minus(i)
                      , s = -o.x * r.y + r.x * o.y;
                    if (0 == s)
                        return null;
                    var a = (r.x * (e.y - i.y) - r.y * (e.x - i.x)) / s
                      , l = (o.x * (e.y - i.y) - o.y * (e.x - i.x)) / s;
                    return -u <= a && a <= 1 - u && -u <= l && l <= 1 - u ? new _9.Point(e.x + l * r.x,e.y + l * r.y) : null
                }
                if (0 === t.length)
                    return null;
                for (var y = t[0].x, w = t[0].x, b = t[0].y, S = t[0].y, T = 1; T < t.length; T++) {
                    var E = t[T];
                    E.x < y && (y = E.x),
                    E.x > w && (w = E.x),
                    E.y < b && (b = E.y),
                    E.y > S && (S = E.y)
                }
                return new _9.Rect(y,b,w - y,S - b)
            },
            _getSegments: function() {
                var e = this.getTopLeft()
                  , t = this.getTopRight()
                  , i = this.getBottomLeft()
                  , n = this.getBottomRight();
                return [[e, t], [t, n], [n, i], [i, e]]
            },
            rotate: function(e, t) {
                if (0 === (e = _9.positiveModulo(e, 360)))
                    return this.clone();
                t = t || this.getCenter();
                var i = this.getTopLeft().rotate(e, t)
                  , n = this.getTopRight().rotate(e, t).minus(i);
                n = n.apply(function(e) {
                    return Math.abs(e) < 1e-15 ? 0 : e
                });
                var r = Math.atan(n.y / n.x);
                return n.x < 0 ? r += Math.PI : n.y < 0 && (r += 2 * Math.PI),
                new _9.Rect(i.x,i.y,this.width,this.height,r / Math.PI * 180)
            },
            getBoundingBox: function() {
                if (0 === this.degrees)
                    return this.clone();
                var e = this.getTopLeft()
                  , t = this.getTopRight()
                  , i = this.getBottomLeft()
                  , n = this.getBottomRight()
                  , r = Math.min(e.x, t.x, i.x, n.x)
                  , o = Math.max(e.x, t.x, i.x, n.x)
                  , s = Math.min(e.y, t.y, i.y, n.y)
                  , a = Math.max(e.y, t.y, i.y, n.y);
                return new _9.Rect(r,s,o - r,a - s)
            },
            getIntegerBoundingBox: function() {
                var e = this.getBoundingBox()
                  , t = Math.floor(e.x)
                  , i = Math.floor(e.y)
                  , n = Math.ceil(e.width + e.x - t)
                  , r = Math.ceil(e.height + e.y - i);
                return new _9.Rect(t,i,n,r)
            },
            containsPoint: function(e, t) {
                t = t || 0;
                var i = this.getTopLeft()
                  , n = this.getTopRight()
                  , r = this.getBottomLeft()
                  , o = n.minus(i)
                  , s = r.minus(i);
                return (e.x - i.x) * o.x + (e.y - i.y) * o.y >= -t && (e.x - n.x) * o.x + (e.y - n.y) * o.y <= t && (e.x - i.x) * s.x + (e.y - i.y) * s.y >= -t && (e.x - r.x) * s.x + (e.y - r.y) * s.y <= t
            },
            toString: function() {
                return "[" + Math.round(100 * this.x) / 100 + ", " + Math.round(100 * this.y) / 100 + ", " + Math.round(100 * this.width) / 100 + "x" + Math.round(100 * this.height) / 100 + ", " + Math.round(100 * this.degrees) / 100 + "deg]"
            }
        },
        Kba = OpenSeadragon,
        Lba = {},
        Kba.ReferenceStrip = function(e) {
            var t, i, n, o = e.viewer, r = Kba.getElementSize(o.element);
            for (e.id || (e.id = "referencestrip-" + Kba.now(),
            this.element = Kba.makeNeutralElement("div"),
            this.element.id = e.id,
            this.element.className = "referencestrip"),
            e = Kba.extend(!0, {
                sizeRatio: Kba.DEFAULT_SETTINGS.referenceStripSizeRatio,
                position: Kba.DEFAULT_SETTINGS.referenceStripPosition,
                scroll: Kba.DEFAULT_SETTINGS.referenceStripScroll,
                clickTimeThreshold: Kba.DEFAULT_SETTINGS.clickTimeThreshold
            }, e, {
                element: this.element,
                showNavigator: !1,
                mouseNavEnabled: !1,
                showNavigationControl: !1,
                showSequenceControl: !1
            }),
            Kba.extend(this, e),
            Lba[this.id] = {
                animating: !1
            },
            this.minPixelRatio = this.viewer.minPixelRatio,
            (i = this.element.style).marginTop = "0px",
            i.marginRight = "0px",
            i.marginBottom = "0px",
            i.marginLeft = "0px",
            i.left = "0px",
            i.bottom = "0px",
            i.border = "0px",
            i.background = "#000",
            i.position = "relative",
            Kba.setElementTouchActionNone(this.element),
            Kba.setElementOpacity(this.element, .8),
            this.viewer = o,
            this.innerTracker = new Kba.MouseTracker({
                element: this.element,
                dragHandler: Kba.delegate(this, Mba),
                scrollHandler: Kba.delegate(this, Nba),
                enterHandler: Kba.delegate(this, Pba),
                exitHandler: Kba.delegate(this, Qba),
                keyDownHandler: Kba.delegate(this, Rba),
                keyHandler: Kba.delegate(this, Sba)
            }),
            e.width && e.height ? (this.element.style.width = e.width + "px",
            this.element.style.height = e.height + "px",
            o.addControl(this.element, {
                anchor: Kba.ControlAnchor.BOTTOM_LEFT
            })) : "horizontal" == e.scroll ? (this.element.style.width = r.x * e.sizeRatio * o.tileSources.length + 12 * o.tileSources.length + "px",
            this.element.style.height = r.y * e.sizeRatio + "px",
            o.addControl(this.element, {
                anchor: Kba.ControlAnchor.BOTTOM_LEFT
            })) : (this.element.style.height = r.y * e.sizeRatio * o.tileSources.length + 12 * o.tileSources.length + "px",
            this.element.style.width = r.x * e.sizeRatio + "px",
            o.addControl(this.element, {
                anchor: Kba.ControlAnchor.TOP_LEFT
            })),
            this.panelWidth = r.x * this.sizeRatio + 8,
            this.panelHeight = r.y * this.sizeRatio + 8,
            this.panels = [],
            this.miniViewers = {},
            n = 0; n < o.tileSources.length; n++)
                (t = Kba.makeNeutralElement("div")).id = this.element.id + "-" + n,
                t.style.width = this.panelWidth + "px",
                t.style.height = this.panelHeight + "px",
                t.style.display = "inline",
                t.style.float = "left",
                t.style.cssFloat = "left",
                t.style.styleFloat = "left",
                t.style.padding = "2px",
                Kba.setElementTouchActionNone(t),
                t.innerTracker = new Kba.MouseTracker({
                    element: t,
                    clickTimeThreshold: this.clickTimeThreshold,
                    clickDistThreshold: this.clickDistThreshold,
                    pressHandler: function(e) {
                        e.eventSource.dragging = Kba.now()
                    },
                    releaseHandler: function(e) {
                        var t = e.eventSource
                          , i = t.element.id
                          , n = Number(i.split("-")[2])
                          , r = Kba.now();
                        e.insideElementPressed && e.insideElementReleased && t.dragging && r - t.dragging < t.clickTimeThreshold && (t.dragging = null,
                        o.goToPage(n))
                    }
                }),
                this.element.appendChild(t),
                t.activePanel = !1,
                this.panels.push(t);
            Oba(this, "vertical" == this.scroll ? r.y : r.x, 0),
            this.setFocus(0)
        }
        ,
        Kba.extend(Kba.ReferenceStrip.prototype, Kba.EventSource.prototype, Kba.Viewer.prototype, {
            setFocus: function(e) {
                var t, i = Kba.getElement(this.element.id + "-" + e), n = Kba.getElementSize(this.viewer.canvas), r = Number(this.element.style.width.replace("px", "")), o = Number(this.element.style.height.replace("px", "")), s = -Number(this.element.style.marginLeft.replace("px", "")), a = -Number(this.element.style.marginTop.replace("px", ""));
                this.currentSelected !== i && (this.currentSelected && (this.currentSelected.style.background = "#000"),
                this.currentSelected = i,
                this.currentSelected.style.background = "#999",
                "horizontal" == this.scroll ? (t = Number(e) * (this.panelWidth + 3)) > s + n.x - this.panelWidth ? (t = Math.min(t, r - n.x),
                this.element.style.marginLeft = -t + "px",
                Oba(this, n.x, -t)) : t < s && (t = Math.max(0, t - n.x / 2),
                this.element.style.marginLeft = -t + "px",
                Oba(this, n.x, -t)) : (t = Number(e) * (this.panelHeight + 3)) > a + n.y - this.panelHeight ? (t = Math.min(t, o - n.y),
                this.element.style.marginTop = -t + "px",
                Oba(this, n.y, -t)) : t < a && (t = Math.max(0, t - n.y / 2),
                this.element.style.marginTop = -t + "px",
                Oba(this, n.y, -t)),
                this.currentPage = e,
                Pba.call(this, {
                    eventSource: this.innerTracker
                }))
            },
            update: function() {
                return !!Lba[this.id].animating && (Kba.console.log("image reference strip update"),
                !0)
            },
            destroy: function() {
                if (this.miniViewers)
                    for (var e in this.miniViewers)
                        this.miniViewers[e].destroy();
                this.element && this.element.parentNode.removeChild(this.element)
            }
        }),
        Rca = OpenSeadragon,
        Rca.DisplayRect = function(e, t, i, n, r, o) {
            Rca.Rect.apply(this, [e, t, i, n]),
            this.minLevel = r,
            this.maxLevel = o
        }
        ,
        Rca.extend(Rca.DisplayRect.prototype, Rca.Rect.prototype),
        Yca = OpenSeadragon,
        Yca.Spring = function(e) {
            var t = arguments;
            "object" != typeof e && (e = {
                initial: t.length && "number" == typeof t[0] ? t[0] : void 0,
                springStiffness: 1 < t.length ? t[1].springStiffness : 5,
                animationTime: 1 < t.length ? t[1].animationTime : 1.5
            }),
            Yca.console.assert("number" == typeof e.springStiffness && 0 !== e.springStiffness, "[OpenSeadragon.Spring] options.springStiffness must be a non-zero number"),
            Yca.console.assert("number" == typeof e.animationTime && 0 <= e.animationTime, "[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0"),
            e.exponential && (this._exponential = !0,
            delete e.exponential),
            Yca.extend(!0, this, e),
            this.current = {
                value: "number" == typeof this.initial ? this.initial : this._exponential ? 0 : 1,
                time: Yca.now()
            },
            Yca.console.assert(!this._exponential || 0 !== this.current.value, "[OpenSeadragon.Spring] value must be non-zero for exponential springs"),
            this.start = {
                value: this.current.value,
                time: this.current.time
            },
            this.target = {
                value: this.current.value,
                time: this.current.time
            },
            this._exponential && (this.start._logValue = Math.log(this.start.value),
            this.target._logValue = Math.log(this.target.value),
            this.current._logValue = Math.log(this.current.value))
        }
        ,
        Yca.Spring.prototype = {
            resetTo: function(e) {
                Yca.console.assert(!this._exponential || 0 !== e, "[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs"),
                this.start.value = this.target.value = this.current.value = e,
                this.start.time = this.target.time = this.current.time = Yca.now(),
                this._exponential && (this.start._logValue = Math.log(this.start.value),
                this.target._logValue = Math.log(this.target.value),
                this.current._logValue = Math.log(this.current.value))
            },
            springTo: function(e) {
                Yca.console.assert(!this._exponential || 0 !== e, "[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs"),
                this.start.value = this.current.value,
                this.start.time = this.current.time,
                this.target.value = e,
                this.target.time = this.start.time + 1e3 * this.animationTime,
                this._exponential && (this.start._logValue = Math.log(this.start.value),
                this.target._logValue = Math.log(this.target.value))
            },
            shiftBy: function(e) {
                this.start.value += e,
                this.target.value += e,
                this._exponential && (Yca.console.assert(0 !== this.target.value && 0 !== this.start.value, "[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs"),
                this.start._logValue = Math.log(this.start.value),
                this.target._logValue = Math.log(this.target.value))
            },
            setExponential: function(e) {
                this._exponential = e,
                this._exponential && (Yca.console.assert(0 !== this.current.value && 0 !== this.target.value && 0 !== this.start.value, "[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs"),
                this.start._logValue = Math.log(this.start.value),
                this.target._logValue = Math.log(this.target.value),
                this.current._logValue = Math.log(this.current.value))
            },
            update: function() {
                var e, t;
                this.current.time = Yca.now(),
                t = this._exponential ? (e = this.start._logValue,
                this.target._logValue) : (e = this.start.value,
                this.target.value);
                var i = this.current.time >= this.target.time ? t : e + (t - e) * function(e, t) {
                    return (1 - Math.exp(e * -t)) / (1 - Math.exp(-e))
                }(this.springStiffness, (this.current.time - this.start.time) / (this.target.time - this.start.time))
                  , n = this.current.value;
                return this._exponential ? this.current.value = Math.exp(i) : this.current.value = i,
                n != this.current.value
            },
            isAtTargetValue: function() {
                return this.current.value === this.target.value
            }
        },
        kda = OpenSeadragon,
        lda.prototype = {
            errorMsg: null,
            start: function() {
                var o = this
                  , e = this.abort;
                if (this.image = new Image,
                this.image.onload = function() {
                    o.finish(!0)
                }
                ,
                this.image.onabort = this.image.onerror = function() {
                    o.errorMsg = "Image load aborted",
                    o.finish(!1)
                }
                ,
                this.jobId = window.setTimeout(function() {
                    o.errorMsg = "Image load exceeded timeout (" + o.timeout + " ms)",
                    o.finish(!1)
                }, this.timeout),
                this.loadWithAjax)
                    this.request = kda.makeAjaxRequest({
                        url: this.src,
                        withCredentials: this.ajaxWithCredentials,
                        headers: this.ajaxHeaders,
                        responseType: "arraybuffer",
                        success: function(t) {
                            var i;
                            try {
                                i = new window.Blob([t.response])
                            } catch (e) {
                                var n = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
                                if ("TypeError" === e.name && n) {
                                    var r = new n;
                                    r.append(t.response),
                                    i = r.getBlob()
                                }
                            }
                            0 === i.size && (o.errorMsg = "Empty image response.",
                            o.finish(!1));
                            var e = (window.URL || window.webkitURL).createObjectURL(i);
                            o.image.src = e
                        },
                        error: function(e) {
                            o.errorMsg = "Image load aborted - XHR error",
                            o.finish(!1)
                        }
                    }),
                    this.abort = function() {
                        o.request.abort(),
                        "function" == typeof e && e()
                    }
                    ;
                else if (window.hasOwnProperty("osdSocket") && window.hasOwnProperty("osdSocketJobs")) {
                    var t = window.osdSocket
                      , i = window.osdSocketJobs
                      , n = !!window.hasOwnProperty("osdSocketUseBuffer") && window.osdSocketUseBuffer
                      , r = this.src.split("/")
                      , s = r[r.length - 1].split(".")[0].split("_")
                      , a = window.parseInt(s[0])
                      , l = window.parseInt(s[1])
                      , u = window.parseInt(r[r.length - 2])
                      , h = r[r.length - 3].replace("_files", "");
                    if (this.src in i == 0) {
                        var c = {
                            x: a,
                            y: l,
                            level: u,
                            caseName: h,
                            tileID: (i[this.src] = this).src
                        };
                        if (n) {
                            var d = window.BSON.serialize(c);
                            t.send(d)
                        } else
                            t.send(JSON.stringify(c))
                    } else
                        this.image.src = i[this.src].image.src
                } else
                    !1 !== this.crossOriginPolicy && (this.image.crossOrigin = this.crossOriginPolicy),
                    this.image.src = this.src
            },
            finish: function(e) {
                this.image.onload = this.image.onerror = this.image.onabort = null,
                e || (this.image = null),
                this.jobId && window.clearTimeout(this.jobId),
                this.callback(this)
            }
        },
        kda.ImageLoader = function(e) {
            kda.extend(!0, this, {
                jobLimit: kda.DEFAULT_SETTINGS.imageLoaderLimit,
                timeout: kda.DEFAULT_SETTINGS.timeout,
                jobQueue: [],
                jobsInProgress: 0
            }, e)
        }
        ,
        kda.ImageLoader.prototype = {
            addJob: function(t) {
                var i = this
                  , e = new lda({
                    src: t.src,
                    loadWithAjax: t.loadWithAjax,
                    ajaxHeaders: t.loadWithAjax ? t.ajaxHeaders : null,
                    crossOriginPolicy: t.crossOriginPolicy,
                    ajaxWithCredentials: t.ajaxWithCredentials,
                    callback: function(e) {
                        !function(e, t, i) {
                            e.jobsInProgress--,
                            (!e.jobLimit || e.jobsInProgress < e.jobLimit) && 0 < e.jobQueue.length && (e.jobQueue.shift().start(),
                            e.jobsInProgress++),
                            i(t.image, t.errorMsg, t.request)
                        }(i, e, t.callback)
                    },
                    abort: t.abort,
                    timeout: this.timeout
                });
                !this.jobLimit || this.jobsInProgress < this.jobLimit ? (e.start(),
                this.jobsInProgress++) : this.jobQueue.push(e)
            },
            clear: function() {
                for (var e = 0; e < this.jobQueue.length; e++) {
                    var t = this.jobQueue[e];
                    "function" == typeof t.abort && t.abort()
                }
                this.jobQueue = []
            }
        },
        Wda = OpenSeadragon,
        Wda.Tile = function(e, t, i, n, r, o, s, a, l, u) {
            this.level = e,
            this.x = t,
            this.y = i,
            this.bounds = n,
            this.sourceBounds = u,
            this.exists = r,
            this.url = o,
            this.context2D = s,
            this.loadWithAjax = a,
            this.ajaxHeaders = l,
            this.ajaxHeaders ? this.cacheKey = this.url + "+" + JSON.stringify(this.ajaxHeaders) : this.cacheKey = this.url,
            this.loaded = !1,
            this.loading = !1,
            this.element = null,
            this.imgElement = null,
            this.image = null,
            this.style = null,
            this.position = null,
            this.size = null,
            this.blendStart = null,
            this.opacity = null,
            this.squaredDistance = null,
            this.visibility = null,
            this.beingDrawn = !1,
            this.lastTouchTime = 0,
            this.isRightMost = !1,
            this.isBottomMost = !1
        }
        ,
        Wda.Tile.prototype = {
            toString: function() {
                return this.level + "/" + this.x + "_" + this.y
            },
            _hasTransparencyChannel: function() {
                return !!this.context2D || this.url.match(".png")
            },
            drawHTML: function(e) {
                this.cacheImageRecord ? this.loaded ? (this.element || (this.element = Wda.makeNeutralElement("div"),
                this.imgElement = this.cacheImageRecord.getImage().cloneNode(),
                this.imgElement.style.msInterpolationMode = "nearest-neighbor",
                this.imgElement.style.width = "100%",
                this.imgElement.style.height = "100%",
                this.style = this.element.style,
                this.style.position = "absolute"),
                this.element.parentNode != e && e.appendChild(this.element),
                this.imgElement.parentNode != this.element && this.element.appendChild(this.imgElement),
                this.style.top = this.position.y + "px",
                this.style.left = this.position.x + "px",
                this.style.height = this.size.y + "px",
                this.style.width = this.size.x + "px",
                Wda.setElementOpacity(this.element, this.opacity)) : Wda.console.warn("Attempting to draw tile %s when it's not yet loaded.", this.toString()) : Wda.console.warn("[Tile.drawHTML] attempting to draw tile %s when it's not cached", this.toString())
            },
            drawCanvas: function(e, t, i, n) {
                var r, o, s, a = this.position.times(Wda.pixelDensityRatio), l = this.size.times(Wda.pixelDensityRatio);
                this.context2D || this.cacheImageRecord ? (r = this.context2D || this.cacheImageRecord.getRenderedContext(),
                this.loaded && r ? (e.save(),
                e.globalAlpha = this.opacity,
                "number" == typeof i && 1 !== i && (a = a.times(i),
                l = l.times(i)),
                n instanceof Wda.Point && (a = a.plus(n)),
                1 === e.globalAlpha && this._hasTransparencyChannel() && e.clearRect(a.x, a.y, l.x, l.y),
                t({
                    context: e,
                    tile: this,
                    rendered: r
                }),
                s = this.sourceBounds ? (o = Math.min(this.sourceBounds.width, r.canvas.width),
                Math.min(this.sourceBounds.height, r.canvas.height)) : (o = r.canvas.width,
                r.canvas.height),
                e.drawImage(r.canvas, 0, 0, o, s, a.x, a.y, l.x, l.y),
                e.restore()) : Wda.console.warn("Attempting to draw tile %s when it's not yet loaded.", this.toString())) : Wda.console.warn("[Tile.drawCanvas] attempting to draw tile %s when it's not cached", this.toString())
            },
            getScaleForEdgeSmoothing: function() {
                var e;
                if (this.cacheImageRecord)
                    e = this.cacheImageRecord.getRenderedContext();
                else {
                    if (!this.context2D)
                        return Wda.console.warn("[Tile.drawCanvas] attempting to get tile scale %s when tile's not cached", this.toString()),
                        1;
                    e = this.context2D
                }
                return e.canvas.width / (this.size.x * Wda.pixelDensityRatio)
            },
            getTranslationForEdgeSmoothing: function(e, t, i) {
                var n = Math.max(1, Math.ceil((i.x - t.x) / 2))
                  , r = Math.max(1, Math.ceil((i.y - t.y) / 2));
                return new Wda.Point(n,r).minus(this.position.times(Wda.pixelDensityRatio).times(e || 1).apply(function(e) {
                    return e % 1
                }))
            },
            unload: function() {
                this.imgElement && this.imgElement.parentNode && this.imgElement.parentNode.removeChild(this.imgElement),
                this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element),
                this.element = null,
                this.imgElement = null,
                this.loaded = !1,
                this.loading = !1
            }
        },
        wea = OpenSeadragon,
        wea.OverlayPlacement = wea.Placement,
        wea.OverlayRotationMode = wea.freezeObject({
            NO_ROTATION: 1,
            EXACT: 2,
            BOUNDING_BOX: 3
        }),
        wea.Overlay = function(e, t, i) {
            var n;
            n = wea.isPlainObject(e) ? e : {
                element: e,
                location: t,
                placement: i
            },
            this.element = n.element,
            this.style = n.element.style,
            this._init(n)
        }
        ,
        wea.Overlay.prototype = {
            _init: function(e) {
                this.location = e.location,
                this.placement = void 0 === e.placement ? wea.Placement.TOP_LEFT : e.placement,
                this.onDraw = e.onDraw,
                this.checkResize = void 0 === e.checkResize || e.checkResize,
                this.width = void 0 === e.width ? null : e.width,
                this.height = void 0 === e.height ? null : e.height,
                this.rotationMode = e.rotationMode || wea.OverlayRotationMode.EXACT,
                this.location instanceof wea.Rect && (this.width = this.location.width,
                this.height = this.location.height,
                this.location = this.location.getTopLeft(),
                this.placement = wea.Placement.TOP_LEFT),
                this.scales = null !== this.width && null !== this.height,
                this.bounds = new wea.Rect(this.location.x,this.location.y,this.width,this.height),
                this.position = this.location
            },
            adjust: function(e, t) {
                var i = wea.Placement.properties[this.placement];
                i && (i.isHorizontallyCentered ? e.x -= t.x / 2 : i.isRight && (e.x -= t.x),
                i.isVerticallyCentered ? e.y -= t.y / 2 : i.isBottom && (e.y -= t.y))
            },
            destroy: function() {
                var e = this.element
                  , t = this.style;
                e.parentNode && (e.parentNode.removeChild(e),
                e.prevElementParent && (t.display = "none",
                document.body.appendChild(e))),
                this.onDraw = null,
                t.top = "",
                t.left = "",
                t.position = "",
                null !== this.width && (t.width = ""),
                null !== this.height && (t.height = "");
                var i = wea.getCssPropertyWithVendorPrefix("transformOrigin")
                  , n = wea.getCssPropertyWithVendorPrefix("transform");
                i && n && (t[i] = "",
                t[n] = "")
            },
            drawHTML: function(e, t) {
                var i = this.element;
                i.parentNode !== e && (i.prevElementParent = i.parentNode,
                i.prevNextSibling = i.nextSibling,
                e.appendChild(i),
                this.style.position = "absolute",
                this.size = wea.getElementSize(i));
                var n = this._getOverlayPositionAndSize(t)
                  , r = n.position
                  , o = this.size = n.size
                  , s = n.rotate;
                if (this.onDraw)
                    this.onDraw(r, o, this.element);
                else {
                    var a = this.style;
                    a.left = r.x + "px",
                    a.top = r.y + "px",
                    null !== this.width && (a.width = o.x + "px"),
                    null !== this.height && (a.height = o.y + "px");
                    var l = wea.getCssPropertyWithVendorPrefix("transformOrigin")
                      , u = wea.getCssPropertyWithVendorPrefix("transform");
                    l && u && (s ? (a[l] = this._getTransformOrigin(),
                    a[u] = "rotate(" + s + "deg)") : (a[l] = "",
                    a[u] = "")),
                    "none" !== a.display && (a.display = "block")
                }
            },
            _getOverlayPositionAndSize: function(e) {
                var t = e.pixelFromPoint(this.location, !0)
                  , i = this._getSizeInPixels(e);
                this.adjust(t, i);
                var n = 0;
                if (e.degrees && this.rotationMode !== wea.OverlayRotationMode.NO_ROTATION)
                    if (this.rotationMode === wea.OverlayRotationMode.BOUNDING_BOX && null !== this.width && null !== this.height) {
                        var r = new wea.Rect(t.x,t.y,i.x,i.y)
                          , o = this._getBoundingBox(r, e.degrees);
                        t = o.getTopLeft(),
                        i = o.getSize()
                    } else
                        n = e.degrees;
                return {
                    position: t,
                    size: i,
                    rotate: n
                }
            },
            _getSizeInPixels: function(e) {
                var t = this.size.x
                  , i = this.size.y;
                if (null !== this.width || null !== this.height) {
                    var n = e.deltaPixelsFromPointsNoRotate(new wea.Point(this.width || 0,this.height || 0), !0);
                    null !== this.width && (t = n.x),
                    null !== this.height && (i = n.y)
                }
                if (this.checkResize && (null === this.width || null === this.height)) {
                    var r = this.size = wea.getElementSize(this.element);
                    null === this.width && (t = r.x),
                    null === this.height && (i = r.y)
                }
                return new wea.Point(t,i)
            },
            _getBoundingBox: function(e, t) {
                var i = this._getPlacementPoint(e);
                return e.rotate(t, i).getBoundingBox()
            },
            _getPlacementPoint: function(e) {
                var t = new wea.Point(e.x,e.y)
                  , i = wea.Placement.properties[this.placement];
                return i && (i.isHorizontallyCentered ? t.x += e.width / 2 : i.isRight && (t.x += e.width),
                i.isVerticallyCentered ? t.y += e.height / 2 : i.isBottom && (t.y += e.height)),
                t
            },
            _getTransformOrigin: function() {
                var e = ""
                  , t = wea.Placement.properties[this.placement];
                return t && (t.isLeft ? e = "left" : t.isRight && (e = "right"),
                t.isTop ? e += " top" : t.isBottom && (e += " bottom")),
                e
            },
            update: function(e, t) {
                var i = wea.isPlainObject(e) ? e : {
                    location: e,
                    placement: t
                };
                this._init({
                    location: i.location || this.location,
                    placement: void 0 !== i.placement ? i.placement : this.placement,
                    onDraw: i.onDraw || this.onDraw,
                    checkResize: i.checkResize || this.checkResize,
                    width: void 0 !== i.width ? i.width : this.width,
                    height: void 0 !== i.height ? i.height : this.height,
                    rotationMode: i.rotationMode || this.rotationMode
                })
            },
            getBounds: function(e) {
                wea.console.assert(e, "A viewport must now be passed to Overlay.getBounds.");
                var t = this.width
                  , i = this.height;
                if (null === t || null === i) {
                    var n = e.deltaPointsFromPixelsNoRotate(this.size, !0);
                    null === t && (t = n.x),
                    null === i && (i = n.y)
                }
                var r = this.location.clone();
                return this.adjust(r, new wea.Point(t,i)),
                this._adjustBoundsForRotation(e, new wea.Rect(r.x,r.y,t,i))
            },
            _adjustBoundsForRotation: function(e, t) {
                if (!e || 0 === e.degrees || this.rotationMode === wea.OverlayRotationMode.EXACT)
                    return t;
                if (this.rotationMode !== wea.OverlayRotationMode.BOUNDING_BOX)
                    return t.rotate(-e.degrees, this._getPlacementPoint(t));
                if (null === this.width || null === this.height)
                    return t;
                var i = this._getOverlayPositionAndSize(e);
                return e.viewerElementToViewportRectangle(new wea.Rect(i.position.x,i.position.y,i.size.x,i.size.y))
            }
        },
        vfa = OpenSeadragon,
        vfa.Drawer = function(e) {
            vfa.console.assert(e.viewer, "[Drawer] options.viewer is required");
            var t = arguments;
            if (vfa.isPlainObject(e) || (e = {
                source: t[0],
                viewport: t[1],
                element: t[2]
            }),
            vfa.console.assert(e.viewport, "[Drawer] options.viewport is required"),
            vfa.console.assert(e.element, "[Drawer] options.element is required"),
            e.source && vfa.console.error("[Drawer] options.source is no longer accepted; use TiledImage instead"),
            this.viewer = e.viewer,
            this.viewport = e.viewport,
            this.debugGridColor = "string" == typeof e.debugGridColor ? [e.debugGridColor] : e.debugGridColor || vfa.DEFAULT_SETTINGS.debugGridColor,
            e.opacity && vfa.console.error("[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead"),
            this.useCanvas = vfa.supportsCanvas && (!this.viewer || this.viewer.useCanvas),
            this.container = vfa.getElement(e.element),
            this.canvas = vfa.makeNeutralElement(this.useCanvas ? "canvas" : "div"),
            this.context = this.useCanvas ? this.canvas.getContext("2d") : null,
            this.sketchCanvas = null,
            this.sketchContext = null,
            this.element = this.container,
            this.container.dir = "ltr",
            this.useCanvas) {
                var i = this._calculateCanvasSize();
                this.canvas.width = i.x,
                this.canvas.height = i.y
            }
            this.canvas.style.width = "100%",
            this.canvas.style.height = "100%",
            this.canvas.style.position = "absolute",
            vfa.setElementOpacity(this.canvas, this.opacity, !0),
            this.container.style.textAlign = "left",
            this.container.appendChild(this.canvas),
            this._imageSmoothingEnabled = !0
        }
        ,
        vfa.Drawer.prototype = {
            addOverlay: function(e, t, i, n) {
                return vfa.console.error("drawer.addOverlay is deprecated. Use viewer.addOverlay instead."),
                this.viewer.addOverlay(e, t, i, n),
                this
            },
            updateOverlay: function(e, t, i) {
                return vfa.console.error("drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead."),
                this.viewer.updateOverlay(e, t, i),
                this
            },
            removeOverlay: function(e) {
                return vfa.console.error("drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead."),
                this.viewer.removeOverlay(e),
                this
            },
            clearOverlays: function() {
                return vfa.console.error("drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead."),
                this.viewer.clearOverlays(),
                this
            },
            setOpacity: function(e) {
                vfa.console.error("drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.");
                for (var t = this.viewer.world, i = 0; i < t.getItemCount(); i++)
                    t.getItemAt(i).setOpacity(e);
                return this
            },
            getOpacity: function() {
                vfa.console.error("drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.");
                for (var e = this.viewer.world, t = 0, i = 0; i < e.getItemCount(); i++) {
                    var n = e.getItemAt(i).getOpacity();
                    t < n && (t = n)
                }
                return t
            },
            needsUpdate: function() {
                return vfa.console.error("[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead."),
                this.viewer.world.needsDraw()
            },
            numTilesLoaded: function() {
                return vfa.console.error("[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead."),
                this.viewer.tileCache.numTilesLoaded()
            },
            reset: function() {
                return vfa.console.error("[Drawer.reset] this function is deprecated. Use World.resetItems instead."),
                this.viewer.world.resetItems(),
                this
            },
            update: function() {
                return vfa.console.error("[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead."),
                this.clear(),
                this.viewer.world.draw(),
                this
            },
            canRotate: function() {
                return this.useCanvas
            },
            destroy: function() {
                this.canvas.width = 1,
                this.canvas.height = 1,
                this.sketchCanvas = null,
                this.sketchContext = null
            },
            clear: function() {
                if (this.canvas.innerHTML = "",
                this.useCanvas) {
                    var e = this._calculateCanvasSize();
                    if (this.canvas.width != e.x || this.canvas.height != e.y) {
                        if (this.canvas.width = e.x,
                        this.canvas.height = e.y,
                        null !== this.sketchCanvas) {
                            var t = this._calculateSketchCanvasSize();
                            this.sketchCanvas.width = t.x,
                            this.sketchCanvas.height = t.y
                        }
                        this._updateImageSmoothingEnabled()
                    }
                    this._clear()
                }
            },
            _clear: function(e, t) {
                if (this.useCanvas) {
                    var i = this._getContext(e);
                    if (t)
                        i.clearRect(t.x, t.y, t.width, t.height);
                    else {
                        var n = i.canvas;
                        i.clearRect(0, 0, n.width, n.height)
                    }
                }
            },
            viewportToDrawerRectangle: function(e) {
                var t = this.viewport.pixelFromPointNoRotate(e.getTopLeft(), !0)
                  , i = this.viewport.deltaPixelsFromPointsNoRotate(e.getSize(), !0);
                return new vfa.Rect(t.x * vfa.pixelDensityRatio,t.y * vfa.pixelDensityRatio,i.x * vfa.pixelDensityRatio,i.y * vfa.pixelDensityRatio)
            },
            drawTile: function(e, t, i, n, r) {
                if (vfa.console.assert(e, "[Drawer.drawTile] tile is required"),
                vfa.console.assert(t, "[Drawer.drawTile] drawingHandler is required"),
                this.useCanvas) {
                    var o = this._getContext(i);
                    n = n || 1,
                    e.drawCanvas(o, t, n, r)
                } else
                    e.drawHTML(this.canvas)
            },
            _getContext: function(e) {
                var t = this.context;
                if (e) {
                    if (null === this.sketchCanvas) {
                        this.sketchCanvas = document.createElement("canvas");
                        var i = this._calculateSketchCanvasSize();
                        if (this.sketchCanvas.width = i.x,
                        this.sketchCanvas.height = i.y,
                        this.sketchContext = this.sketchCanvas.getContext("2d"),
                        0 === this.viewport.getRotation()) {
                            var n = this;
                            this.viewer.addHandler("rotate", function e() {
                                if (0 !== n.viewport.getRotation()) {
                                    n.viewer.removeHandler("rotate", e);
                                    var t = n._calculateSketchCanvasSize();
                                    n.sketchCanvas.width = t.x,
                                    n.sketchCanvas.height = t.y
                                }
                            })
                        }
                    }
                    t = this.sketchContext
                }
                return t
            },
            saveContext: function(e) {
                this.useCanvas && this._getContext(e).save()
            },
            restoreContext: function(e) {
                this.useCanvas && this._getContext(e).restore()
            },
            setClip: function(e, t) {
                if (this.useCanvas) {
                    var i = this._getContext(t);
                    i.beginPath(),
                    i.rect(e.x, e.y, e.width, e.height),
                    i.clip()
                }
            },
            drawRectangle: function(e, t, i) {
                if (this.useCanvas) {
                    var n = this._getContext(i);
                    n.save(),
                    n.fillStyle = t,
                    n.fillRect(e.x, e.y, e.width, e.height),
                    n.restore()
                }
            },
            blendSketch: function(e, t, i, n) {
                var r = e;
                if (vfa.isPlainObject(r) || (r = {
                    opacity: e,
                    scale: t,
                    translate: i,
                    compositeOperation: n
                }),
                this.useCanvas && this.sketchCanvas) {
                    e = r.opacity,
                    n = r.compositeOperation;
                    var o = r.bounds;
                    if (this.context.save(),
                    this.context.globalAlpha = e,
                    n && (this.context.globalCompositeOperation = n),
                    o)
                        o.x < 0 && (o.width += o.x,
                        o.x = 0),
                        o.x + o.width > this.canvas.width && (o.width = this.canvas.width - o.x),
                        o.y < 0 && (o.height += o.y,
                        o.y = 0),
                        o.y + o.height > this.canvas.height && (o.height = this.canvas.height - o.y),
                        this.context.drawImage(this.sketchCanvas, o.x, o.y, o.width, o.height, o.x, o.y, o.width, o.height);
                    else {
                        t = r.scale || 1;
                        var s = (i = r.translate)instanceof vfa.Point ? i : new vfa.Point(0,0)
                          , a = 0
                          , l = 0;
                        if (i) {
                            var u = this.sketchCanvas.width - this.canvas.width
                              , h = this.sketchCanvas.height - this.canvas.height;
                            a = Math.round(u / 2),
                            l = Math.round(h / 2)
                        }
                        this.context.drawImage(this.sketchCanvas, s.x - a * t, s.y - l * t, (this.canvas.width + 2 * a) * t, (this.canvas.height + 2 * l) * t, -a, -l, this.canvas.width + 2 * a, this.canvas.height + 2 * l)
                    }
                    this.context.restore()
                }
            },
            drawDebugInfo: function(e, t, i, n) {
                if (this.useCanvas) {
                    var r = this.viewer.world.getIndexOfItem(n) % this.debugGridColor.length
                      , o = this.context;
                    o.save(),
                    o.lineWidth = 2 * vfa.pixelDensityRatio,
                    o.font = "small-caps bold " + 13 * vfa.pixelDensityRatio + "px arial",
                    o.strokeStyle = this.debugGridColor[r],
                    o.fillStyle = this.debugGridColor[r],
                    0 !== this.viewport.degrees && this._offsetForRotation({
                        degrees: this.viewport.degrees
                    }),
                    n.getRotation(!0) % 360 != 0 && this._offsetForRotation({
                        degrees: n.getRotation(!0),
                        point: n.viewport.pixelFromPointNoRotate(n._getRotationPoint(!0), !0)
                    }),
                    0 === n.viewport.degrees && n.getRotation(!0) % 360 == 0 && n._drawer.viewer.viewport.getFlip() && n._drawer._flip(),
                    o.strokeRect(e.position.x * vfa.pixelDensityRatio, e.position.y * vfa.pixelDensityRatio, e.size.x * vfa.pixelDensityRatio, e.size.y * vfa.pixelDensityRatio);
                    var s = (e.position.x + e.size.x / 2) * vfa.pixelDensityRatio
                      , a = (e.position.y + e.size.y / 2) * vfa.pixelDensityRatio;
                    o.translate(s, a),
                    o.rotate(Math.PI / 180 * -this.viewport.degrees),
                    o.translate(-s, -a),
                    0 === e.x && 0 === e.y && (o.fillText("Zoom: " + this.viewport.getZoom(), e.position.x * vfa.pixelDensityRatio, (e.position.y - 30) * vfa.pixelDensityRatio),
                    o.fillText("Pan: " + this.viewport.getBounds().toString(), e.position.x * vfa.pixelDensityRatio, (e.position.y - 20) * vfa.pixelDensityRatio)),
                    o.fillText("Level: " + e.level, (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 20) * vfa.pixelDensityRatio),
                    o.fillText("Column: " + e.x, (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 30) * vfa.pixelDensityRatio),
                    o.fillText("Row: " + e.y, (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 40) * vfa.pixelDensityRatio),
                    o.fillText("Order: " + i + " of " + t, (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 50) * vfa.pixelDensityRatio),
                    o.fillText("Size: " + e.size.toString(), (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 60) * vfa.pixelDensityRatio),
                    o.fillText("Position: " + e.position.toString(), (e.position.x + 10) * vfa.pixelDensityRatio, (e.position.y + 70) * vfa.pixelDensityRatio),
                    0 !== this.viewport.degrees && this._restoreRotationChanges(),
                    n.getRotation(!0) % 360 != 0 && this._restoreRotationChanges(),
                    0 === n.viewport.degrees && n.getRotation(!0) % 360 == 0 && n._drawer.viewer.viewport.getFlip() && n._drawer._flip(),
                    o.restore()
                }
            },
            debugRect: function(e) {
                if (this.useCanvas) {
                    var t = this.context;
                    t.save(),
                    t.lineWidth = 2 * vfa.pixelDensityRatio,
                    t.strokeStyle = this.debugGridColor[0],
                    t.fillStyle = this.debugGridColor[0],
                    t.strokeRect(e.x * vfa.pixelDensityRatio, e.y * vfa.pixelDensityRatio, e.width * vfa.pixelDensityRatio, e.height * vfa.pixelDensityRatio),
                    t.restore()
                }
            },
            setImageSmoothingEnabled: function(e) {
                this.useCanvas && (this._imageSmoothingEnabled = e,
                this._updateImageSmoothingEnabled(),
                this.viewer.forceRedraw())
            },
            _updateImageSmoothingEnabled: function() {
                var e = this.context;
                e.mozImageSmoothingEnabled = this._imageSmoothingEnabled,
                e.webkitImageSmoothingEnabled = this._imageSmoothingEnabled,
                e.msImageSmoothingEnabled = this._imageSmoothingEnabled,
                e.imageSmoothingEnabled = this._imageSmoothingEnabled
            },
            getCanvasSize: function(e) {
                var t = this._getContext(e).canvas;
                return new vfa.Point(t.width,t.height)
            },
            getCanvasCenter: function() {
                return new vfa.Point(this.canvas.width / 2,this.canvas.height / 2)
            },
            _offsetForRotation: function(e) {
                var t = e.point ? e.point.times(vfa.pixelDensityRatio) : this.getCanvasCenter()
                  , i = this._getContext(e.useSketch);
                i.save(),
                i.translate(t.x, t.y),
                this.viewer.viewport.flipped ? (i.rotate(Math.PI / 180 * -e.degrees),
                i.scale(-1, 1)) : i.rotate(Math.PI / 180 * e.degrees),
                i.translate(-t.x, -t.y)
            },
            _flip: function(e) {
                var t = (e = e || {}).point ? e.point.times(vfa.pixelDensityRatio) : this.getCanvasCenter()
                  , i = this._getContext(e.useSketch);
                i.translate(t.x, 0),
                i.scale(-1, 1),
                i.translate(-t.x, 0)
            },
            _restoreRotationChanges: function(e) {
                this._getContext(e).restore()
            },
            _calculateCanvasSize: function() {
                var e = vfa.pixelDensityRatio
                  , t = this.viewport.getContainerSize();
                return {
                    x: Math.round(t.x * e),
                    y: Math.round(t.y * e)
                }
            },
            _calculateSketchCanvasSize: function() {
                var e = this._calculateCanvasSize();
                if (0 === this.viewport.getRotation())
                    return e;
                var t = Math.ceil(Math.sqrt(e.x * e.x + e.y * e.y));
                return {
                    x: t,
                    y: t
                }
            }
        },
        _ga = OpenSeadragon,
        _ga.Viewport = function(e) {
            var t = arguments;
            t.length && t[0]instanceof _ga.Point && (e = {
                containerSize: t[0],
                contentSize: t[1],
                config: t[2]
            }),
            e.config && (_ga.extend(!0, e, e.config),
            delete e.config),
            this._margins = _ga.extend({
                left: 0,
                top: 0,
                right: 0,
                bottom: 0
            }, e.margins || {}),
            delete e.margins,
            _ga.extend(!0, this, {
                containerSize: null,
                contentSize: null,
                zoomPoint: null,
                viewer: null,
                springStiffness: _ga.DEFAULT_SETTINGS.springStiffness,
                animationTime: _ga.DEFAULT_SETTINGS.animationTime,
                minZoomImageRatio: _ga.DEFAULT_SETTINGS.minZoomImageRatio,
                maxZoomPixelRatio: _ga.DEFAULT_SETTINGS.maxZoomPixelRatio,
                visibilityRatio: _ga.DEFAULT_SETTINGS.visibilityRatio,
                wrapHorizontal: _ga.DEFAULT_SETTINGS.wrapHorizontal,
                wrapVertical: _ga.DEFAULT_SETTINGS.wrapVertical,
                defaultZoomLevel: _ga.DEFAULT_SETTINGS.defaultZoomLevel,
                minZoomLevel: _ga.DEFAULT_SETTINGS.minZoomLevel,
                maxZoomLevel: _ga.DEFAULT_SETTINGS.maxZoomLevel,
                degrees: _ga.DEFAULT_SETTINGS.degrees,
                flipped: _ga.DEFAULT_SETTINGS.flipped,
                homeFillsViewer: _ga.DEFAULT_SETTINGS.homeFillsViewer
            }, e),
            this._updateContainerInnerSize(),
            this.centerSpringX = new _ga.Spring({
                initial: 0,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this.centerSpringY = new _ga.Spring({
                initial: 0,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this.zoomSpring = new _ga.Spring({
                exponential: !0,
                initial: 1,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this._oldCenterX = this.centerSpringX.current.value,
            this._oldCenterY = this.centerSpringY.current.value,
            this._oldZoom = this.zoomSpring.current.value,
            this._setContentBounds(new _ga.Rect(0,0,1,1), 1),
            this.goHome(!0),
            this.update()
        }
        ,
        _ga.Viewport.prototype = {
            resetContentSize: function(e) {
                return _ga.console.assert(e, "[Viewport.resetContentSize] contentSize is required"),
                _ga.console.assert(e instanceof _ga.Point, "[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point"),
                _ga.console.assert(0 < e.x, "[Viewport.resetContentSize] contentSize.x must be greater than 0"),
                _ga.console.assert(0 < e.y, "[Viewport.resetContentSize] contentSize.y must be greater than 0"),
                this._setContentBounds(new _ga.Rect(0,0,1,e.y / e.x), e.x),
                this
            },
            setHomeBounds: function(e, t) {
                _ga.console.error("[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually."),
                this._setContentBounds(e, t)
            },
            _setContentBounds: function(e, t) {
                _ga.console.assert(e, "[Viewport._setContentBounds] bounds is required"),
                _ga.console.assert(e instanceof _ga.Rect, "[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect"),
                _ga.console.assert(0 < e.width, "[Viewport._setContentBounds] bounds.width must be greater than 0"),
                _ga.console.assert(0 < e.height, "[Viewport._setContentBounds] bounds.height must be greater than 0"),
                this._contentBoundsNoRotate = e.clone(),
                this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(t),
                this._contentBounds = e.rotate(this.degrees).getBoundingBox(),
                this._contentSize = this._contentBounds.getSize().times(t),
                this._contentAspectRatio = this._contentSize.x / this._contentSize.y,
                this.viewer && this.viewer.raiseEvent("reset-size", {
                    contentSize: this._contentSizeNoRotate.clone(),
                    contentFactor: t,
                    homeBounds: this._contentBoundsNoRotate.clone(),
                    contentBounds: this._contentBounds.clone()
                })
            },
            getHomeZoom: function() {
                if (this.defaultZoomLevel)
                    return this.defaultZoomLevel;
                var e = this._contentAspectRatio / this.getAspectRatio();
                return (this.homeFillsViewer ? 1 <= e ? e : 1 : 1 <= e ? 1 : e) / this._contentBounds.width
            },
            getHomeBounds: function() {
                return this.getHomeBoundsNoRotate().rotate(-this.getRotation())
            },
            getHomeBoundsNoRotate: function() {
                var e = this._contentBounds.getCenter()
                  , t = 1 / this.getHomeZoom()
                  , i = t / this.getAspectRatio();
                return new _ga.Rect(e.x - t / 2,e.y - i / 2,t,i)
            },
            goHome: function(e) {
                return this.viewer && this.viewer.raiseEvent("home", {
                    immediately: e
                }),
                this.fitBounds(this.getHomeBounds(), e)
            },
            getMinZoom: function() {
                var e = this.getHomeZoom();
                return this.minZoomLevel ? this.minZoomLevel : this.minZoomImageRatio * e
            },
            getMaxZoom: function() {
                var e = this.maxZoomLevel;
                return e || (e = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x,
                e /= this._contentBounds.width),
                Math.max(e, this.getHomeZoom())
            },
            getAspectRatio: function() {
                return this._containerInnerSize.x / this._containerInnerSize.y
            },
            getContainerSize: function() {
                return new _ga.Point(this.containerSize.x,this.containerSize.y)
            },
            getMargins: function() {
                return _ga.extend({}, this._margins)
            },
            setMargins: function(e) {
                _ga.console.assert("object" === _ga.type(e), "[Viewport.setMargins] margins must be an object"),
                this._margins = _ga.extend({
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0
                }, e),
                this._updateContainerInnerSize(),
                this.viewer && this.viewer.forceRedraw()
            },
            getBounds: function(e) {
                return this.getBoundsNoRotate(e).rotate(-this.getRotation())
            },
            getBoundsNoRotate: function(e) {
                var t = this.getCenter(e)
                  , i = 1 / this.getZoom(e)
                  , n = i / this.getAspectRatio();
                return new _ga.Rect(t.x - i / 2,t.y - n / 2,i,n)
            },
            getBoundsWithMargins: function(e) {
                return this.getBoundsNoRotateWithMargins(e).rotate(-this.getRotation(), this.getCenter(e))
            },
            getBoundsNoRotateWithMargins: function(e) {
                var t = this.getBoundsNoRotate(e)
                  , i = this._containerInnerSize.x * this.getZoom(e);
                return t.x -= this._margins.left / i,
                t.y -= this._margins.top / i,
                t.width += (this._margins.left + this._margins.right) / i,
                t.height += (this._margins.top + this._margins.bottom) / i,
                t
            },
            getCenter: function(e) {
                var t, i, n, r, o, s, a = new _ga.Point(this.centerSpringX.current.value,this.centerSpringY.current.value), l = new _ga.Point(this.centerSpringX.target.value,this.centerSpringY.target.value);
                return e ? a : this.zoomPoint ? (t = this.pixelFromPoint(this.zoomPoint, !0),
                r = (n = 1 / (i = this.getZoom())) / this.getAspectRatio(),
                o = new _ga.Rect(a.x - n / 2,a.y - r / 2,n,r),
                s = this._pixelFromPoint(this.zoomPoint, o).minus(t).divide(this._containerInnerSize.x * i),
                l.plus(s)) : l
            },
            getZoom: function(e) {
                return e ? this.zoomSpring.current.value : this.zoomSpring.target.value
            },
            _applyZoomConstraints: function(e) {
                return Math.max(Math.min(e, this.getMaxZoom()), this.getMinZoom())
            },
            _applyBoundaryConstraints: function(e) {
                var t = new _ga.Rect(e.x,e.y,e.width,e.height);
                if (this.wrapHorizontal)
                    ;
                else {
                    var i = this.visibilityRatio * t.width
                      , n = t.x + t.width
                      , r = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width
                      , o = this._contentBoundsNoRotate.x - n + i
                      , s = r - t.x - i;
                    i > this._contentBoundsNoRotate.width ? t.x += (o + s) / 2 : s < 0 ? t.x += s : 0 < o && (t.x += o)
                }
                if (this.wrapVertical)
                    ;
                else {
                    var a = this.visibilityRatio * t.height
                      , l = t.y + t.height
                      , u = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height
                      , h = this._contentBoundsNoRotate.y - l + a
                      , c = u - t.y - a;
                    a > this._contentBoundsNoRotate.height ? t.y += (h + c) / 2 : c < 0 ? t.y += c : 0 < h && (t.y += h)
                }
                return t
            },
            _raiseConstraintsEvent: function(e) {
                this.viewer && this.viewer.raiseEvent("constrain", {
                    immediately: e
                })
            },
            applyConstraints: function(e) {
                var t = this.getZoom()
                  , i = this._applyZoomConstraints(t);
                t !== i && this.zoomTo(i, this.zoomPoint, e);
                var n = this.getBoundsNoRotate()
                  , r = this._applyBoundaryConstraints(n);
                return this._raiseConstraintsEvent(e),
                n.x === r.x && n.y === r.y && !e || this.fitBounds(r.rotate(-this.getRotation()), e),
                this
            },
            ensureVisible: function(e) {
                return this.applyConstraints(e)
            },
            _fitBounds: function(e, t) {
                var i = (t = t || {}).immediately || !1
                  , n = t.constraints || !1
                  , r = this.getAspectRatio()
                  , o = e.getCenter()
                  , s = new _ga.Rect(e.x,e.y,e.width,e.height,e.degrees + this.getRotation()).getBoundingBox();
                s.getAspectRatio() >= r ? s.height = s.width / r : s.width = s.height * r,
                s.x = o.x - s.width / 2,
                s.y = o.y - s.height / 2;
                var a = 1 / s.width;
                if (n) {
                    var l = s.getAspectRatio()
                      , u = this._applyZoomConstraints(a);
                    a !== u && (a = u,
                    s.width = 1 / a,
                    s.x = o.x - s.width / 2,
                    s.height = s.width / l,
                    s.y = o.y - s.height / 2),
                    o = (s = this._applyBoundaryConstraints(s)).getCenter(),
                    this._raiseConstraintsEvent(i)
                }
                if (i)
                    return this.panTo(o, !0),
                    this.zoomTo(a, null, !0);
                this.panTo(this.getCenter(!0), !0),
                this.zoomTo(this.getZoom(!0), null, !0);
                var h = this.getBounds()
                  , c = this.getZoom();
                if (0 === c || Math.abs(a / c - 1) < 1e-8)
                    return this.zoomTo(a, !0),
                    this.panTo(o, i);
                var d = (s = s.rotate(-this.getRotation())).getTopLeft().times(a).minus(h.getTopLeft().times(c)).divide(a - c);
                return this.zoomTo(a, d, i)
            },
            fitBounds: function(e, t) {
                return this._fitBounds(e, {
                    immediately: t,
                    constraints: !1
                })
            },
            fitBoundsWithConstraints: function(e, t) {
                return this._fitBounds(e, {
                    immediately: t,
                    constraints: !0
                })
            },
            fitVertically: function(e) {
                var t = new _ga.Rect(this._contentBounds.x + this._contentBounds.width / 2,this._contentBounds.y,0,this._contentBounds.height);
                return this.fitBounds(t, e)
            },
            fitHorizontally: function(e) {
                var t = new _ga.Rect(this._contentBounds.x,this._contentBounds.y + this._contentBounds.height / 2,this._contentBounds.width,0);
                return this.fitBounds(t, e)
            },
            getConstrainedBounds: function(e) {
                var t;
                return t = this.getBounds(e),
                this._applyBoundaryConstraints(t)
            },
            panBy: function(e, t) {
                var i = new _ga.Point(this.centerSpringX.target.value,this.centerSpringY.target.value);
                return this.panTo(i.plus(e), t)
            },
            panTo: function(e, t) {
                return t ? (this.centerSpringX.resetTo(e.x),
                this.centerSpringY.resetTo(e.y)) : (this.centerSpringX.springTo(e.x),
                this.centerSpringY.springTo(e.y)),
                this.viewer && this.viewer.raiseEvent("pan", {
                    center: e,
                    immediately: t
                }),
                this
            },
            zoomBy: function(e, t, i) {
                return this.zoomTo(this.zoomSpring.target.value * e, t, i)
            },
            zoomTo: function(e, t, i) {
                var n = this;
                return this.zoomPoint = t instanceof _ga.Point && !isNaN(t.x) && !isNaN(t.y) ? t : null,
                i ? this._adjustCenterSpringsForZoomPoint(function() {
                    n.zoomSpring.resetTo(e)
                }) : this.zoomSpring.springTo(e),
                this.viewer && this.viewer.raiseEvent("zoom", {
                    zoom: e,
                    refPoint: t,
                    immediately: i
                }),
                this
            },
            setRotation: function(e) {
                return this.viewer && this.viewer.drawer.canRotate() && (this.degrees = _ga.positiveModulo(e, 360),
                this._setContentBounds(this.viewer.world.getHomeBounds(), this.viewer.world.getContentFactor()),
                this.viewer.forceRedraw(),
                this.viewer.raiseEvent("rotate", {
                    degrees: e
                })),
                this
            },
            getRotation: function() {
                return this.degrees
            },
            resize: function(e, t) {
                var i, n = this.getBoundsNoRotate(), r = n;
                return this.containerSize.x = e.x,
                this.containerSize.y = e.y,
                this._updateContainerInnerSize(),
                t && (i = e.x / this.containerSize.x,
                r.width = n.width * i,
                r.height = r.width / this.getAspectRatio()),
                this.viewer && this.viewer.raiseEvent("resize", {
                    newContainerSize: e,
                    maintain: t
                }),
                this.fitBounds(r, !0)
            },
            _updateContainerInnerSize: function() {
                this._containerInnerSize = new _ga.Point(Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom)))
            },
            update: function() {
                var e = this;
                this._adjustCenterSpringsForZoomPoint(function() {
                    e.zoomSpring.update()
                }),
                this.centerSpringX.update(),
                this.centerSpringY.update();
                var t = this.centerSpringX.current.value !== this._oldCenterX || this.centerSpringY.current.value !== this._oldCenterY || this.zoomSpring.current.value !== this._oldZoom;
                return this._oldCenterX = this.centerSpringX.current.value,
                this._oldCenterY = this.centerSpringY.current.value,
                this._oldZoom = this.zoomSpring.current.value,
                t
            },
            _adjustCenterSpringsForZoomPoint: function(e) {
                if (this.zoomPoint) {
                    var t = this.pixelFromPoint(this.zoomPoint, !0);
                    e();
                    var i = this.pixelFromPoint(this.zoomPoint, !0).minus(t)
                      , n = this.deltaPointsFromPixels(i, !0);
                    this.centerSpringX.shiftBy(n.x),
                    this.centerSpringY.shiftBy(n.y),
                    this.zoomSpring.isAtTargetValue() && (this.zoomPoint = null)
                } else
                    e()
            },
            deltaPixelsFromPointsNoRotate: function(e, t) {
                return e.times(this._containerInnerSize.x * this.getZoom(t))
            },
            deltaPixelsFromPoints: function(e, t) {
                return this.deltaPixelsFromPointsNoRotate(e.rotate(this.getRotation()), t)
            },
            deltaPointsFromPixelsNoRotate: function(e, t) {
                return e.divide(this._containerInnerSize.x * this.getZoom(t))
            },
            deltaPointsFromPixels: function(e, t) {
                return this.deltaPointsFromPixelsNoRotate(e, t).rotate(-this.getRotation())
            },
            pixelFromPointNoRotate: function(e, t) {
                return this._pixelFromPointNoRotate(e, this.getBoundsNoRotate(t))
            },
            pixelFromPoint: function(e, t) {
                return this._pixelFromPoint(e, this.getBoundsNoRotate(t))
            },
            _pixelFromPointNoRotate: function(e, t) {
                return e.minus(t.getTopLeft()).times(this._containerInnerSize.x / t.width).plus(new _ga.Point(this._margins.left,this._margins.top))
            },
            _pixelFromPoint: function(e, t) {
                return this._pixelFromPointNoRotate(e.rotate(this.getRotation(), this.getCenter(!0)), t)
            },
            pointFromPixelNoRotate: function(e, t) {
                var i = this.getBoundsNoRotate(t);
                return e.minus(new _ga.Point(this._margins.left,this._margins.top)).divide(this._containerInnerSize.x / i.width).plus(i.getTopLeft())
            },
            pointFromPixel: function(e, t) {
                return this.pointFromPixelNoRotate(e, t).rotate(-this.getRotation(), this.getCenter(!0))
            },
            _viewportToImageDelta: function(e, t) {
                var i = this._contentBoundsNoRotate.width;
                return new _ga.Point(e * this._contentSizeNoRotate.x / i,t * this._contentSizeNoRotate.x / i)
            },
            viewportToImageCoordinates: function(e, t) {
                if (e instanceof _ga.Point)
                    return this.viewportToImageCoordinates(e.x, e.y);
                if (this.viewer) {
                    var i = this.viewer.world.getItemCount();
                    if (1 < i)
                        _ga.console.error("[Viewport.viewportToImageCoordinates] is not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.");
                    else if (1 === i)
                        return this.viewer.world.getItemAt(0).viewportToImageCoordinates(e, t, !0)
                }
                return this._viewportToImageDelta(e - this._contentBoundsNoRotate.x, t - this._contentBoundsNoRotate.y)
            },
            _imageToViewportDelta: function(e, t) {
                var i = this._contentBoundsNoRotate.width;
                return new _ga.Point(e / this._contentSizeNoRotate.x * i,t / this._contentSizeNoRotate.x * i)
            },
            imageToViewportCoordinates: function(e, t) {
                if (e instanceof _ga.Point)
                    return this.imageToViewportCoordinates(e.x, e.y);
                if (this.viewer) {
                    var i = this.viewer.world.getItemCount();
                    if (1 < i)
                        _ga.console.error("[Viewport.imageToViewportCoordinates] is not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.");
                    else if (1 === i)
                        return this.viewer.world.getItemAt(0).imageToViewportCoordinates(e, t, !0)
                }
                var n = this._imageToViewportDelta(e, t);
                return n.x += this._contentBoundsNoRotate.x,
                n.y += this._contentBoundsNoRotate.y,
                n
            },
            imageToViewportRectangle: function(e, t, i, n) {
                var r = e;
                if (r instanceof _ga.Rect || (r = new _ga.Rect(e,t,i,n)),
                this.viewer) {
                    var o = this.viewer.world.getItemCount();
                    if (1 < o)
                        _ga.console.error("[Viewport.imageToViewportRectangle] is not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.");
                    else if (1 === o)
                        return this.viewer.world.getItemAt(0).imageToViewportRectangle(e, t, i, n, !0)
                }
                var s = this.imageToViewportCoordinates(r.x, r.y)
                  , a = this._imageToViewportDelta(r.width, r.height);
                return new _ga.Rect(s.x,s.y,a.x,a.y,r.degrees)
            },
            viewportToImageRectangle: function(e, t, i, n) {
                var r = e;
                if (r instanceof _ga.Rect || (r = new _ga.Rect(e,t,i,n)),
                this.viewer) {
                    var o = this.viewer.world.getItemCount();
                    if (1 < o)
                        _ga.console.error("[Viewport.viewportToImageRectangle] is not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.");
                    else if (1 === o)
                        return this.viewer.world.getItemAt(0).viewportToImageRectangle(e, t, i, n, !0)
                }
                var s = this.viewportToImageCoordinates(r.x, r.y)
                  , a = this._viewportToImageDelta(r.width, r.height);
                return new _ga.Rect(s.x,s.y,a.x,a.y,r.degrees)
            },
            viewerElementToImageCoordinates: function(e) {
                var t = this.pointFromPixel(e, !0);
                return this.viewportToImageCoordinates(t)
            },
            imageToViewerElementCoordinates: function(e) {
                var t = this.imageToViewportCoordinates(e);
                return this.pixelFromPoint(t, !0)
            },
            windowToImageCoordinates: function(e) {
                _ga.console.assert(this.viewer, "[Viewport.windowToImageCoordinates] the viewport must have a viewer.");
                var t = e.minus(_ga.getElementPosition(this.viewer.element));
                return this.viewerElementToImageCoordinates(t)
            },
            imageToWindowCoordinates: function(e) {
                return _ga.console.assert(this.viewer, "[Viewport.imageToWindowCoordinates] the viewport must have a viewer."),
                this.imageToViewerElementCoordinates(e).plus(_ga.getElementPosition(this.viewer.element))
            },
            viewerElementToViewportCoordinates: function(e) {
                return this.pointFromPixel(e, !0)
            },
            viewportToViewerElementCoordinates: function(e) {
                return this.pixelFromPoint(e, !0)
            },
            viewerElementToViewportRectangle: function(e) {
                return _ga.Rect.fromSummits(this.pointFromPixel(e.getTopLeft(), !0), this.pointFromPixel(e.getTopRight(), !0), this.pointFromPixel(e.getBottomLeft(), !0))
            },
            viewportToViewerElementRectangle: function(e) {
                return _ga.Rect.fromSummits(this.pixelFromPoint(e.getTopLeft(), !0), this.pixelFromPoint(e.getTopRight(), !0), this.pixelFromPoint(e.getBottomLeft(), !0))
            },
            windowToViewportCoordinates: function(e) {
                _ga.console.assert(this.viewer, "[Viewport.windowToViewportCoordinates] the viewport must have a viewer.");
                var t = e.minus(_ga.getElementPosition(this.viewer.element));
                return this.viewerElementToViewportCoordinates(t)
            },
            viewportToWindowCoordinates: function(e) {
                return _ga.console.assert(this.viewer, "[Viewport.viewportToWindowCoordinates] the viewport must have a viewer."),
                this.viewportToViewerElementCoordinates(e).plus(_ga.getElementPosition(this.viewer.element))
            },
            viewportToImageZoom: function(e) {
                if (this.viewer) {
                    var t = this.viewer.world.getItemCount();
                    if (1 < t)
                        _ga.console.error("[Viewport.viewportToImageZoom] is not accurate with multi-image.");
                    else if (1 === t)
                        return this.viewer.world.getItemAt(0).viewportToImageZoom(e)
                }
                var i = this._contentSizeNoRotate.x;
                return e * (this._containerInnerSize.x / i * this._contentBoundsNoRotate.width)
            },
            imageToViewportZoom: function(e) {
                if (this.viewer) {
                    var t = this.viewer.world.getItemCount();
                    if (1 < t)
                        _ga.console.error("[Viewport.imageToViewportZoom] is not accurate with multi-image.");
                    else if (1 === t)
                        return this.viewer.world.getItemAt(0).imageToViewportZoom(e)
                }
                return e * (this._contentSizeNoRotate.x / this._containerInnerSize.x / this._contentBoundsNoRotate.width)
            },
            toggleFlip: function() {
                return this.setFlip(!this.getFlip()),
                this
            },
            getFlip: function() {
                return this.flipped
            },
            setFlip: function(e) {
                return this.flipped === e || (this.flipped = e,
                this.viewer.navigator && this.viewer.navigator.setFlip(this.getFlip()),
                this.viewer.forceRedraw(),
                this.viewer.raiseEvent("flip", {
                    flipped: e
                })),
                this
            }
        },
        Eka = OpenSeadragon,
        Eka.TiledImage = function(e) {
            var t = this;
            Eka.console.assert(e.tileCache, "[TiledImage] options.tileCache is required"),
            Eka.console.assert(e.drawer, "[TiledImage] options.drawer is required"),
            Eka.console.assert(e.viewer, "[TiledImage] options.viewer is required"),
            Eka.console.assert(e.imageLoader, "[TiledImage] options.imageLoader is required"),
            Eka.console.assert(e.source, "[TiledImage] options.source is required"),
            Eka.console.assert(!e.clip || e.clip instanceof Eka.Rect, "[TiledImage] options.clip must be an OpenSeadragon.Rect if present"),
            Eka.EventSource.call(this),
            this._tileCache = e.tileCache,
            delete e.tileCache,
            this._drawer = e.drawer,
            delete e.drawer,
            this._imageLoader = e.imageLoader,
            delete e.imageLoader,
            e.clip instanceof Eka.Rect && (this._clip = e.clip.clone()),
            delete e.clip;
            var i = e.x || 0;
            delete e.x;
            var n = e.y || 0;
            delete e.y,
            this.normHeight = e.source.dimensions.y / e.source.dimensions.x,
            this.contentAspectX = e.source.dimensions.x / e.source.dimensions.y;
            var r = 1;
            e.width ? (r = e.width,
            delete e.width,
            e.height && (Eka.console.error("specifying both width and height to a tiledImage is not supported"),
            delete e.height)) : e.height && (r = e.height / this.normHeight,
            delete e.height);
            var o = e.fitBounds;
            delete e.fitBounds;
            var s = e.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;
            delete e.fitBoundsPlacement;
            var a = e.degrees || 0;
            delete e.degrees,
            Eka.extend(!0, this, {
                viewer: null,
                tilesMatrix: {},
                coverage: {},
                loadingCoverage: {},
                lastDrawn: [],
                lastResetTime: 0,
                _midDraw: !1,
                _needsDraw: !0,
                _hasOpaqueTile: !1,
                _tilesLoading: 0,
                springStiffness: Eka.DEFAULT_SETTINGS.springStiffness,
                animationTime: Eka.DEFAULT_SETTINGS.animationTime,
                minZoomImageRatio: Eka.DEFAULT_SETTINGS.minZoomImageRatio,
                wrapHorizontal: Eka.DEFAULT_SETTINGS.wrapHorizontal,
                wrapVertical: Eka.DEFAULT_SETTINGS.wrapVertical,
                immediateRender: Eka.DEFAULT_SETTINGS.immediateRender,
                blendTime: Eka.DEFAULT_SETTINGS.blendTime,
                alwaysBlend: Eka.DEFAULT_SETTINGS.alwaysBlend,
                minPixelRatio: Eka.DEFAULT_SETTINGS.minPixelRatio,
                smoothTileEdgesMinZoom: Eka.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,
                iOSDevice: Eka.DEFAULT_SETTINGS.iOSDevice,
                debugMode: Eka.DEFAULT_SETTINGS.debugMode,
                crossOriginPolicy: Eka.DEFAULT_SETTINGS.crossOriginPolicy,
                ajaxWithCredentials: Eka.DEFAULT_SETTINGS.ajaxWithCredentials,
                placeholderFillStyle: Eka.DEFAULT_SETTINGS.placeholderFillStyle,
                opacity: Eka.DEFAULT_SETTINGS.opacity,
                preload: Eka.DEFAULT_SETTINGS.preload,
                compositeOperation: Eka.DEFAULT_SETTINGS.compositeOperation
            }, e),
            this._preload = this.preload,
            delete this.preload,
            this._fullyLoaded = !1,
            this._xSpring = new Eka.Spring({
                initial: i,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this._ySpring = new Eka.Spring({
                initial: n,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this._scaleSpring = new Eka.Spring({
                initial: r,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this._degreesSpring = new Eka.Spring({
                initial: a,
                springStiffness: this.springStiffness,
                animationTime: this.animationTime
            }),
            this._updateForScale(),
            o && this.fitBounds(o, s, !0),
            this._drawingHandler = function(e) {
                t.viewer.raiseEvent("tile-drawing", Eka.extend({
                    tiledImage: t
                }, e))
            }
        }
        ,
        Eka.extend(Eka.TiledImage.prototype, Eka.EventSource.prototype, {
            needsDraw: function() {
                return this._needsDraw
            },
            getFullyLoaded: function() {
                return this._fullyLoaded
            },
            _setFullyLoaded: function(e) {
                e !== this._fullyLoaded && (this._fullyLoaded = e,
                this.raiseEvent("fully-loaded-change", {
                    fullyLoaded: this._fullyLoaded
                }))
            },
            reset: function() {
                this._tileCache.clearTilesFor(this),
                this.lastResetTime = Eka.now(),
                this._needsDraw = !0
            },
            update: function() {
                var e = this._xSpring.update()
                  , t = this._ySpring.update()
                  , i = this._scaleSpring.update()
                  , n = this._degreesSpring.update();
                return !!(e || t || i || n) && (this._updateForScale(),
                this._needsDraw = !0)
            },
            draw: function() {
                0 !== this.opacity || this._preload ? (this._midDraw = !0,
                this._updateViewport(),
                this._midDraw = !1) : this._needsDraw = !1
            },
            destroy: function() {
                this.reset()
            },
            getBounds: function(e) {
                return this.getBoundsNoRotate(e).rotate(this.getRotation(e), this._getRotationPoint(e))
            },
            getBoundsNoRotate: function(e) {
                return e ? new Eka.Rect(this._xSpring.current.value,this._ySpring.current.value,this._worldWidthCurrent,this._worldHeightCurrent) : new Eka.Rect(this._xSpring.target.value,this._ySpring.target.value,this._worldWidthTarget,this._worldHeightTarget)
            },
            getWorldBounds: function() {
                return Eka.console.error("[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead"),
                this.getBounds()
            },
            getClippedBounds: function(e) {
                var t = this.getBoundsNoRotate(e);
                if (this._clip) {
                    var i = (e ? this._worldWidthCurrent : this._worldWidthTarget) / this.source.dimensions.x
                      , n = this._clip.times(i);
                    t = new Eka.Rect(t.x + n.x,t.y + n.y,n.width,n.height)
                }
                return t.rotate(this.getRotation(e), this._getRotationPoint(e))
            },
            getContentSize: function() {
                return new Eka.Point(this.source.dimensions.x,this.source.dimensions.y)
            },
            _viewportToImageDelta: function(e, t, i) {
                var n = i ? this._scaleSpring.current.value : this._scaleSpring.target.value;
                return new Eka.Point(e * (this.source.dimensions.x / n),t * (this.source.dimensions.y * this.contentAspectX / n))
            },
            viewportToImageCoordinates: function(e, t, i) {
                var n;
                return n = (n = e instanceof Eka.Point ? (i = t,
                e) : new Eka.Point(e,t)).rotate(-this.getRotation(i), this._getRotationPoint(i)),
                i ? this._viewportToImageDelta(n.x - this._xSpring.current.value, n.y - this._ySpring.current.value) : this._viewportToImageDelta(n.x - this._xSpring.target.value, n.y - this._ySpring.target.value)
            },
            _imageToViewportDelta: function(e, t, i) {
                var n = i ? this._scaleSpring.current.value : this._scaleSpring.target.value;
                return new Eka.Point(e / this.source.dimensions.x * n,t / this.source.dimensions.y / this.contentAspectX * n)
            },
            imageToViewportCoordinates: function(e, t, i) {
                e instanceof Eka.Point && (i = t,
                t = e.y,
                e = e.x);
                var n = this._imageToViewportDelta(e, t);
                return i ? (n.x += this._xSpring.current.value,
                n.y += this._ySpring.current.value) : (n.x += this._xSpring.target.value,
                n.y += this._ySpring.target.value),
                n.rotate(this.getRotation(i), this._getRotationPoint(i))
            },
            imageToViewportRectangle: function(e, t, i, n, r) {
                var o = e;
                o instanceof Eka.Rect ? r = t : o = new Eka.Rect(e,t,i,n);
                var s = this.imageToViewportCoordinates(o.getTopLeft(), r)
                  , a = this._imageToViewportDelta(o.width, o.height, r);
                return new Eka.Rect(s.x,s.y,a.x,a.y,o.degrees + this.getRotation(r))
            },
            viewportToImageRectangle: function(e, t, i, n, r) {
                var o = e;
                e instanceof Eka.Rect ? r = t : o = new Eka.Rect(e,t,i,n);
                var s = this.viewportToImageCoordinates(o.getTopLeft(), r)
                  , a = this._viewportToImageDelta(o.width, o.height, r);
                return new Eka.Rect(s.x,s.y,a.x,a.y,o.degrees - this.getRotation(r))
            },
            viewerElementToImageCoordinates: function(e) {
                var t = this.viewport.pointFromPixel(e, !0);
                return this.viewportToImageCoordinates(t)
            },
            imageToViewerElementCoordinates: function(e) {
                var t = this.imageToViewportCoordinates(e);
                return this.viewport.pixelFromPoint(t, !0)
            },
            windowToImageCoordinates: function(e) {
                var t = e.minus(OpenSeadragon.getElementPosition(this.viewer.element));
                return this.viewerElementToImageCoordinates(t)
            },
            imageToWindowCoordinates: function(e) {
                return this.imageToViewerElementCoordinates(e).plus(OpenSeadragon.getElementPosition(this.viewer.element))
            },
            _viewportToTiledImageRectangle: function(e) {
                var t = this._scaleSpring.current.value;
                return e = e.rotate(-this.getRotation(!0), this._getRotationPoint(!0)),
                new Eka.Rect((e.x - this._xSpring.current.value) / t,(e.y - this._ySpring.current.value) / t,e.width / t,e.height / t,e.degrees)
            },
            viewportToImageZoom: function(e) {
                return this._scaleSpring.current.value * this.viewport._containerInnerSize.x / this.source.dimensions.x * e
            },
            imageToViewportZoom: function(e) {
                return e / (this._scaleSpring.current.value * this.viewport._containerInnerSize.x / this.source.dimensions.x)
            },
            setPosition: function(e, t) {
                var i = this._xSpring.target.value === e.x && this._ySpring.target.value === e.y;
                if (t) {
                    if (i && this._xSpring.current.value === e.x && this._ySpring.current.value === e.y)
                        return;
                    this._xSpring.resetTo(e.x),
                    this._ySpring.resetTo(e.y),
                    this._needsDraw = !0
                } else {
                    if (i)
                        return;
                    this._xSpring.springTo(e.x),
                    this._ySpring.springTo(e.y),
                    this._needsDraw = !0
                }
                i || this._raiseBoundsChange()
            },
            setWidth: function(e, t) {
                this._setScale(e, t)
            },
            setHeight: function(e, t) {
                this._setScale(e / this.normHeight, t)
            },
            fitBounds: function(e, t, i) {
                t = t || Eka.Placement.CENTER;
                var n = Eka.Placement.properties[t]
                  , r = this.contentAspectX
                  , o = 0
                  , s = 0
                  , a = 1
                  , l = 1;
                if (this._clip && (r = this._clip.getAspectRatio(),
                a = this._clip.width / this.source.dimensions.x,
                l = this._clip.height / this.source.dimensions.y,
                s = e.getAspectRatio() > r ? (o = this._clip.x / this._clip.height * e.height,
                this._clip.y / this._clip.height * e.height) : (o = this._clip.x / this._clip.width * e.width,
                this._clip.y / this._clip.width * e.width)),
                e.getAspectRatio() > r) {
                    var u = e.height / l
                      , h = 0;
                    n.isHorizontallyCentered ? h = (e.width - e.height * r) / 2 : n.isRight && (h = e.width - e.height * r),
                    this.setPosition(new Eka.Point(e.x - o + h,e.y - s), i),
                    this.setHeight(u, i)
                } else {
                    var c = e.width / a
                      , d = 0;
                    n.isVerticallyCentered ? d = (e.height - e.width / r) / 2 : n.isBottom && (d = e.height - e.width / r),
                    this.setPosition(new Eka.Point(e.x - o,e.y - s + d), i),
                    this.setWidth(c, i)
                }
            },
            getClip: function() {
                return this._clip ? this._clip.clone() : null
            },
            setClip: function(e) {
                Eka.console.assert(!e || e instanceof Eka.Rect, "[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null"),
                e instanceof Eka.Rect ? this._clip = e.clone() : this._clip = null,
                this._needsDraw = !0,
                this.raiseEvent("clip-change")
            },
            getOpacity: function() {
                return this.opacity
            },
            setOpacity: function(e) {
                e !== this.opacity && (this.opacity = e,
                this._needsDraw = !0,
                this.raiseEvent("opacity-change", {
                    opacity: this.opacity
                }))
            },
            getPreload: function() {
                return this._preload
            },
            setPreload: function(e) {
                this._preload = !!e,
                this._needsDraw = !0
            },
            getRotation: function(e) {
                return e ? this._degreesSpring.current.value : this._degreesSpring.target.value
            },
            setRotation: function(e, t) {
                this._degreesSpring.target.value === e && this._degreesSpring.isAtTargetValue() || (t ? this._degreesSpring.resetTo(e) : this._degreesSpring.springTo(e),
                this._needsDraw = !0,
                this._raiseBoundsChange())
            },
            _getRotationPoint: function(e) {
                return this.getBoundsNoRotate(e).getCenter()
            },
            getCompositeOperation: function() {
                return this.compositeOperation
            },
            setCompositeOperation: function(e) {
                e !== this.compositeOperation && (this.compositeOperation = e,
                this._needsDraw = !0,
                this.raiseEvent("composite-operation-change", {
                    compositeOperation: this.compositeOperation
                }))
            },
            _setScale: function(e, t) {
                var i = this._scaleSpring.target.value === e;
                if (t) {
                    if (i && this._scaleSpring.current.value === e)
                        return;
                    this._scaleSpring.resetTo(e),
                    this._updateForScale(),
                    this._needsDraw = !0
                } else {
                    if (i)
                        return;
                    this._scaleSpring.springTo(e),
                    this._updateForScale(),
                    this._needsDraw = !0
                }
                i || this._raiseBoundsChange()
            },
            _updateForScale: function() {
                this._worldWidthTarget = this._scaleSpring.target.value,
                this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value,
                this._worldWidthCurrent = this._scaleSpring.current.value,
                this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value
            },
            _raiseBoundsChange: function() {
                this.raiseEvent("bounds-change")
            },
            _isBottomItem: function() {
                return this.viewer.world.getItemAt(0) === this
            },
            _getLevelsInterval: function() {
                var e = Math.max(this.source.minLevel, Math.floor(Math.log(this.minZoomImageRatio) / Math.log(2)))
                  , t = this.viewport.deltaPixelsFromPointsNoRotate(this.source.getPixelRatio(0), !0).x * this._scaleSpring.current.value
                  , i = Math.min(Math.abs(this.source.maxLevel), Math.abs(Math.floor(Math.log(t / this.minPixelRatio) / Math.log(2))));
                return i = Math.max(i, this.source.minLevel || 0),
                {
                    lowestLevel: e = Math.min(e, i),
                    highestLevel: i
                }
            },
            _updateViewport: function() {
                for (this._needsDraw = !1,
                this._tilesLoading = 0,
                this.loadingCoverage = {}; 0 < this.lastDrawn.length; )
                    this.lastDrawn.pop().beingDrawn = !1;
                var e = this.viewport
                  , t = this._viewportToTiledImageRectangle(e.getBoundsWithMargins(!0));
                if (!this.wrapHorizontal && !this.wrapVertical) {
                    var i = this._viewportToTiledImageRectangle(this.getClippedBounds(!0));
                    if (null === (t = t.intersection(i)))
                        return
                }
                for (var n = this._getLevelsInterval(), r = n.lowestLevel, o = n.highestLevel, s = null, a = !1, l = Eka.now(), u = o; r <= u; u--) {
                    var h = !1
                      , c = e.deltaPixelsFromPointsNoRotate(this.source.getPixelRatio(u), !0).x * this._scaleSpring.current.value;
                    if (u === r || !a && c >= this.minPixelRatio)
                        a = h = !0;
                    else if (!a)
                        continue;
                    var d = e.deltaPixelsFromPointsNoRotate(this.source.getPixelRatio(u), !1).x * this._scaleSpring.current.value
                      , f = e.deltaPixelsFromPointsNoRotate(this.source.getPixelRatio(Math.max(this.source.getClosestLevel(), 0)), !1).x * this._scaleSpring.current.value
                      , p = this.immediateRender ? 1 : f;
                    if (s = Fka(this, a, h, u, Math.min(1, (c - .5) / .5), p / Math.abs(p - d), t, l, s),
                    Nka(this.coverage, u))
                        break
                }
                !function(e, t) {
                    if (0 !== e.opacity && (0 !== t.length || e.placeholderFillStyle)) {
                        var i, n, r, o = t[0];
                        o && (i = e.opacity < 1 || e.compositeOperation && "source-over" !== e.compositeOperation || !e._isBottomItem() && o._hasTransparencyChannel());
                        var s, a = e.viewport.getZoom(!0), l = e.viewportToImageZoom(a);
                        1 < t.length && l > e.smoothTileEdgesMinZoom && !e.iOSDevice && e.getRotation(!0) % 360 == 0 && Eka.supportsCanvas && (i = !0,
                        n = o.getScaleForEdgeSmoothing(),
                        r = o.getTranslationForEdgeSmoothing(n, e._drawer.getCanvasSize(!1), e._drawer.getCanvasSize(!0))),
                        i && (n || (s = e.viewport.viewportToViewerElementRectangle(e.getClippedBounds(!0)).getIntegerBoundingBox().times(Eka.pixelDensityRatio),
                        e._drawer.viewer.viewport.getFlip() && (0 === e.viewport.degrees && e.getRotation(!0) % 360 == 0 || (s.x = e._drawer.viewer.container.clientWidth - (s.x + s.width)))),
                        e._drawer._clear(!0, s)),
                        n || (0 !== e.viewport.degrees && e._drawer._offsetForRotation({
                            degrees: e.viewport.degrees,
                            useSketch: i
                        }),
                        e.getRotation(!0) % 360 != 0 && e._drawer._offsetForRotation({
                            degrees: e.getRotation(!0),
                            point: e.viewport.pixelFromPointNoRotate(e._getRotationPoint(!0), !0),
                            useSketch: i
                        }),
                        0 === e.viewport.degrees && e.getRotation(!0) % 360 == 0 && e._drawer.viewer.viewport.getFlip() && e._drawer._flip());
                        var u = !1;
                        if (e._clip) {
                            e._drawer.saveContext(i);
                            var h = e.imageToViewportRectangle(e._clip, !0);
                            h = h.rotate(-e.getRotation(!0), e._getRotationPoint(!0));
                            var c = e._drawer.viewportToDrawerRectangle(h);
                            n && (c = c.times(n)),
                            r && (c = c.translate(r)),
                            e._drawer.setClip(c, i),
                            u = !0
                        }
                        if (e.placeholderFillStyle && !1 === e._hasOpaqueTile) {
                            var d = e._drawer.viewportToDrawerRectangle(e.getBounds(!0));
                            n && (d = d.times(n)),
                            r && (d = d.translate(r));
                            var f = null;
                            f = "function" == typeof e.placeholderFillStyle ? e.placeholderFillStyle(e, e._drawer.context) : e.placeholderFillStyle,
                            e._drawer.drawRectangle(d, f, i)
                        }
                        for (var p = t.length - 1; 0 <= p; p--)
                            o = t[p],
                            e._drawer.drawTile(o, e._drawingHandler, i, n, r),
                            o.beingDrawn = !0,
                            e.viewer && e.viewer.raiseEvent("tile-drawn", {
                                tiledImage: e,
                                tile: o
                            });
                        u && e._drawer.restoreContext(i),
                        n || (e.getRotation(!0) % 360 != 0 && e._drawer._restoreRotationChanges(i),
                        0 !== e.viewport.degrees && e._drawer._restoreRotationChanges(i)),
                        i && (n && (0 !== e.viewport.degrees && e._drawer._offsetForRotation({
                            degrees: e.viewport.degrees,
                            useSketch: !1
                        }),
                        e.getRotation(!0) % 360 != 0 && e._drawer._offsetForRotation({
                            degrees: e.getRotation(!0),
                            point: e.viewport.pixelFromPointNoRotate(e._getRotationPoint(!0), !0),
                            useSketch: !1
                        })),
                        e._drawer.blendSketch({
                            opacity: e.opacity,
                            scale: n,
                            translate: r,
                            compositeOperation: e.compositeOperation,
                            bounds: s
                        }),
                        n && (e.getRotation(!0) % 360 != 0 && e._drawer._restoreRotationChanges(!1),
                        0 !== e.viewport.degrees && e._drawer._restoreRotationChanges(!1))),
                        n || 0 === e.viewport.degrees && e.getRotation(!0) % 360 == 0 && e._drawer.viewer.viewport.getFlip() && e._drawer._flip(),
                        function(e, t) {
                            if (e.debugMode)
                                for (var i = t.length - 1; 0 <= i; i--) {
                                    var n = t[i];
                                    try {
                                        e._drawer.drawDebugInfo(n, t.length, i, e)
                                    } catch (e) {
                                        Eka.console.error(e)
                                    }
                                }
                        }(e, t)
                    }
                }(this, this.lastDrawn),
                s && !s.context2D ? (function(n, r, o) {
                    r.loading = !0,
                    n._imageLoader.addJob({
                        src: r.url,
                        loadWithAjax: r.loadWithAjax,
                        ajaxHeaders: r.ajaxHeaders,
                        crossOriginPolicy: n.crossOriginPolicy,
                        ajaxWithCredentials: n.ajaxWithCredentials,
                        callback: function(e, t, i) {
                            !function(t, i, e, n, r, o) {
                                if (!n)
                                    return Eka.console.log("Tile %s failed to load: %s - error: %s", i, i.url, r),
                                    t.viewer.raiseEvent("tile-load-failed", {
                                        tile: i,
                                        tiledImage: t,
                                        time: e,
                                        message: r,
                                        tileRequest: o
                                    }),
                                    i.loading = !1,
                                    i.exists = !1;
                                if (e < t.lastResetTime)
                                    return Eka.console.log("Ignoring tile %s loaded before reset: %s", i, i.url),
                                    i.loading = !1;
                                function s() {
                                    var e = t.source.getClosestLevel();
                                    Kka(t, i, n, e, o)
                                }
                                t._midDraw ? window.setTimeout(s, 1) : s()
                            }(n, r, o, e, t, i)
                        },
                        abort: function() {
                            r.loading = !1
                        }
                    })
                }(this, s, l),
                this._needsDraw = !0,
                this._setFullyLoaded(!1)) : this._setFullyLoaded(0 === this._tilesLoading)
            },
            _getCornerTiles: function(e, t, i) {
                var n, r, o, s;
                r = this.wrapHorizontal ? (n = Eka.positiveModulo(t.x, 1),
                Eka.positiveModulo(i.x, 1)) : (n = Math.max(0, t.x),
                Math.min(1, i.x));
                var a = 1 / this.source.aspectRatio;
                s = this.wrapVertical ? (o = Eka.positiveModulo(t.y, a),
                Eka.positiveModulo(i.y, a)) : (o = Math.max(0, t.y),
                Math.min(a, i.y));
                var l = this.source.getTileAtPoint(e, new Eka.Point(n,o))
                  , u = this.source.getTileAtPoint(e, new Eka.Point(r,s))
                  , h = this.source.getNumTiles(e);
                return this.wrapHorizontal && (l.x += h.x * Math.floor(t.x),
                u.x += h.x * Math.floor(i.x)),
                this.wrapVertical && (l.y += h.y * Math.floor(t.y / a),
                u.y += h.y * Math.floor(i.y / a)),
                {
                    topLeft: l,
                    bottomRight: u
                }
            }
        }),
        Xpa = OpenSeadragon,
        Zpa.prototype = {
            destroy: function() {
                this._image = null,
                this._renderedContext = null,
                this._tiles = null
            },
            getImage: function() {
                return this._image
            },
            getRenderedContext: function() {
                if (!this._renderedContext) {
                    var e = document.createElement("canvas");
                    e.width = this._image.width,
                    e.height = this._image.height,
                    this._renderedContext = e.getContext("2d"),
                    this._renderedContext.drawImage(this._image, 0, 0),
                    this._image = null
                }
                return this._renderedContext
            },
            setRenderedContext: function(e) {
                Xpa.console.error("ImageRecord.setRenderedContext is deprecated. The rendered context should be created by the ImageRecord itself when calling ImageRecord.getRenderedContext."),
                this._renderedContext = e
            },
            addTile: function(e) {
                Xpa.console.assert(e, "[ImageRecord.addTile] tile is required"),
                this._tiles.push(e)
            },
            removeTile: function(e) {
                for (var t = 0; t < this._tiles.length; t++)
                    if (this._tiles[t] === e)
                        return void this._tiles.splice(t, 1);
                Xpa.console.warn("[ImageRecord.removeTile] trying to remove unknown tile", e)
            },
            getTileCount: function() {
                return this._tiles.length
            }
        },
        Xpa.TileCache = function(e) {
            e = e || {},
            this._maxImageCacheCount = e.maxImageCacheCount || Xpa.DEFAULT_SETTINGS.maxImageCacheCount,
            this._tilesLoaded = [],
            this._imagesLoaded = [],
            this._imagesLoadedCount = 0
        }
        ,
        Xpa.TileCache.prototype = {
            numTilesLoaded: function() {
                return this._tilesLoaded.length
            },
            cacheTile: function(e) {
                Xpa.console.assert(e, "[TileCache.cacheTile] options is required"),
                Xpa.console.assert(e.tile, "[TileCache.cacheTile] options.tile is required"),
                Xpa.console.assert(e.tile.cacheKey, "[TileCache.cacheTile] options.tile.cacheKey is required"),
                Xpa.console.assert(e.tiledImage, "[TileCache.cacheTile] options.tiledImage is required");
                var t = e.cutoff || 0
                  , i = this._tilesLoaded.length
                  , n = this._imagesLoaded[e.tile.cacheKey];
                if (n || (Xpa.console.assert(e.image, "[TileCache.cacheTile] options.image is required to create an ImageRecord"),
                n = this._imagesLoaded[e.tile.cacheKey] = new Zpa({
                    image: e.image
                }),
                this._imagesLoadedCount++),
                n.addTile(e.tile),
                e.tile.cacheImageRecord = n,
                this._imagesLoadedCount > this._maxImageCacheCount) {
                    for (var r, o, s, a, l, u, h = null, c = -1, d = null, f = this._tilesLoaded.length - 1; 0 <= f; f--)
                        (r = (u = this._tilesLoaded[f]).tile).level <= t || r.beingDrawn || (h ? (a = r.lastTouchTime,
                        o = h.lastTouchTime,
                        l = r.level,
                        s = h.level,
                        (a < o || a == o && s < l) && (h = r,
                        c = f,
                        d = u)) : (h = r,
                        c = f,
                        d = u));
                    h && 0 <= c && (this._unloadTile(d),
                    i = c)
                }
                this._tilesLoaded[i] = new Ypa({
                    tile: e.tile,
                    tiledImage: e.tiledImage
                })
            },
            clearTilesFor: function(e) {
                var t;
                Xpa.console.assert(e, "[TileCache.clearTilesFor] tiledImage is required");
                for (var i = 0; i < this._tilesLoaded.length; ++i)
                    (t = this._tilesLoaded[i]).tiledImage === e && (this._unloadTile(t),
                    this._tilesLoaded.splice(i, 1),
                    i--)
            },
            getImageRecord: function(e) {
                return Xpa.console.assert(e, "[TileCache.getImageRecord] cacheKey is required"),
                this._imagesLoaded[e]
            },
            _unloadTile: function(e) {
                Xpa.console.assert(e, "[TileCache._unloadTile] tileRecord is required");
                var t = e.tile
                  , i = e.tiledImage;
                t.unload(),
                t.cacheImageRecord = null;
                var n = this._imagesLoaded[t.cacheKey];
                n.removeTile(t),
                n.getTileCount() || (n.destroy(),
                delete this._imagesLoaded[t.cacheKey],
                this._imagesLoadedCount--),
                i.viewer.raiseEvent("tile-unloaded", {
                    tile: t,
                    tiledImage: i
                })
            }
        },
        Cqa = OpenSeadragon,
        Cqa.World = function(e) {
            var t = this;
            Cqa.console.assert(e.viewer, "[World] options.viewer is required"),
            Cqa.EventSource.call(this),
            this.viewer = e.viewer,
            this._items = [],
            this._needsDraw = !1,
            this._autoRefigureSizes = !0,
            this._needsSizesFigured = !1,
            this._delegatedFigureSizes = function(e) {
                t._autoRefigureSizes ? t._figureSizes() : t._needsSizesFigured = !0
            }
            ,
            this._figureSizes()
        }
        ,
        Cqa.extend(Cqa.World.prototype, Cqa.EventSource.prototype, {
            addItem: function(e, t) {
                if (Cqa.console.assert(e, "[World.addItem] item is required"),
                Cqa.console.assert(e instanceof Cqa.TiledImage, "[World.addItem] only TiledImages supported at this time"),
                void 0 !== (t = t || {}).index) {
                    var i = Math.max(0, Math.min(this._items.length, t.index));
                    this._items.splice(i, 0, e)
                } else
                    this._items.push(e);
                this._autoRefigureSizes ? this._figureSizes() : this._needsSizesFigured = !0,
                this._needsDraw = !0,
                e.addHandler("bounds-change", this._delegatedFigureSizes),
                e.addHandler("clip-change", this._delegatedFigureSizes),
                this.raiseEvent("add-item", {
                    item: e
                })
            },
            getItemAt: function(e) {
                return Cqa.console.assert(void 0 !== e, "[World.getItemAt] index is required"),
                this._items[e]
            },
            getIndexOfItem: function(e) {
                return Cqa.console.assert(e, "[World.getIndexOfItem] item is required"),
                Cqa.indexOf(this._items, e)
            },
            getItemCount: function() {
                return this._items.length
            },
            setItemIndex: function(e, t) {
                Cqa.console.assert(e, "[World.setItemIndex] item is required"),
                Cqa.console.assert(void 0 !== t, "[World.setItemIndex] index is required");
                var i = this.getIndexOfItem(e);
                if (t >= this._items.length)
                    throw new Error("Index bigger than number of layers.");
                t !== i && -1 !== i && (this._items.splice(i, 1),
                this._items.splice(t, 0, e),
                this._needsDraw = !0,
                this.raiseEvent("item-index-change", {
                    item: e,
                    previousIndex: i,
                    newIndex: t
                }))
            },
            removeItem: function(e) {
                Cqa.console.assert(e, "[World.removeItem] item is required");
                var t = Cqa.indexOf(this._items, e);
                -1 !== t && (e.removeHandler("bounds-change", this._delegatedFigureSizes),
                e.removeHandler("clip-change", this._delegatedFigureSizes),
                e.destroy(),
                this._items.splice(t, 1),
                this._figureSizes(),
                this._needsDraw = !0,
                this._raiseRemoveItem(e))
            },
            removeAll: function() {
                var e, t;
                for (this.viewer._cancelPendingImages(),
                t = 0; t < this._items.length; t++)
                    (e = this._items[t]).removeHandler("bounds-change", this._delegatedFigureSizes),
                    e.removeHandler("clip-change", this._delegatedFigureSizes),
                    e.destroy();
                var i = this._items;
                for (this._items = [],
                this._figureSizes(),
                this._needsDraw = !0,
                t = 0; t < i.length; t++)
                    e = i[t],
                    this._raiseRemoveItem(e)
            },
            resetItems: function() {
                for (var e = 0; e < this._items.length; e++)
                    this._items[e].reset()
            },
            update: function() {
                for (var e = !1, t = 0; t < this._items.length; t++)
                    e = this._items[t].update() || e;
                return e
            },
            draw: function() {
                for (var e = 0; e < this._items.length; e++)
                    this._items[e].draw();
                this._needsDraw = !1
            },
            needsDraw: function() {
                for (var e = 0; e < this._items.length; e++)
                    if (this._items[e].needsDraw())
                        return !0;
                return this._needsDraw
            },
            getHomeBounds: function() {
                return this._homeBounds.clone()
            },
            getContentFactor: function() {
                return this._contentFactor
            },
            setAutoRefigureSizes: function(e) {
                (this._autoRefigureSizes = e) & this._needsSizesFigured && (this._figureSizes(),
                this._needsSizesFigured = !1)
            },
            arrange: function(e) {
                var t, i = (e = e || {}).immediately || !1, n = e.layout || Cqa.DEFAULT_SETTINGS.collectionLayout, r = e.rows || Cqa.DEFAULT_SETTINGS.collectionRows, o = e.columns || Cqa.DEFAULT_SETTINGS.collectionColumns, s = e.tileSize || Cqa.DEFAULT_SETTINGS.collectionTileSize, a = s + (e.tileMargin || Cqa.DEFAULT_SETTINGS.collectionTileMargin);
                t = !e.rows && o ? o : Math.ceil(this._items.length / r);
                var l, u, h, c, d, f = 0, p = 0;
                this.setAutoRefigureSizes(!1);
                for (var g = 0; g < this._items.length; g++)
                    g && g % t == 0 && ("horizontal" === n ? (p += a,
                    f = 0) : (f += a,
                    p = 0)),
                    c = (h = (u = (l = this._items[g]).getBounds()).width > u.height ? s : s * (u.width / u.height)) * (u.height / u.width),
                    d = new Cqa.Point(f + (s - h) / 2,p + (s - c) / 2),
                    l.setPosition(d, i),
                    l.setWidth(h, i),
                    "horizontal" === n ? f += a : p += a;
                this.setAutoRefigureSizes(!0)
            },
            _figureSizes: function() {
                var e = this._homeBounds ? this._homeBounds.clone() : null
                  , t = this._contentSize ? this._contentSize.clone() : null
                  , i = this._contentFactor || 0;
                if (this._items.length) {
                    var n = this._items[0]
                      , r = n.getBounds();
                    this._contentFactor = n.getContentSize().x / r.width;
                    for (var o = n.getClippedBounds().getBoundingBox(), s = o.x, a = o.y, l = o.x + o.width, u = o.y + o.height, h = 1; h < this._items.length; h++)
                        r = (n = this._items[h]).getBounds(),
                        this._contentFactor = Math.max(this._contentFactor, n.getContentSize().x / r.width),
                        o = n.getClippedBounds().getBoundingBox(),
                        s = Math.min(s, o.x),
                        a = Math.min(a, o.y),
                        l = Math.max(l, o.x + o.width),
                        u = Math.max(u, o.y + o.height);
                    this._homeBounds = new Cqa.Rect(s,a,l - s,u - a),
                    this._contentSize = new Cqa.Point(this._homeBounds.width * this._contentFactor,this._homeBounds.height * this._contentFactor)
                } else
                    this._homeBounds = new Cqa.Rect(0,0,1,1),
                    this._contentSize = new Cqa.Point(1,1),
                    this._contentFactor = 1;
                this._contentFactor === i && this._homeBounds.equals(e) && this._contentSize.equals(t) || this.raiseEvent("metrics-change", {})
            },
            _raiseRemoveItem: function(e) {
                this.raiseEvent("remove-item", {
                    item: e
                })
            }
        })
    }
    ],
    e = {},
    f.m = d,
    f.c = e,
    f.d = function(e, t, i) {
        f.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: i
        })
    }
    ,
    f.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    f.t = function(t, e) {
        if (1 & e && (t = f(t)),
        8 & e)
            return t;
        if (4 & e && "object" == typeof t && t && t.__esModule)
            return t;
        var i = Object.create(null);
        if (f.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: t
        }),
        2 & e && "string" != typeof t)
            for (var n in t)
                f.d(i, n, function(e) {
                    return t[e]
                }
                .bind(null, n));
        return i
    }
    ,
    f.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return f.d(t, "a", t),
        t
    }
    ,
    f.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    f.p = "",
    f(f.s = 0);
    function f(t) {
        if (e[t])
            return e[t].exports;
        var i = e[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return d[t].call(i.exports, i, i.exports, f),
        i.l = !0,
        i.exports
    }
    var d, e
});